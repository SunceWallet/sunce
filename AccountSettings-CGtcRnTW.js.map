{"version":3,"file":"AccountSettings-CGtcRnTW.js","sources":["../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../node_modules/@material-ui/icons/RemoveRedEye.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/VpnKey.js","../src/ManageSigners/lib/editor.ts","../src/ManageSigners/hooks/useSignersEditor.ts","../src/ManageSigners/components/MultisigEditorContext.tsx","../node_modules/@material-ui/icons/Person.js","../src/ManageSigners/components/NewSignerForm.tsx","../src/ManageSigners/components/ThresholdInput.tsx","../src/ManageSigners/components/SignersEditor.tsx","../src/ManageSigners/components/SignerSelector.tsx","../src/ManageSigners/components/DetailsEditor.tsx","../src/ManageSigners/components/PresetSelector.tsx","../src/ManageSigners/components/ManageSignersDialog.tsx","../src/Icons/components/Merge.tsx","../src/AccountSettings/components/AccountDeletionDialog.tsx","../src/AccountSettings/components/ChangePasswordDialog.tsx","../src/AccountSettings/components/AccountSettings.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport RadioGroupContext from './RadioGroupContext';\nvar RadioGroup = React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      name = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _React$useRef = React.useRef(valueProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(function () {\n    if (!isControlled) {\n      return props.defaultValue;\n    }\n\n    return null;\n  }),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled RadioGroup to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled RadioGroup ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var value = isControlled ? valueProp : valueState;\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      setValue(event.target.value);\n    }\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var context = {\n    name: name,\n    onChange: handleChange,\n    value: value\n  };\n  var handleRef = useForkRef(ref, rootRef);\n  return React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), React.createElement(RadioGroupContext.Provider, {\n    value: context\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  /**\n   * @ignore\n   */\n  actions: PropTypes.shape({\n    current: PropTypes.object\n  }),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * The name used to reference the value of the control.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}), 'VpnKey');\n\nexports.default = _default;","import { Horizon } from \"stellar-sdk\"\nimport { AccountData } from \"~Generic/lib/account\"\n\nexport namespace MultisigPresets {\n  export enum Type {\n    Custom = \"Custom\",\n    OneOutOfN = \"OneOutOfN\",\n    MOutOfN = \"MOutOfN\",\n    SingleSignature = \"SingleSignature\"\n  }\n\n  export interface Custom {\n    thresholds: Horizon.AccountThresholds\n    type: Type.Custom\n  }\n\n  export interface OneOutOfN {\n    type: Type.OneOutOfN\n  }\n\n  export interface MOutOfN {\n    requiredKeyWeight: number\n    type: Type.MOutOfN\n  }\n\n  export interface SingleSignature {\n    type: Type.SingleSignature\n  }\n}\n\nexport type MultisigPreset =\n  | MultisigPresets.Custom\n  | MultisigPresets.OneOutOfN\n  | MultisigPresets.MOutOfN\n  | MultisigPresets.SingleSignature\n\nexport interface SignersEditorState {\n  preset: MultisigPreset\n  signersToAdd: Horizon.AccountSigner[]\n  signersToRemove: Horizon.AccountSigner[]\n}\n\nexport function initializeEditorState(accountData: AccountData): SignersEditorState {\n  let preset: MultisigPreset\n\n  const keyWeights = accountData.signers.map(signer => signer.weight)\n  const maxKeyWeight = Math.max(...keyWeights)\n  const minKeyWeight = Math.min(...keyWeights)\n\n  const equalThresholds =\n    accountData.thresholds.low_threshold === accountData.thresholds.med_threshold &&\n    accountData.thresholds.med_threshold === accountData.thresholds.high_threshold\n  const maxThreshold = Math.max(\n    accountData.thresholds.low_threshold,\n    accountData.thresholds.med_threshold,\n    accountData.thresholds.high_threshold\n  )\n\n  if (accountData.signers.length <= 1) {\n    preset = {\n      type: MultisigPresets.Type.SingleSignature\n    }\n  } else if (minKeyWeight >= maxThreshold) {\n    preset = {\n      type: MultisigPresets.Type.OneOutOfN\n    }\n  } else if (minKeyWeight === maxKeyWeight && equalThresholds) {\n    preset = {\n      requiredKeyWeight: Math.ceil(maxThreshold / minKeyWeight),\n      type: MultisigPresets.Type.MOutOfN\n    }\n  } else {\n    preset = {\n      thresholds: accountData.thresholds,\n      type: MultisigPresets.Type.Custom\n    }\n  }\n\n  return {\n    preset,\n    signersToAdd: [],\n    signersToRemove: []\n  }\n}\n\nexport function getSignatureThreshold(preset: MultisigPreset) {\n  if (\"requiredKeyWeight\" in preset) {\n    return preset.requiredKeyWeight\n  } else if (\"thresholds\" in preset) {\n    return Math.max(preset.thresholds.low_threshold, preset.thresholds.med_threshold, preset.thresholds.high_threshold)\n  }\n}\n\nexport function requiresSignatureThreshold(preset: MultisigPreset) {\n  return preset.type === MultisigPresets.Type.MOutOfN || preset.type === MultisigPresets.Type.Custom\n}\n","import React from \"react\"\nimport { Horizon, Operation, Server, Transaction, xdr } from \"stellar-sdk\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext, SettingsContextType } from \"~App/contexts/settings\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { initializeEditorState, SignersEditorState } from \"../lib/editor\"\n\nexport interface SignersEditorOptions {\n  account: Account\n  horizon: Server\n  sendTransaction: (tx: Transaction) => void\n}\n\nexport interface SignersUpdate {\n  signersToAdd: Horizon.AccountSigner[]\n  signersToRemove: Horizon.AccountSigner[]\n  weightThreshold: number\n}\n\nfunction createTxOperations(\n  accountData: AccountData,\n  settings: SettingsContextType,\n  update: SignersUpdate\n): xdr.Operation[] {\n  const operations: xdr.Operation[] = [\n    // signer removals before adding, so you can remove and immediately re-add signer\n    ...update.signersToRemove.map(signer => {\n      return signer.key === accountData.account_id\n        ? Operation.setOptions({\n            masterWeight: 0,\n            withMuxing: true\n          })\n        : Operation.setOptions({\n            signer: { ed25519PublicKey: signer.key, weight: 0 }\n          })\n    }),\n    ...update.signersToAdd.map(signer =>\n      Operation.setOptions({\n        signer: { ed25519PublicKey: signer.key, weight: signer.weight },\n        withMuxing: true\n      })\n    )\n  ]\n\n  if (!accountData.data_attr[\"config.multisig.coordinator\"]) {\n    operations.push(\n      Operation.manageData({\n        name: \"config.multisig.coordinator\",\n        value: settings.multiSignatureCoordinator,\n        withMuxing: true\n      })\n    )\n  }\n\n  if (\n    update.weightThreshold !== accountData.thresholds.low_threshold &&\n    update.weightThreshold !== accountData.thresholds.med_threshold &&\n    update.weightThreshold !== accountData.thresholds.high_threshold\n  ) {\n    operations.push(\n      Operation.setOptions({\n        lowThreshold: update.weightThreshold,\n        medThreshold: update.weightThreshold,\n        highThreshold: update.weightThreshold,\n        withMuxing: true\n      })\n    )\n  }\n\n  return operations\n}\n\nexport function useSignersEditor(options: SignersEditorOptions) {\n  const accountData = useLiveAccountData(options.account.accountID, options.account.testnet)\n  const settings = React.useContext(SettingsContext)\n\n  const [txCreationPending, setTxCreationPending] = React.useState(false)\n  const [rawEditorState, setRawEditorState] = React.useState<SignersEditorState>()\n\n  const initialEditorState = React.useMemo(() => initializeEditorState(accountData), [accountData])\n  const editorState = rawEditorState || initialEditorState\n\n  const setEditorState = React.useCallback(\n    (update: SignersEditorState | React.SetStateAction<SignersEditorState>) => {\n      if (typeof update === \"function\") {\n        setRawEditorState(prev => update(prev || initialEditorState))\n      } else {\n        setRawEditorState(update)\n      }\n    },\n    [setRawEditorState, initialEditorState]\n  )\n\n  const applyUpdate = async (update: SignersUpdate) => {\n    try {\n      setTxCreationPending(true)\n      const operations = createTxOperations(accountData, settings, update)\n\n      const tx = await createTransaction(operations, {\n        accountData,\n        horizon: options.horizon,\n        walletAccount: options.account\n      })\n\n      const submissionPromise = options.sendTransaction(tx)\n      setTxCreationPending(false)\n\n      await submissionPromise\n    } catch (error) {\n      trackError(error)\n      setTxCreationPending(false)\n    }\n  }\n\n  return {\n    applyUpdate,\n    editorState,\n    setEditorState: setEditorState as React.Dispatch<React.SetStateAction<SignersEditorState>>,\n    txCreationPending\n  }\n}\n","import React from \"react\"\nimport { Server, Transaction } from \"stellar-sdk\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { useSignersEditor, SignersUpdate } from \"../hooks/useSignersEditor\"\nimport { MultisigPresets, SignersEditorState } from \"../lib/editor\"\n\nexport enum Step {\n  Presets,\n  Signers\n}\n\ninterface MultisigEditorContextType {\n  accountID: string\n  currentStep: Step\n  editorState: SignersEditorState\n  setEditorState: React.Dispatch<React.SetStateAction<SignersEditorState>>\n  switchToStep: React.Dispatch<React.SetStateAction<Step>>\n  testnet: boolean\n  txCreationPending: boolean\n  applyUpdate(update: SignersUpdate): any\n}\n\nexport const MultisigEditorContext = React.createContext<MultisigEditorContextType>({\n  accountID: \"\",\n  applyUpdate() {\n    throw Error(\"MultisigEditorContext has not yet been initialized\")\n  },\n  currentStep: Step.Presets,\n  editorState: {\n    preset: {\n      type: MultisigPresets.Type.SingleSignature\n    },\n    signersToAdd: [],\n    signersToRemove: []\n  },\n  setEditorState() {\n    throw Error(\"MultisigEditorContext has not yet been initialized\")\n  },\n  switchToStep() {\n    throw Error(\"MultisigEditorContext has not yet been initialized\")\n  },\n  testnet: false,\n  txCreationPending: false\n})\n\ninterface MultisigEditorProviderProps {\n  account: Account\n  children: React.ReactNode\n  horizon: Server\n  sendTransaction: (tx: Transaction) => void\n}\n\nexport const MultisigEditorProvider = React.memo(function MultisigEditorProvider(props: MultisigEditorProviderProps) {\n  const [currentStep, switchToStep] = React.useState<Step>(Step.Presets)\n  const editor = useSignersEditor(props)\n\n  const contextValue: MultisigEditorContextType = {\n    ...editor,\n    accountID: props.account.accountID,\n    currentStep,\n    switchToStep,\n    testnet: props.account.testnet\n  }\n\n  return <MultisigEditorContext.Provider value={contextValue}>{props.children}</MultisigEditorContext.Provider>\n})\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport TextField from \"@material-ui/core/TextField\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\"\nimport { useIsSmallMobile, useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport theme from \"~App/theme\"\n\ninterface FormValues {\n  publicKey: string\n  weight: string\n}\n\ninterface FormErrors {\n  publicKey?: Error\n  weight?: Error\n}\n\ninterface Props {\n  errors: FormErrors\n  values: FormValues\n  onCancel: () => void\n  onSubmit: () => void\n  onUpdate: (values: Partial<FormValues>) => void\n  style?: React.CSSProperties\n}\n\nfunction NewSignerForm(props: Props) {\n  const isSmallScreen = useIsMobile()\n  const isTinyScreen = useIsSmallMobile()\n  const { t } = useTranslation()\n\n  return (\n    <ListItem style={props.style}>\n      <ListItemIcon>\n        <PersonAddIcon style={{ fontSize: \"2rem\" }} />\n      </ListItemIcon>\n      <ListItemText>\n        <HorizontalLayout>\n          <TextField\n            autoFocus={import.meta.env.VITE_PLATFORM !== \"ios\"}\n            error={!!props.errors.publicKey}\n            label={\n              props.errors.publicKey\n                ? props.errors.publicKey.message\n                : t(\"account-settings.manage-signers.signers-editor.new-signer.label\")\n            }\n            placeholder={\n              isSmallScreen\n                ? t(\"account-settings.manage-signers.signers-editor.new-signer.placeholder.short\")\n                : t(\"account-settings.manage-signers.signers-editor.new-signer.placeholder.long\")\n            }\n            onChange={event => props.onUpdate({ publicKey: event.target.value.trim() })}\n            style={{ flexGrow: 1 }}\n            InputProps={isTinyScreen ? { style: { fontSize: \"0.8rem\" } } : undefined}\n            value={props.values.publicKey}\n          />\n        </HorizontalLayout>\n      </ListItemText>\n      <ListItemIcon style={{ marginLeft: 8, minWidth: 0 }}>\n        <IconButton\n          color=\"primary\"\n          onClick={props.onSubmit}\n          style={{ borderColor: theme.palette.primary.main, borderStyle: \"solid\", borderWidth: 1.5, padding: 8 }}\n        >\n          <CheckIcon />\n        </IconButton>\n      </ListItemIcon>\n      <ListItemIcon style={{ minWidth: 0 }}>\n        <IconButton onClick={props.onCancel}>\n          <CloseIcon />\n        </IconButton>\n      </ListItemIcon>\n    </ListItem>\n  )\n}\n\nexport default NewSignerForm\n","import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { getSignatureThreshold } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\n\ninterface ThresholdInputProps {\n  inputRef?: React.Ref<any>\n}\n\nfunction ThresholdInput(props: ThresholdInputProps) {\n  const { editorState, setEditorState } = React.useContext(MultisigEditorContext)\n  const { preset } = editorState\n\n  const value = String(getSignatureThreshold(preset))\n\n  const setThreshold = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.persist()\n\n      setEditorState(prev => {\n        const newThreshold = Number.parseInt(event.target.value, 10)\n\n        if (\"requiredKeyWeight\" in prev.preset) {\n          return {\n            ...prev,\n            preset: {\n              ...prev.preset,\n              requiredKeyWeight: newThreshold\n            }\n          }\n        } else if (\"thresholds\" in prev.preset) {\n          return {\n            ...prev,\n            preset: {\n              ...prev.preset,\n              thresholds: {\n                high_threshold: newThreshold,\n                med_threshold: newThreshold,\n                low_threshold: newThreshold\n              }\n            }\n          }\n        } else {\n          throw Error(`Cannot update thresholds for multi-sig preset of type \"${prev.preset.type}\"`)\n        }\n      })\n    },\n    [setEditorState]\n  )\n\n  return (\n    <TextField\n      inputProps={{\n        min: 1,\n        style: {\n          maxWidth: 32,\n          padding: \"16px 14px\",\n          textAlign: \"center\"\n        }\n      }}\n      inputRef={props.inputRef}\n      onChange={setThreshold}\n      type=\"number\"\n      value={value}\n      variant=\"outlined\"\n    />\n  )\n}\n\nexport default React.memo(ThresholdInput)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Horizon } from \"stellar-sdk\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Divider from \"@material-ui/core/Divider\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport PersonIcon from \"@material-ui/icons/Person\"\nimport RemoveIcon from \"@material-ui/icons/RemoveCircle\"\nimport { AccountsContext } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport ButtonListItem from \"~Generic/components/ButtonListItem\"\nimport { Address } from \"~Generic/components/PublicKey\"\nimport { useFederationLookup } from \"~Generic/hooks/stellar\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { isPublicKey, isStellarAddress } from \"~Generic/lib/stellar-address\"\nimport { requiresSignatureThreshold } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\nimport NewSignerForm from \"./NewSignerForm\"\nimport ThresholdInput from \"./ThresholdInput\"\n\ninterface SignerFormValues {\n  publicKey: string\n  weight: string\n}\n\ninterface SignerFormErrors {\n  publicKey?: Error\n  weight?: Error\n}\n\nfunction useFormValidation() {\n  const { t } = useTranslation()\n  return function validateNewSignerValues(\n    values: SignerFormValues,\n    signers: Horizon.AccountSigner[]\n  ): SignerFormErrors {\n    const errors: SignerFormErrors = {}\n\n    if (!isPublicKey(values.publicKey) && !isStellarAddress(values.publicKey)) {\n      errors.publicKey = new Error(\n        t(\"account-settings.manage-signers.signers-editor.validation.invalid-stellar-address\")\n      )\n    } else if (signers.find(existingSigner => existingSigner.key === values.publicKey)) {\n      errors.publicKey = new Error(t(\"account-settings.manage-signers.signers-editor.validation.existing-signer\"))\n    }\n    if (!values.weight.match(/^[0-9]+$/)) {\n      errors.weight = new Error(t(\"account-settings.manage-signers.signers-editor.validation.integer-required\"))\n    }\n\n    return errors\n  }\n}\n\nconst listItemStyles: React.CSSProperties = {\n  background: \"white\",\n  boxShadow: \"0 8px 12px 0 rgba(0, 0, 0, 0.1)\"\n}\n\ninterface SignersEditorProps {\n  signers: Horizon.AccountSigner[]\n  showKeyWeights?: boolean\n  testnet: boolean\n}\n\nfunction SignersEditor(props: SignersEditorProps) {\n  const { accounts } = React.useContext(AccountsContext)\n  const { editorState, setEditorState, testnet } = React.useContext(MultisigEditorContext)\n  const { lookupFederationRecord } = useFederationLookup()\n  const isSmallScreen = useIsMobile()\n  const validateNewSignerValues = useFormValidation()\n  const thresholdInputRef = React.createRef<HTMLInputElement>()\n\n  const { t } = useTranslation()\n  const { preset } = editorState\n\n  const [isEditingNewSigner, setIsEditingNewSigner] = React.useState(false)\n  const [newSignerErrors, setNewSignerErrors] = React.useState<SignerFormErrors>({})\n  const [newSignerValues, setNewSignerValues] = React.useState<SignerFormValues>({\n    publicKey: \"\",\n    weight: \"1\"\n  })\n\n  const editNewSigner = React.useCallback(() => setIsEditingNewSigner(true), [setIsEditingNewSigner])\n\n  const addSigner = (signer: Horizon.AccountSigner) =>\n    setEditorState(prev => ({\n      ...prev,\n      signersToAdd: [...prev.signersToAdd, signer]\n    }))\n\n  const removeSigner = (signer: Horizon.AccountSigner) => {\n    setEditorState(prev => ({\n      ...prev,\n      signersToAdd: prev.signersToAdd.filter(someSignerToBeAddd => someSignerToBeAddd.key !== signer.key),\n      signersToRemove: [...prev.signersToRemove, signer]\n    }))\n    thresholdInputRef.current?.focus()\n  }\n\n  const createCosigner = async () => {\n    try {\n      const federationRecord =\n        newSignerValues.publicKey.indexOf(\"*\") > -1 ? await lookupFederationRecord(newSignerValues.publicKey) : null\n\n      const cosignerPublicKey = federationRecord ? federationRecord.account_id : newSignerValues.publicKey\n      const errors = validateNewSignerValues(newSignerValues, props.signers)\n\n      if (Object.keys(errors).length > 0) {\n        return setNewSignerErrors(errors)\n      }\n\n      addSigner({\n        key: cosignerPublicKey,\n        type: \"ed25519_public_key\",\n        weight: parseInt(newSignerValues.weight, 10)\n      })\n\n      setIsEditingNewSigner(false)\n      setNewSignerErrors({})\n      setNewSignerValues({\n        publicKey: \"\",\n        weight: \"1\"\n      })\n\n      thresholdInputRef.current?.focus()\n    } catch (error) {\n      trackError(error)\n    }\n  }\n\n  const updateNewSignerValues = (values: Partial<SignerFormValues>) => {\n    setNewSignerValues(prevValues => ({\n      ...prevValues,\n      ...values\n    }))\n  }\n\n  return (\n    <List disablePadding={isSmallScreen}>\n      {isEditingNewSigner ? (\n        <NewSignerForm\n          errors={newSignerErrors}\n          onCancel={() => setIsEditingNewSigner(false)}\n          onSubmit={createCosigner}\n          onUpdate={updateNewSignerValues}\n          style={listItemStyles}\n          values={newSignerValues}\n        />\n      ) : (\n        <ButtonListItem gutterBottom onClick={editNewSigner}>\n          <AddIcon />\n          &nbsp;&nbsp;\n          {t(\"account-settings.manage-signers.action.add-signer\")}\n        </ButtonListItem>\n      )}\n      {props.signers.map(signer => (\n        <ListItem key={signer.key} style={listItemStyles}>\n          <ListItemIcon>\n            <PersonIcon style={{ fontSize: \"2rem\" }} />\n          </ListItemIcon>\n          <ListItemText\n            primary={<Address address={signer.key} testnet={props.testnet} variant=\"full\" />}\n            secondary={\n              <>\n                {props.showKeyWeights ? (\n                  <span style={{ marginRight: 24 }}>\n                    {t(\"account-settings.manage-signers.signers-editor.list.item.weight\")}: {signer.weight}\n                  </span>\n                ) : null}\n                {accounts.some(account => account.publicKey === signer.key && account.testnet === testnet) ? (\n                  <span>{t(\"account-settings.manage-signers.signers-editor.list.item.local-key\")}</span>\n                ) : null}\n              </>\n            }\n          />\n          <ListItemSecondaryAction>\n            <IconButton aria-label=\"Remove\" disabled={props.signers.length === 1} onClick={() => removeSigner(signer)}>\n              <RemoveIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n      {requiresSignatureThreshold(preset) ? (\n        <>\n          <ListItem style={listItemStyles}>\n            <ListItemIcon>\n              <div />\n            </ListItemIcon>\n            <ListItemText\n              primary={t(\"account-settings.manage-signers.signers-editor.threshold.primary\")}\n              secondary={t(\"account-settings.manage-signers.signers-editor.threshold.secondary\")}\n              style={{ flexGrow: 0, marginRight: 32 }}\n            />\n            <ListItemText>\n              <ThresholdInput inputRef={thresholdInputRef} />\n            </ListItemText>\n          </ListItem>\n          <Divider />\n        </>\n      ) : null}\n    </List>\n  )\n}\n\nexport default SignersEditor\n","import List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Radio from \"@material-ui/core/Radio\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Horizon } from \"stellar-sdk\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { Address } from \"~Generic/components/PublicKey\"\n\ninterface SignerSelectorProps {\n  accounts: Account[]\n  onSelect: (signer: Horizon.AccountSigner) => void\n  selected: Horizon.AccountSigner | undefined\n  signers: Horizon.AccountSigner[]\n  testnet: boolean\n}\n\nfunction SignerSelector(props: SignerSelectorProps) {\n  const { t } = useTranslation()\n  return (\n    <RadioGroup value={props.selected?.key || \"\"}>\n      <List>\n        {props.signers.map(signer => (\n          <ListItem button key={signer.key} onClick={() => props.onSelect(signer)}>\n            <ListItemIcon>\n              <Radio edge=\"start\" value={signer.key} />\n            </ListItemIcon>\n            <ListItemText\n              primary={<Address address={signer.key} variant=\"full\" testnet={props.testnet} />}\n              secondary={\n                props.accounts.some(\n                  account => account.publicKey === signer.key && account.testnet === props.testnet\n                ) ? (\n                  <span>{t(\"account-settings.manage-signers.signers-editor.list.item.local-key\")}</span>\n                ) : null\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n    </RadioGroup>\n  )\n}\n\nexport default React.memo(SignerSelector)\n","import Typography from \"@material-ui/core/Typography\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Horizon } from \"stellar-sdk\"\nimport { AccountsContext } from \"~App/contexts/accounts\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport Portal from \"~Generic/components/Portal\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, RefStateObject } from \"~Generic/hooks/userinterface\"\nimport { Box, VerticalLayout } from \"~Layout/components/Box\"\nimport { MultisigPreset, MultisigPresets } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\nimport SignersEditor from \"./SignersEditor\"\nimport SignerSelector from \"./SignerSelector\"\n\nconst PresetDescription = React.memo(function PresetDescription(props: { preset: MultisigPreset }) {\n  const { t } = useTranslation()\n  let description = \"\"\n  let extraDescription = \"\"\n\n  if (props.preset.type === MultisigPresets.Type.SingleSignature) {\n    description = t(\"account-settings.manage-signers.preset-description.single-signature\")\n  } else if (props.preset.type === MultisigPresets.Type.OneOutOfN) {\n    description = t(\"account-settings.manage-signers.preset-description.one-out-of-n\")\n  } else if (props.preset.type === MultisigPresets.Type.MOutOfN) {\n    description = t(\"account-settings.manage-signers.preset-description.m-out-of-n\", {\n      count: props.preset.requiredKeyWeight || 0\n    })\n  }\n\n  if (props.preset.type === MultisigPresets.Type.SingleSignature) {\n    // Nothing to show\n  } else if (props.preset.type === MultisigPresets.Type.OneOutOfN) {\n    extraDescription = t(\"account-settings.manage-signers.preset-description-extra.one-out-of-n\")\n  } else if (props.preset.type === MultisigPresets.Type.MOutOfN) {\n    extraDescription = t(\"account-settings.manage-signers.preset-description-extra.m-out-of-n\")\n  }\n\n  return (\n    <>\n      <Typography align=\"center\" color=\"textSecondary\" gutterBottom>\n        {description}\n      </Typography>\n      {extraDescription ? (\n        <Typography align=\"center\" color=\"textSecondary\">\n          {extraDescription}\n        </Typography>\n      ) : null}\n    </>\n  )\n})\n\ninterface DetailsEditorProps {\n  actionsRef: RefStateObject | undefined\n  disabled?: boolean\n  onSubmit: () => Promise<any>\n  signers: Horizon.AccountSigner[]\n  showKeyWeights?: boolean\n  testnet: boolean\n}\n\nfunction DetailsEditor(props: DetailsEditorProps) {\n  const [selectedSigner, setSelectedSigner] = React.useState<Horizon.AccountSigner | undefined>()\n  const { t } = useTranslation()\n  const { accounts } = React.useContext(AccountsContext)\n  const { accountID, editorState, setEditorState, testnet } = React.useContext(MultisigEditorContext)\n  const accountData = useLiveAccountData(accountID, testnet)\n  const isSmallScreen = useIsMobile()\n\n  const showSignerSelection =\n    editorState.preset.type === MultisigPresets.Type.SingleSignature && accountData.signers.length > 1\n\n  const selectSingleSigner = React.useCallback(\n    (newlySelectedSigner: Horizon.AccountSigner) => {\n      setSelectedSigner(newlySelectedSigner)\n      setEditorState(prev => ({\n        ...prev,\n        signersToAdd: [],\n        signersToRemove: accountData.signers.filter(signer => signer.key !== newlySelectedSigner.key)\n      }))\n    },\n    [accountData, setEditorState]\n  )\n\n  const disabled = props.disabled || (showSignerSelection && !selectedSigner)\n\n  return (\n    <VerticalLayout>\n      {showSignerSelection ? (\n        <SignerSelector\n          accounts={accounts}\n          onSelect={selectSingleSigner}\n          selected={selectedSigner}\n          signers={accountData.signers}\n          testnet={testnet}\n        />\n      ) : (\n        <SignersEditor {...props} />\n      )}\n      <Box margin=\"32px 0 0\">\n        <PresetDescription preset={editorState.preset} />\n      </Box>\n      <Portal target={props.actionsRef?.element}>\n        <DialogActionsBox desktopStyle={{ margin: 0 }}>\n          <ActionButton disabled={disabled} icon={<CheckIcon />} onClick={props.onSubmit} type=\"submit\">\n            {isSmallScreen\n              ? t(\"account-settings.manage-signers.action.apply.short\")\n              : t(\"account-settings.manage-signers.action.apply.long\")}\n          </ActionButton>\n        </DialogActionsBox>\n      </Portal>\n    </VerticalLayout>\n  )\n}\n\nexport default React.memo(DetailsEditor)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport List from \"@material-ui/core/List\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Radio from \"@material-ui/core/Radio\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport Typography from \"@material-ui/core/Typography\"\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport AccountSettingsItem from \"~AccountSettings/components/AccountSettingsItem\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport Portal from \"~Generic/components/Portal\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { RefStateObject } from \"~Generic/hooks/userinterface\"\nimport { VerticalLayout } from \"~Layout/components/Box\"\nimport { MultisigPreset, MultisigPresets } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\n\ninterface PresetSelectorItemProps {\n  onChange: () => void\n  primary: React.ReactNode\n  secondary: React.ReactNode\n  selected: boolean\n}\n\nconst PresetSelectorItem = React.memo(function PresetSelectorItem(props: PresetSelectorItemProps) {\n  return (\n    <AccountSettingsItem\n      icon={<Radio checked={props.selected} color=\"primary\" onChange={props.onChange} />}\n      onClick={props.onChange}\n    >\n      <ListItemText primary={props.primary} secondary={props.secondary} />\n    </AccountSettingsItem>\n  )\n})\n\ninterface PresetSelectorProps {\n  actionsRef: RefStateObject | undefined\n  onProceed: () => void\n  style?: React.CSSProperties\n}\n\nfunction PresetSelector(props: PresetSelectorProps) {\n  const { accountID, editorState, setEditorState, testnet } = React.useContext(MultisigEditorContext)\n  const { t } = useTranslation()\n  const accountData = useLiveAccountData(accountID, testnet)\n  const minKeyWeight = Math.min(...accountData.signers.map(signer => signer.weight))\n\n  // Signers editor only makes sense for multi-sig setups or when switching back to single sig\n  const canProceed = editorState.preset.type !== MultisigPresets.Type.SingleSignature || accountData.signers.length > 1\n\n  const setPreset = (preset: MultisigPreset) =>\n    setEditorState(prev => ({\n      ...prev,\n      preset\n    }))\n\n  return (\n    <VerticalLayout>\n      <Typography gutterBottom style={{ marginLeft: 8, marginRight: 8 }} variant=\"h6\">\n        {t(\"account-settings.manage-signers.preset-selector.title\")}\n      </Typography>\n      <RadioGroup>\n        <List style={props.style}>\n          <PresetSelectorItem\n            onChange={() => setPreset({ type: MultisigPresets.Type.SingleSignature })}\n            primary={t(\"account-settings.manage-signers.preset-selector.options.single-signature.primary\")}\n            selected={editorState.preset.type === MultisigPresets.Type.SingleSignature}\n            secondary={t(\"account-settings.manage-signers.preset-selector.options.single-signature.secondary\")}\n          />\n          <PresetSelectorItem\n            onChange={() =>\n              setPreset({\n                requiredKeyWeight: accountData.thresholds.high_threshold || minKeyWeight,\n                type: MultisigPresets.Type.MOutOfN\n              })\n            }\n            primary={t(\"account-settings.manage-signers.preset-selector.options.m-out-of-n.primary\")}\n            selected={editorState.preset.type === MultisigPresets.Type.MOutOfN}\n            secondary={t(\"account-settings.manage-signers.preset-selector.options.m-out-of-n.secondary\")}\n          />\n          <PresetSelectorItem\n            onChange={() => setPreset({ type: MultisigPresets.Type.OneOutOfN })}\n            primary={t(\"account-settings.manage-signers.preset-selector.options.one-out-of-n.primary\")}\n            selected={editorState.preset.type === MultisigPresets.Type.OneOutOfN}\n            secondary={t(\"account-settings.manage-signers.preset-selector.options.one-out-of-n.secondary\")}\n          />\n        </List>\n      </RadioGroup>\n      <Portal target={props.actionsRef?.element}>\n        <DialogActionsBox desktopStyle={{ margin: 0 }}>\n          <ActionButton disabled={!canProceed} icon={<RightIcon />} onClick={props.onProceed} type=\"submit\">\n            {t(\"account-settings.manage-signers.action.proceed\")}\n          </ActionButton>\n        </DialogActionsBox>\n      </Portal>\n    </VerticalLayout>\n  )\n}\n\nexport default React.memo(PresetSelector)\n","import React from \"react\"\nimport { Horizon } from \"stellar-sdk\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport * as routes from \"~App/routes\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useDialogActions, useRouter } from \"~Generic/hooks/userinterface\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { CustomError } from \"~Generic/lib/errors\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport Carousel from \"~Layout/components/Carousel\"\nimport DialogBody from \"~Layout/components/DialogBody\"\nimport { MultisigPreset, MultisigPresets } from \"~ManageSigners/lib/editor\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\nimport DetailsEditor from \"./DetailsEditor\"\nimport { MultisigEditorContext, MultisigEditorProvider, Step } from \"./MultisigEditorContext\"\nimport PresetSelector from \"./PresetSelector\"\n\nfunction getUpdatedSigners(\n  accountData: AccountData,\n  signersToAdd: Horizon.AccountSigner[],\n  signersToRemove: Horizon.AccountSigner[]\n) {\n  const signersPubKeysToAdd = signersToAdd.map(signer => signer.key)\n  const signersPubKeysToRemove = signersToRemove.map(signer => signer.key)\n\n  const isNotToBeAdded = (signer: Horizon.AccountSigner) => signersPubKeysToAdd.indexOf(signer.key) === -1\n  const isNotToBeRemoved = (signer: Horizon.AccountSigner) => signersPubKeysToRemove.indexOf(signer.key) === -1\n\n  const updatedSigners = [...accountData.signers.filter(isNotToBeAdded).filter(isNotToBeRemoved), ...signersToAdd]\n\n  return [\n    ...updatedSigners.filter(signer => signer.key !== accountData.id).reverse(),\n    ...updatedSigners.filter(signer => signer.key === accountData.id)\n  ]\n}\n\nfunction getWeightThreshold(preset: MultisigPreset, signers: Horizon.AccountSigner[]): number {\n  if (preset.type === MultisigPresets.Type.SingleSignature) {\n    return 0\n  } else if (preset.type === MultisigPresets.Type.OneOutOfN) {\n    return Math.min(...signers.map(signer => signer.weight))\n  } else if (preset.type === MultisigPresets.Type.MOutOfN) {\n    return preset.requiredKeyWeight\n  } else {\n    return preset.thresholds.high_threshold\n  }\n}\n\nfunction validate(updatedSigners: Horizon.AccountSigner[], weightThreshold: number) {\n  const totalKeyWeight = updatedSigners.reduce((total, signer) => total + signer.weight, 0)\n\n  if (weightThreshold < 0 || (weightThreshold < 1 && updatedSigners.length > 1)) {\n    throw CustomError(\"MultiSigConfigThresholdTooLowError\", `Signature threshold too low.`)\n  } else if (weightThreshold > totalKeyWeight) {\n    throw CustomError(\"MultiSigConfigThresholdLockError\", `Signature threshold too high. You would lock your account.`)\n  }\n}\n\ninterface Props {\n  account: Account\n  onCancel: () => void\n}\n\nfunction ManageSignersDialogContent(props: Props) {\n  const { accountID, applyUpdate, currentStep, editorState, setEditorState, switchToStep, testnet } = React.useContext(\n    MultisigEditorContext\n  )\n  const accountData = useLiveAccountData(accountID, testnet)\n  const dialogActionsRef = useDialogActions()\n  const router = useRouter()\n\n  // store value of initial editorState to detect if changes were made\n  const baseStateRef = React.useRef(editorState)\n\n  const updatedSigners = getUpdatedSigners(accountData, editorState.signersToAdd, editorState.signersToRemove)\n  const allDefaultKeyweights = updatedSigners.every(signer => signer.weight === 1)\n\n  const proceedToSigners = React.useCallback(() => {\n    router.history.push(routes.manageAccountSignersDetails(props.account.id))\n    switchToStep(Step.Signers)\n  }, [props.account.id, router.history, switchToStep])\n\n  const switchBackToPresets = React.useCallback(() => {\n    // reset editor state\n    setEditorState(prev => ({ ...prev, signersToRemove: [], signersToAdd: [] }))\n    switchToStep(Step.Presets)\n  }, [switchToStep, setEditorState])\n\n  React.useEffect(() => {\n    if (matchesRoute(router.location.pathname, routes.manageAccountSigners(props.account.id), true)) {\n      switchBackToPresets()\n    }\n  }, [router.location.pathname, props.account.id, switchBackToPresets])\n\n  const submit = async () => {\n    try {\n      const weightThreshold = getWeightThreshold(editorState.preset, updatedSigners)\n\n      validate(updatedSigners, weightThreshold)\n\n      await applyUpdate({\n        signersToAdd: editorState.signersToAdd,\n        signersToRemove: editorState.signersToRemove,\n        weightThreshold\n      })\n\n      baseStateRef.current = editorState\n\n      setEditorState(prev => ({\n        ...prev,\n        signersToAdd: [],\n        signersToRemove: []\n      }))\n    } catch (error) {\n      trackError(error)\n    }\n  }\n\n  // disable submit if no changes were made\n  const disabled = React.useMemo(() => {\n    const baseState = baseStateRef.current\n    const samePreset =\n      editorState.preset.type === \"Custom\" && baseState.preset.type === \"Custom\"\n        ? editorState.preset.thresholds.high_threshold === baseState.preset.thresholds.high_threshold &&\n          editorState.preset.thresholds.med_threshold === baseState.preset.thresholds.med_threshold &&\n          editorState.preset.thresholds.low_threshold === baseState.preset.thresholds.low_threshold\n        : editorState.preset.type === \"MOutOfN\" && baseState.preset.type === \"MOutOfN\"\n        ? editorState.preset.requiredKeyWeight === baseState.preset.requiredKeyWeight\n        : editorState.preset.type === baseState.preset.type\n\n    if (\n      (editorState.preset.type === \"Custom\" || editorState.preset.type === \"MOutOfN\") &&\n      accountData.signers.length + editorState.signersToAdd.length < 2\n    ) {\n      return true\n    }\n\n    return editorState.signersToAdd.length === 0 && editorState.signersToRemove.length === 0 && samePreset\n  }, [accountData, editorState])\n\n  return (\n    <DialogBody actions={dialogActionsRef}>\n      <Carousel current={currentStep === Step.Signers ? 1 : 0}>\n        <PresetSelector\n          actionsRef={currentStep === Step.Presets ? dialogActionsRef : undefined}\n          onProceed={proceedToSigners}\n          style={{ marginBottom: 24 }}\n        />\n        <DetailsEditor\n          actionsRef={currentStep === Step.Signers ? dialogActionsRef : undefined}\n          disabled={disabled}\n          onSubmit={submit}\n          signers={updatedSigners}\n          showKeyWeights={!allDefaultKeyweights}\n          testnet={testnet}\n        />\n      </Carousel>\n    </DialogBody>\n  )\n}\n\ninterface ManageSignersDialogProps {\n  account: Account\n  onClose: () => void\n}\n\nfunction ManageSignersDialog(props: ManageSignersDialogProps) {\n  return (\n    <TransactionSender account={props.account}>\n      {({ horizon, sendTransaction }) => (\n        <MultisigEditorProvider account={props.account} horizon={horizon} sendTransaction={sendTransaction}>\n          <ManageSignersDialogContent account={props.account} onCancel={props.onClose} />\n        </MultisigEditorProvider>\n      )}\n    </TransactionSender>\n  )\n}\n\nexport default React.memo(ManageSignersDialog)\n","import * as React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\ninterface Props {\n  className?: string\n  onClick?: () => void\n  style?: React.CSSProperties\n}\n\nfunction MergeIcon(props: Props) {\n  return (\n    <SvgIcon transform=\"rotate(90)\" viewBox=\"0 0 24 20\" {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M17 20.41L18.41 19 15 15.59 13.59 17 17 20.41zM7.5 8H11v5.59L5.59 19 7 20.41l6-6V8h3.5L12 3.5 7.5 8z\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default MergeIcon\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Operation, Transaction, Server } from \"stellar-sdk\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport Switch from \"@material-ui/core/Switch\"\nimport Typography from \"@material-ui/core/Typography\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport WarnIcon from \"@material-ui/icons/Warning\"\nimport AccountSelectionList from \"~Account/components/AccountSelectionList\"\nimport { Account, AccountsContext } from \"~App/contexts/accounts\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, useIsSmallMobile } from \"~Generic/hooks/userinterface\"\nimport { ActionButton, ConfirmDialog, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport MainTitle from \"~Generic/components/MainTitle\"\nimport MergeIcon from \"~Icons/components/Merge\"\nimport DialogBody from \"~Layout/components/DialogBody\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\n\nconst redText: React.CSSProperties = {\n  color: \"red\"\n}\n\ninterface DeletionConfirmationDialogProps {\n  merging: boolean\n  onCancel: () => void\n  onClose: () => void\n  onConfirm: () => void\n  open: boolean\n}\n\nconst DeletionConfirmationDialog = React.memo(function DeletionConfirmationDialog(\n  props: DeletionConfirmationDialogProps\n) {\n  const { t } = useTranslation()\n  return (\n    <ConfirmDialog\n      cancelButton={\n        <ActionButton onClick={props.onCancel}>{t(\"account-settings.account-deletion.action.cancel\")}</ActionButton>\n      }\n      confirmButton={\n        <ActionButton onClick={props.onConfirm} type=\"primary\">\n          {t(\"account-settings.account-deletion.action.confirm\")}\n        </ActionButton>\n      }\n      open={props.open}\n      onClose={props.onClose}\n      title={t(\"account-settings.account-deletion.confirm.title\")}\n    >\n      {t(\"account-settings.account-deletion.confirm.text.delete\")}\n      {props.merging ? ` ${t(\"account-settings.account-deletion.confirm.text.merge\")}. ` : \". \"}\n      {t(\"account-settings.account-deletion.confirm.text.confirm\")}\n    </ConfirmDialog>\n  )\n})\n\ninterface WarningDialogProps {\n  onClose: () => void\n  open: boolean\n  title: string\n  warning: React.ReactNode\n}\n\nconst WarningDialog = React.memo(function WarningDialog(props: WarningDialogProps) {\n  const { t } = useTranslation()\n  return (\n    <ConfirmDialog\n      cancelButton={null}\n      confirmButton={\n        <ActionButton onClick={props.onClose} type=\"primary\">\n          {t(\"account-settings.account-deletion.warning-dialog.close.label\")}\n        </ActionButton>\n      }\n      onClose={props.onClose}\n      open={props.open}\n      title={props.title}\n    >\n      {props.warning}\n    </ConfirmDialog>\n  )\n})\n\ninterface Warning {\n  open: boolean\n  text: string\n  title: string\n}\n\ninterface AccountDeletionDialogProps {\n  account: Account\n  horizon: Server\n  onClose: () => void\n  onDelete: () => void\n  sendTransaction: (transaction: Transaction) => void\n}\n\nfunction AccountDeletionDialog(props: AccountDeletionDialogProps) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const horizon = props.horizon\n\n  const { accounts } = React.useContext(AccountsContext)\n  const [mergeAccountEnabled, setMergeAccountEnabled] = React.useState(false)\n  const [confirmationPending, setConfirmationPending] = React.useState(false)\n  const [selectedMergeAccount, setSelectedMergeAccount] = React.useState<Account | null>(null)\n  const [warning, setWarning] = React.useState<Warning | undefined>()\n\n  const { t } = useTranslation()\n  const isSmallScreen = useIsMobile()\n  const isTinyScreen = useIsSmallMobile()\n\n  const cancelConfirmation = React.useCallback(() => setConfirmationPending(false), [setConfirmationPending])\n  const toggleMergeAccount = React.useCallback(() => setMergeAccountEnabled(enabled => !enabled), [])\n\n  const closeWarning = React.useCallback(() => {\n    setWarning(prev => (prev ? { ...prev, open: false } : undefined))\n  }, [setWarning])\n\n  const onMerge = async () => {\n    if (selectedMergeAccount) {\n      const transaction = await createTransaction(\n        [\n          Operation.accountMerge({\n            source: props.account.accountID,\n            destination: selectedMergeAccount.publicKey,\n            withMuxing: true\n          })\n        ],\n        { accountData, horizon, walletAccount: props.account }\n      )\n\n      await props.sendTransaction(transaction)\n    }\n  }\n\n  const onConfirm = () => {\n    setConfirmationPending(false)\n    if (mergeAccountEnabled) {\n      onMerge()\n    } else {\n      props.onDelete()\n    }\n  }\n\n  const requestConfirmation = React.useCallback(() => {\n    if (mergeAccountEnabled && accountData.subentry_count > 0) {\n      setWarning({\n        open: true,\n        text: t(\"account-settings.account-deletion.warnings.cannot-merge.text\"),\n        title: t(\"account-settings.account-deletion.warnings.cannot-merge.title\")\n      })\n    } else {\n      setConfirmationPending(true)\n    }\n  }, [accountData, mergeAccountEnabled, setConfirmationPending, setWarning, t])\n\n  const remainingFundsContent = React.useMemo(\n    () =>\n      accountData.balances.length > 0 ? (\n        <>\n          <HorizontalLayout alignItems=\"center\" style={{ marginTop: 24, marginLeft: -12, marginBottom: 8 }}>\n            <Switch color=\"primary\" checked={mergeAccountEnabled} onChange={toggleMergeAccount} />\n            <Typography\n              onClick={toggleMergeAccount}\n              variant=\"h6\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                height: 48,\n                cursor: \"pointer\",\n                fontSize: isSmallScreen ? 16 : 20,\n                marginLeft: 8\n              }}\n            >\n              {t(\"account-settings.account-deletion.remaining-funds.text\")}\n            </Typography>\n          </HorizontalLayout>\n\n          <AccountSelectionList\n            disabled={!mergeAccountEnabled}\n            accounts={accounts.filter(\n              account =>\n                account.accountID !== props.account.accountID &&\n                account.publicKey !== props.account.publicKey &&\n                account.testnet === props.account.testnet\n            )}\n            testnet={props.account.testnet}\n            onChange={setSelectedMergeAccount}\n          />\n        </>\n      ) : null,\n    [\n      accountData.balances.length,\n      mergeAccountEnabled,\n      toggleMergeAccount,\n      isSmallScreen,\n      t,\n      accounts,\n      props.account.accountID,\n      props.account.publicKey,\n      props.account.testnet\n    ]\n  )\n\n  return (\n    <DialogBody\n      background={<WarnIcon style={{ fontSize: 160 }} />}\n      noMaxWidth\n      preventNotchSpacing\n      top={\n        <MainTitle\n          hideBackButton\n          title={<span style={redText}>{t(\"account-settings.account-deletion.title\")}</span>}\n          titleColor=\"inherit\"\n          onBack={props.onClose}\n          style={{ marginTop: 0, marginLeft: 0 }}\n        />\n      }\n      actions={\n        <DialogActionsBox>\n          {mergeAccountEnabled ? (\n            <ActionButton\n              autoFocus\n              disabled={!selectedMergeAccount}\n              icon={<MergeIcon />}\n              onClick={requestConfirmation}\n              type=\"primary\"\n            >\n              {isTinyScreen\n                ? t(\"account-settings.account-deletion.action.merge.short\")\n                : t(\"account-settings.account-deletion.action.merge.long\")}\n            </ActionButton>\n          ) : (\n            <ActionButton autoFocus icon={<DeleteIcon />} onClick={requestConfirmation} type=\"primary\">\n              {t(\"account-settings.account-deletion.action.delete\")}\n            </ActionButton>\n          )}\n        </DialogActionsBox>\n      }\n    >\n      <DialogContent style={{ padding: 0 }}>\n        <DialogContentText style={{ marginTop: 8 }}>\n          {t(\"account-settings.account-deletion.text.1\", { accountName: props.account.name })}\n        </DialogContentText>\n        <DialogContentText style={{ display: accountData.balances.length > 0 ? undefined : \"none\", marginTop: 16 }}>\n          {t(\"account-settings.account-deletion.text.2\")}\n        </DialogContentText>\n\n        {remainingFundsContent}\n\n        <DeletionConfirmationDialog\n          merging={mergeAccountEnabled}\n          onCancel={cancelConfirmation}\n          onClose={cancelConfirmation}\n          onConfirm={onConfirm}\n          open={confirmationPending}\n        />\n        <WarningDialog\n          onClose={closeWarning}\n          open={Boolean(warning?.open)}\n          title={warning?.title || \"\"}\n          warning={warning?.text}\n        />\n      </DialogContent>\n    </DialogBody>\n  )\n}\n\ninterface AccountDeletionContainerProps {\n  account: Account\n  onClose: () => void\n  onDeleted: () => void\n}\n\nfunction AccountDeletionContainer(props: AccountDeletionContainerProps) {\n  const { deleteAccount } = React.useContext(AccountsContext)\n\n  const onDelete = () => {\n    deleteAccount(props.account.id)\n    props.onClose()\n    props.onDeleted()\n  }\n\n  return (\n    <TransactionSender account={props.account} onSubmissionCompleted={onDelete}>\n      {txContext => <AccountDeletionDialog {...props} {...txContext} onDelete={onDelete} />}\n    </TransactionSender>\n  )\n}\n\nexport default AccountDeletionContainer\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport Switch from \"@material-ui/core/Switch\"\nimport LockIcon from \"@material-ui/icons/LockOutlined\"\nimport LockOpenIcon from \"@material-ui/icons/LockOpenOutlined\"\nimport { Account, AccountsContext } from \"~App/contexts/accounts\"\nimport { NotificationsContext } from \"~App/contexts/notifications\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { renderFormFieldError, isWrongPasswordError } from \"~Generic/lib/errors\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport MainTitle from \"~Generic/components/MainTitle\"\nimport PasswordField from \"~Generic/components/PasswordField\"\nimport { Box, HorizontalLayout } from \"~Layout/components/Box\"\nimport DialogBody from \"~Layout/components/DialogBody\"\n\nconst adornmentLock = (\n  <InputAdornment position=\"start\">\n    <LockIcon color=\"disabled\" />\n  </InputAdornment>\n)\n\nconst adornmentLockOpen = (\n  <InputAdornment position=\"start\">\n    <LockOpenIcon color=\"disabled\" />\n  </InputAdornment>\n)\n\ninterface FormValues {\n  nextPassword: string\n  nextPasswordRepeat: string\n  prevPassword: string\n}\n\ntype Errors = { [key in keyof FormValues]?: Error | undefined }\n\nfunction useFormValidation() {\n  const { t } = useTranslation()\n  return function validate(formValues: FormValues, passwordMode: \"change\" | \"initial\" | \"remove\") {\n    const errors: Errors = {}\n\n    if (!formValues.prevPassword && passwordMode !== \"initial\") {\n      errors.prevPassword = new Error(t(\"account-settings.set-password.validation.previous-password-missing\"))\n    }\n    if (passwordMode !== \"remove\") {\n      if (!formValues.nextPassword) {\n        errors.nextPassword = new Error(t(\"account-settings.set-password.validation.next-password-missing\"))\n      }\n      if (!formValues.nextPasswordRepeat) {\n        errors.nextPasswordRepeat = new Error(\n          t(\"account-settings.set-password.validation.next-password-repeat-missing\")\n        )\n      }\n      if (formValues.nextPasswordRepeat && formValues.nextPassword !== formValues.nextPasswordRepeat) {\n        errors.nextPasswordRepeat = new Error(t(\"account-settings.set-password.validation.passwords-no-match\"))\n      }\n    }\n\n    const success = Object.keys(errors).length === 0\n    return { errors, success }\n  }\n}\n\ninterface ActionsProps {\n  isPasswordProtected: boolean\n  removePassword: boolean\n  onSubmit: () => void\n  onToggleRemovePassword: () => void\n}\n\nfunction Actions(props: ActionsProps) {\n  const isSmallScreen = useIsMobile()\n  const { t } = useTranslation()\n\n  return (\n    <DialogActionsBox smallDialog>\n      {props.isPasswordProtected ? (\n        isSmallScreen ? (\n          <ActionButton onClick={props.onToggleRemovePassword} type=\"secondary\">\n            {props.removePassword\n              ? t(\"account-settings.set-password.action.change-password.long\")\n              : t(\"account-settings.set-password.action.remove-password.long\")}\n          </ActionButton>\n        ) : (\n          <FormControlLabel\n            control={<Switch checked={props.removePassword} color=\"primary\" onChange={props.onToggleRemovePassword} />}\n            label={t(\"account-settings.set-password.action.remove-password.long\")}\n          />\n        )\n      ) : null}\n      <ActionButton icon={<LockIcon />} onClick={props.onSubmit} type=\"primary\">\n        {isSmallScreen\n          ? props.removePassword\n            ? t(\"account-settings.set-password.action.remove-password.long\")\n            : t(\"account-settings.set-password.action.change-password.short\")\n          : props.removePassword\n          ? t(\"account-settings.set-password.action.remove-password.long\")\n          : t(\"account-settings.set-password.action.change-password.long\")}\n      </ActionButton>\n    </DialogActionsBox>\n  )\n}\n\ninterface Props {\n  account: Account\n  onClose: () => void\n}\n\nfunction ChangePasswordDialog(props: Props) {\n  const Accounts = React.useContext(AccountsContext)\n  const { showError, showNotification } = React.useContext(NotificationsContext)\n  const [errors, setErrors] = React.useState<Errors>({})\n  const [formValues, setFormValues] = React.useState<FormValues>({\n    nextPassword: \"\",\n    nextPasswordRepeat: \"\",\n    prevPassword: \"\"\n  })\n  const [removingPassword, setRemovingPassword] = React.useState(false)\n  const validate = useFormValidation()\n  const { t } = useTranslation()\n\n  const changePassword = () => {\n    const { id: accountID, requiresPassword } = props.account\n    const { nextPassword, prevPassword } = formValues\n\n    const passwordMode = requiresPassword ? \"change\" : \"initial\"\n\n    const validation = validate(formValues, passwordMode)\n    setErrors(validation.errors)\n\n    if (validation.success) {\n      // TODO: Show confirmation prompt (dialog)\n      Accounts.changePassword(accountID, prevPassword, nextPassword)\n        .then(() => {\n          showNotification(\n            \"success\",\n            requiresPassword\n              ? t(\"account-settings.set-password.notification.password-changed\")\n              : t(\"account-settings.set-password.notification.password-set\")\n          )\n          props.onClose()\n        })\n        .catch(error => {\n          isWrongPasswordError(error) ? setErrors({ prevPassword: error }) : showError(error)\n        })\n    }\n  }\n  const onClose = () => {\n    props.onClose()\n    setFormValues({\n      nextPassword: \"\",\n      nextPasswordRepeat: \"\",\n      prevPassword: \"\"\n    })\n  }\n  const removePassword = () => {\n    const validation = validate(formValues, \"remove\")\n    setErrors(validation.errors)\n\n    if (validation.success) {\n      // TODO: Show confirmation prompt (dialog)\n      Accounts.removePassword(props.account.id, formValues.prevPassword)\n        .then(() => {\n          showNotification(\"success\", t(\"account-settings.set-password.notification.password-removed\"))\n          props.onClose()\n        })\n        .catch(error => {\n          isWrongPasswordError(error) ? setErrors({ prevPassword: error }) : showError(error)\n        })\n    }\n  }\n  const setFormValue = (name: keyof FormValues, value: string) => {\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n  }\n  const toggleRemovePassword = () => setRemovingPassword(!removingPassword)\n\n  return (\n    <DialogBody\n      noMaxWidth\n      preventNotchSpacing\n      top={\n        <MainTitle\n          hideBackButton\n          onBack={onClose}\n          title={\n            props.account.requiresPassword\n              ? t(\"account-settings.set-password.title.change-password\")\n              : t(\"account-settings.set-password.title.set-password\")\n          }\n        />\n      }\n      actions={\n        <DialogActions style={{ margin: \"32px 0 0\" }}>\n          <Actions\n            isPasswordProtected={props.account.requiresPassword}\n            onSubmit={removingPassword ? removePassword : changePassword}\n            onToggleRemovePassword={toggleRemovePassword}\n            removePassword={removingPassword}\n          />\n        </DialogActions>\n      }\n    >\n      <HorizontalLayout\n        alignSelf=\"center\"\n        justifyContent=\"space-evenly\"\n        margin=\"24px 0 0\"\n        width=\"calc(100% + 16px)\"\n        wrap=\"wrap\"\n      >\n        <Box basis=\"400px\" grow={0} hidden={!props.account.requiresPassword} margin=\"0 16px\" shrink>\n          <PasswordField\n            autoFocus={props.account.requiresPassword && import.meta.env.VITE_PLATFORM !== \"ios\"}\n            error={Boolean(errors.prevPassword)}\n            label={\n              errors.prevPassword\n                ? renderFormFieldError(errors.prevPassword, t)\n                : t(\"account-settings.set-password.textfield.prev-password.label\")\n            }\n            fullWidth\n            margin=\"normal\"\n            value={formValues.prevPassword}\n            onChange={event => setFormValue(\"prevPassword\", event.target.value)}\n            InputProps={{ startAdornment: adornmentLockOpen }}\n          />\n        </Box>\n        <Box basis=\"400px\" grow={0} hidden={removingPassword} margin=\"0 16px\" shrink>\n          <PasswordField\n            autoFocus={!props.account.requiresPassword && import.meta.env.VITE_PLATFORM !== \"ios\"}\n            error={Boolean(errors.nextPassword)}\n            label={\n              errors.nextPassword\n                ? renderFormFieldError(errors.nextPassword, t)\n                : t(\"account-settings.set-password.textfield.next-password.label\")\n            }\n            fullWidth\n            margin=\"normal\"\n            value={formValues.nextPassword}\n            onChange={event => setFormValue(\"nextPassword\", event.target.value)}\n            InputProps={{ startAdornment: adornmentLock }}\n          />\n          <PasswordField\n            error={Boolean(errors.nextPasswordRepeat)}\n            label={\n              errors.nextPasswordRepeat\n                ? renderFormFieldError(errors.nextPasswordRepeat, t)\n                : t(\"account-settings.set-password.textfield.next-password-repeat.label\")\n            }\n            fullWidth\n            margin=\"normal\"\n            value={formValues.nextPasswordRepeat}\n            onChange={event => setFormValue(\"nextPasswordRepeat\", event.target.value)}\n            InputProps={{ startAdornment: adornmentLock }}\n          />\n        </Box>\n      </HorizontalLayout>\n    </DialogBody>\n  )\n}\n\nexport default React.memo(ChangePasswordDialog)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport List from \"@material-ui/core/List\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport GroupIcon from \"@material-ui/icons/Group\"\nimport KeyIcon from \"@material-ui/icons/VpnKey\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext } from \"~App/contexts/settings\"\nimport * as routes from \"~App/routes\"\nimport { Address } from \"~Generic/components/PublicKey\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, useRouter } from \"~Generic/hooks/userinterface\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport Carousel from \"~Layout/components/Carousel\"\nimport ManageSignersDialog from \"~ManageSigners/components/ManageSignersDialog\"\nimport AccountDeletionDialog from \"./AccountDeletionDialog\"\nimport AccountSettingsItem from \"./AccountSettingsItem\"\nimport ChangePasswordDialog from \"./ChangePasswordDialog\"\nimport ExportKeyDialog from \"./ExportKeyDialog\"\n\nfunction SettingsDialogs(props: Props) {\n  const router = useRouter()\n\n  const showChangePassword = matchesRoute(router.location.pathname, routes.changeAccountPassword(\"*\"))\n  const showDeleteAccount = matchesRoute(router.location.pathname, routes.deleteAccount(\"*\"))\n  const showExportKey = matchesRoute(router.location.pathname, routes.exportSecretKey(\"*\"))\n  const showManageSigners = matchesRoute(router.location.pathname, routes.manageAccountSigners(\"*\"))\n\n  const navigateTo = React.useMemo(\n    () => ({\n      accountSettings: () => router.history.push(routes.accountSettings(props.account.id)),\n      allAccounts: () => router.history.push(routes.allAccounts())\n    }),\n    [router.history, props.account]\n  )\n\n  return (\n    <>\n      <div style={{ display: showChangePassword ? undefined : \"none\", height: \"100%\" }}>\n        <ChangePasswordDialog account={props.account} onClose={navigateTo.accountSettings} />\n      </div>\n      <div style={{ display: showDeleteAccount ? undefined : \"none\", height: \"100%\" }}>\n        <AccountDeletionDialog\n          account={props.account}\n          onClose={navigateTo.accountSettings}\n          onDeleted={navigateTo.allAccounts}\n        />\n      </div>\n      <div style={{ display: showExportKey ? undefined : \"none\", height: \"100%\" }}>\n        <ExportKeyDialog account={props.account} onClose={navigateTo.accountSettings} variant=\"export\" />\n      </div>\n      <div style={{ display: showManageSigners ? undefined : \"none\", height: \"100%\" }}>\n        <ManageSignersDialog account={props.account} onClose={navigateTo.accountSettings} />\n      </div>\n    </>\n  )\n}\n\ninterface SuspendedItemProps {\n  account: Account\n  listItemTextStyle?: React.CSSProperties\n  onClick: () => void\n}\n\nfunction MultiSigItem(props: SuspendedItemProps) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const isSmallScreen = useIsMobile()\n  const { t } = useTranslation()\n\n  const disabled = Boolean(\n    !accountData.balances.length || !accountData.signers.some(signer => signer.key === props.account.publicKey)\n  )\n\n  const ListItemSecondaryContent = props.account.cosignerOf ? (\n    <>\n      {t(\"account-settings.settings.multi-sig.text.secondary.cosigner-of\")}{\" \"}\n      <Address address={props.account.cosignerOf} testnet={props.account.testnet} />\n    </>\n  ) : isSmallScreen ? (\n    t(\"account-settings.settings.multi-sig.text.secondary.short\")\n  ) : (\n    t(\"account-settings.settings.multi-sig.text.secondary.long\")\n  )\n\n  return (\n    <AccountSettingsItem\n      caret=\"right\"\n      disabled={disabled}\n      icon={<GroupIcon style={{ fontSize: \"100%\" }} />}\n      onClick={props.onClick}\n    >\n      <ListItemText\n        primary={t(\"account-settings.settings.multi-sig.text.primary\")}\n        secondary={ListItemSecondaryContent}\n        style={props.listItemTextStyle}\n      />\n    </AccountSettingsItem>\n  )\n}\n\nfunction DeleteAccountItem(props: SuspendedItemProps) {\n  // call useLiveAccountData to make sure this item is suspended until the account data is available\n  // necessary because the AccountDeletion dialog needs account data and would be suspended anyways\n  useLiveAccountData(props.account.publicKey, props.account.testnet)\n  const { t } = useTranslation()\n\n  return (\n    <AccountSettingsItem caret=\"right\" icon={<DeleteIcon style={{ fontSize: \"100%\" }} />} onClick={props.onClick}>\n      <ListItemText\n        primary={t(\"account-settings.settings.delete-account.text.primary\")}\n        style={props.listItemTextStyle}\n      />\n    </AccountSettingsItem>\n  )\n}\n\ninterface Props {\n  account: Account\n}\n\nfunction AccountSettings(props: Props) {\n  const isSmallScreen = useIsMobile()\n  const router = useRouter()\n  const { t } = useTranslation()\n  const settings = React.useContext(SettingsContext)\n\n  const navigateTo = React.useMemo(\n    () => ({\n      changePassword: () => router.history.push(routes.changeAccountPassword(props.account.id)),\n      deleteAccount: () => router.history.push(routes.deleteAccount(props.account.id)),\n      exportSecretKey: () => router.history.push(routes.exportSecretKey(props.account.id)),\n      manageSigners: () => router.history.push(routes.manageAccountSigners(props.account.id))\n    }),\n    [router.history, props.account]\n  )\n\n  const showSettingsOverview = matchesRoute(router.location.pathname, routes.accountSettings(props.account.id), true)\n\n  const listItemTextStyle: React.CSSProperties = React.useMemo(\n    () => ({\n      paddingRight: isSmallScreen ? 0 : undefined\n    }),\n    [isSmallScreen]\n  )\n\n  return (\n    <Carousel current={showSettingsOverview ? 0 : 1}>\n      <List style={{ padding: isSmallScreen ? 0 : \"24px 16px\" }}>\n        <AccountSettingsItem\n          caret=\"right\"\n          icon={<KeyIcon style={{ fontSize: \"100%\" }} />}\n          onClick={navigateTo.changePassword}\n        >\n          <ListItemText\n            primary={\n              props.account.requiresPassword\n                ? t(\"account-settings.settings.set-password.text.primary.account-protected\")\n                : t(\"account-settings.settings.set-password.text.primary.account-not-protected\")\n            }\n            secondary={\n              props.account.requiresPassword\n                ? t(\"account-settings.settings.set-password.text.secondary.account-protected\")\n                : t(\"account-settings.settings.set-password.text.secondary.account-not-protected\")\n            }\n            style={listItemTextStyle}\n          />\n        </AccountSettingsItem>\n        {settings.multiSignature ? (\n          <React.Suspense fallback={null}>\n            <MultiSigItem {...props} listItemTextStyle={listItemTextStyle} onClick={navigateTo.manageSigners} />\n          </React.Suspense>\n        ) : null}\n        <AccountSettingsItem\n          caret=\"right\"\n          icon={<EyeIcon style={{ fontSize: \"100%\" }} />}\n          onClick={navigateTo.exportSecretKey}\n        >\n          <ListItemText\n            primary={t(\"account-settings.settings.export-secret-key.text.primary\")}\n            secondary={t(\"account-settings.settings.export-secret-key.text.secondary\")}\n            style={listItemTextStyle}\n          />\n        </AccountSettingsItem>\n        <React.Suspense fallback={null}>\n          <DeleteAccountItem {...props} listItemTextStyle={listItemTextStyle} onClick={navigateTo.deleteAccount} />\n        </React.Suspense>\n      </List>\n      <SettingsDialogs account={props.account} />\n    </Carousel>\n  )\n}\n\nexport default React.memo(AccountSettings)\n"],"names":["ListItemSecondaryAction","RadioGroup","handleChange","require$$0","require$$1","MultisigPresets","Type","Operation","Step","MultisigEditorProvider","useFormValidation","ThresholdInput","PresetDescription","SignerSelector","PresetSelectorItem","routes.manageAccountSignersDetails","routes.manageAccountSigners","PresetSelector","DetailsEditor","React.createElement","DeletionConfirmationDialog","WarningDialog","deleteAccount","validate","routes.changeAccountPassword","routes.deleteAccount","routes.exportSecretKey","routes.accountSettings","routes.allAccounts","ChangePasswordDialog","AccountDeletionDialog","ManageSignersDialog"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,8]}