{"version":3,"file":"AccountTransactions-DUngX3mh.js","sources":["../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","../node_modules/@material-ui/icons/DoneAll.js","../node_modules/@material-ui/icons/CreditCard.js","../src/Generic/hooks/useFilteredTransactions.ts","../node_modules/@material-ui/icons/ThumbUp.js","../src/Account/components/FriendbotButton.tsx","../node_modules/@material-ui/icons/ArrowRightAlt.js","../node_modules/@material-ui/icons/BarChart.js","../src/Account/components/OfferList.tsx","../node_modules/human-time/human.js","../node_modules/react-human-time/index.js","../src/Account/components/TransactionList.tsx","../src/Account/components/SignatureRequestList.tsx","../src/Account/components/AccountTransactions.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAll');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\"\n}), 'CreditCard');\n\nexports.default = _default;","import React from \"react\"\nimport { DecodedTransactionResponse } from \"./_caches\"\nimport { useLiveRecentTransactions, useOlderTransactions } from \"./stellar-subscriptions\"\n\nfunction useFilteredTransactions(\n  accountId: string,\n  testnet: boolean,\n  filter: (txs: DecodedTransactionResponse[]) => DecodedTransactionResponse[]\n) {\n  const [refetchKey, setRefetchKey] = React.useState<number>(Date.now())\n  const limit = 15\n  const { transactions, olderTransactionsAvailable } = useLiveRecentTransactions(accountId, testnet, refetchKey)\n  const fetchMore = useOlderTransactions(accountId, testnet)\n  const txs = React.useMemo(() => filter(transactions), [transactions])\n\n  const fetchMoreTransactions = async (count: number = 0): Promise<void> => {\n    if (count >= limit) {\n      setRefetchKey(Date.now())\n      return\n    }\n    const unfiltered = await fetchMore()\n    const moreTxs = filter(unfiltered)\n    return fetchMoreTransactions(count + moreTxs.length)\n  }\n\n  React.useEffect(() => {\n    if (txs.length < limit) {\n      fetchMoreTransactions(txs.length)\n    }\n  }, [txs])\n\n  return {\n    olderTransactionsAvailable,\n    transactions: txs,\n    fetchMoreTransactions\n  }\n}\n\nexport default useFilteredTransactions\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z\"\n}), 'ThumbUp');\n\nexports.default = _default;","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { friendbotTopup } from \"~Generic/lib/stellar\"\nimport MainSelectionButton from \"~Generic/components/MainSelectionButton\"\n\ninterface Props {\n  className?: string\n  horizonURL: string\n  publicKey: string\n  style?: React.CSSProperties\n}\n\nfunction FriendbotButton(props: Props) {\n  const [isPending, setPending] = React.useState(false)\n  const { t } = useTranslation()\n\n  const topup = async () => {\n    try {\n      setPending(true)\n      await friendbotTopup(props.horizonURL, props.publicKey)\n\n      // Do not reset the pending state â€“ we want to see the spinner until we receive\n      // the update and hide the whole friendbot button\n    } catch (error) {\n      setPending(false)\n      trackError(error)\n    }\n  }\n\n  return (\n    // Extra padding especially for mobile\n    <MainSelectionButton\n      Icon={isPending ? CircularProgress : ThumbUpIcon}\n      className={props.className}\n      description={t(\"account.transactions.action.friendbot.description\")}\n      label={t(\"account.transactions.action.friendbot.label\")}\n      onClick={topup}\n      style={props.style}\n    />\n  )\n}\n\nexport default FriendbotButton\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z\"\n}), 'BarChart');\n\nexports.default = _default;","import BigNumber from \"big.js\"\nimport React from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { Operation, Server, ServerApi, Transaction } from \"stellar-sdk\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRightAlt\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport BarChartIcon from \"@material-ui/icons/BarChart\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { breakpoints } from \"~App/theme\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { ActionButton } from \"~Generic/components/DialogActions\"\nimport { useHorizon } from \"~Generic/hooks/stellar\"\nimport { useLoadingState } from \"~Generic/hooks/util\"\nimport { useLiveAccountData, useLiveAccountOffers, useOlderOffers } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { offerAssetToAsset } from \"~Generic/lib/stellar\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport { List } from \"~Layout/components/List\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\nimport { SingleBalance } from \"./AccountBalances\"\n\nfunction createDismissalTransaction(\n  horizon: Server,\n  account: Account,\n  accountData: AccountData,\n  offer: ServerApi.OfferRecord\n): Promise<Transaction> {\n  const buying = offerAssetToAsset(offer.buying)\n  const selling = offerAssetToAsset(offer.selling)\n\n  return selling.isNative()\n    ? createTransaction(\n        [\n          Operation.manageBuyOffer({\n            offerId: offer.id,\n            buyAmount: \"0\",\n            buying,\n            price: offer.price,\n            selling,\n            withMuxing: true\n          })\n        ],\n        { accountData, horizon, walletAccount: account }\n      )\n    : createTransaction(\n        [\n          Operation.manageSellOffer({\n            offerId: offer.id,\n            amount: \"0\",\n            buying,\n            price: offer.price,\n            selling,\n            withMuxing: true\n          })\n        ],\n        { accountData, horizon, walletAccount: account }\n      )\n}\n\ninterface OfferListItemProps {\n  accountPublicKey: string\n  offer: ServerApi.OfferRecord\n  onCancel?: () => void\n  style?: React.CSSProperties\n}\n\nconst OfferListItem = React.memo(function OfferListItem(props: OfferListItemProps) {\n  const buying = offerAssetToAsset(props.offer.buying)\n  const selling = offerAssetToAsset(props.offer.selling)\n  const isSmallScreen = useIsMobile()\n  return (\n    <ListItem\n      button={Boolean(props.onCancel) as any}\n      onClick={props.onCancel}\n      style={{ minHeight: isSmallScreen ? 58 : 72, ...props.style }}\n    >\n      <ListItemIcon style={{ marginRight: isSmallScreen ? 0 : undefined }}>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText\n        primary={\n          // Horizon seems to always returns open offers in the format of us\n          // on the seller side, no matter if we submitted a buy or sell order,\n          // so we use the philosophy \"i never 'sell XLM', 'i buy the <other asset>'\"\n          props.offer.seller === props.accountPublicKey && !selling.isNative() ? (\n            <span style={{ fontWeight: \"bold\" }}>\n              <Trans i18nKey=\"account.transactions.offer-list.text.sell\">\n                Sell\n                <SingleBalance\n                  assetCode={selling.getCode()}\n                  balance={props.offer.amount}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n                for\n                <SingleBalance\n                  assetCode={buying.getCode()}\n                  balance={String(BigNumber(props.offer.amount).mul(props.offer.price))}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n              </Trans>\n            </span>\n          ) : (\n            <span style={{ fontWeight: \"bold\" }}>\n              <Trans i18nKey=\"account.transactions.offer-list.text.buy\">\n                Buy\n                <SingleBalance\n                  assetCode={buying.getCode()}\n                  balance={String(BigNumber(props.offer.amount).mul(props.offer.price))}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n                for\n                <SingleBalance\n                  assetCode={selling.getCode()}\n                  balance={props.offer.amount}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n              </Trans>\n            </span>\n          )\n        }\n        primaryTypographyProps={{\n          style: { overflow: \"hidden\", textOverflow: \"ellipsis\" }\n        }}\n        style={{ paddingRight: isSmallScreen ? 0 : undefined }}\n      />\n      <ListItemText\n        primaryTypographyProps={{ align: \"right\" }}\n        style={{ display: isSmallScreen ? \"none\" : undefined, flexShrink: 0, paddingRight: 0 }}\n      >\n        <HorizontalLayout alignItems=\"center\" inline style={{ fontSize: \"1.4rem\" }}>\n          <b>{selling.getCode()}</b>\n          &nbsp;\n          <ArrowRightIcon style={{ fontSize: \"150%\" }} />\n          &nbsp;\n          <b>{buying.getCode()}</b>\n        </HorizontalLayout>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\ninterface LoadMoreOffersListItemProps {\n  onClick: () => void\n  pending?: boolean\n}\n\nconst LoadMoreOffersListItem = React.memo(function LoadMoreOffersListItem(props: LoadMoreOffersListItemProps) {\n  const { t } = useTranslation()\n  return (\n    <ListItem style={{ borderBottom: \"none\", height: 75 }}>\n      <ListItemText disableTypography style={{ textAlign: \"center\" }}>\n        <ActionButton\n          onClick={props.onClick}\n          loading={props.pending}\n          style={{ margin: \"0 auto\", paddingLeft: 16, paddingRight: 16 }}\n          variant=\"text\"\n        >\n          {t(\"account.transactions.transaction-list.load-more.label\")}\n        </ActionButton>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\ninterface Props {\n  account: Account\n  title: React.ReactNode\n}\n\nconst useStyles = makeStyles({\n  expansionPanel: {\n    background: \"transparent\",\n\n    \"&:before\": {\n      background: \"transparent\"\n    }\n  },\n  expansionPanelSummary: {\n    justifyContent: \"flex-start\",\n    minHeight: \"48px !important\",\n    padding: 0\n  },\n  expansionPanelSummaryContent: {\n    flexGrow: 0,\n    marginTop: \"0 !important\",\n    marginBottom: \"0 !important\"\n  },\n  expansionPanelDetails: {\n    display: \"block\",\n    padding: 0\n  },\n  listItem: {\n    padding: \"8px 24px\",\n\n    [breakpoints.down(600)]: {\n      paddingLeft: 24,\n      paddingRight: 24\n    }\n  }\n})\n\nfunction OfferList(props: Props & { sendTransaction: (tx: Transaction) => Promise<void> }) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const classes = useStyles()\n  const horizon = useHorizon(props.account.testnet)\n  const offerHistory = useLiveAccountOffers(props.account.accountID, props.account.testnet)\n  const [moreTxsLoadingState, handleMoreTxsFetch] = useLoadingState()\n  const fetchMoreOffers = useOlderOffers(props.account.accountID, props.account.testnet)\n\n  const [expanded, setExpanded] = React.useState(true)\n\n  const handleFetchMoreOffers = React.useCallback(() => handleMoreTxsFetch(fetchMoreOffers()), [\n    fetchMoreOffers,\n    handleMoreTxsFetch\n  ])\n\n  const onCancel = async (offer: ServerApi.OfferRecord) => {\n    try {\n      const tx = await createDismissalTransaction(horizon, props.account, accountData, offer)\n      await props.sendTransaction(tx)\n    } catch (error) {\n      trackError(error)\n    }\n  }\n\n  return offerHistory.offers.length === 0 ? null : (\n    <List style={{ background: \"transparent\" }}>\n      <ExpansionPanel\n        className={classes.expansionPanel}\n        elevation={0}\n        expanded={expanded}\n        onChange={() => setExpanded(!expanded)}\n      >\n        <ExpansionPanelSummary\n          classes={{ root: classes.expansionPanelSummary, content: classes.expansionPanelSummaryContent }}\n          expandIcon={<ExpandMoreIcon />}\n        >\n          <ListSubheader\n            className={classes.listItem}\n            disableSticky\n            style={{ background: \"transparent\", paddingRight: 0 }}\n          >\n            {props.title}\n          </ListSubheader>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n          {offerHistory.offers.map(offer => (\n            <OfferListItem\n              key={offer.id}\n              accountPublicKey={props.account.accountID}\n              offer={offer}\n              onCancel={() => onCancel(offer)}\n            />\n          ))}\n          {offerHistory.olderOffersAvailable ? (\n            <LoadMoreOffersListItem pending={moreTxsLoadingState.type === \"pending\"} onClick={handleFetchMoreOffers} />\n          ) : null}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </List>\n  )\n}\n\nfunction OfferListContainer(props: Props) {\n  return (\n    <TransactionSender account={props.account}>\n      {({ sendTransaction }) => <OfferList {...props} sendTransaction={sendTransaction} />}\n    </TransactionSender>\n  )\n}\n\nexport default OfferListContainer\n","/**\n * Print a human readable timestamp to the terminal\n * given a number representing seconds\n *\n * Author: Dave Eddy <dave@daveeddy.com>\n * Date: 8/18/2014\n * License: MIT\n */\n\nvar util = require('util');\n\nmodule.exports = human;\n\nfunction human(seconds) {\n  if (seconds instanceof Date)\n    seconds = Math.round((Date.now() - seconds) / 1000);\n  var suffix = seconds < 0 ? 'from now' : 'ago';\n  seconds = Math.abs(seconds);\n\n  var times = [\n    seconds / 60 / 60 / 24 / 365, // years\n    seconds / 60 / 60 / 24 / 30,  // months\n    seconds / 60 / 60 / 24 / 7,   // weeks\n    seconds / 60 / 60 / 24,       // days\n    seconds / 60 / 60,            // hours\n    seconds / 60,                 // minutes\n    seconds                       // seconds\n  ];\n  var names = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second'];\n\n  for (var i = 0; i < names.length; i++) {\n    var time = Math.floor(times[i]);\n    if (time > 1)\n      return util.format('%d %ss %s', time, names[i], suffix);\n    else if (time === 1)\n      return util.format('%d %s %s', time, names[i], suffix);\n  }\n  return util.format('0 seconds %s', suffix);\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar human = require('human-time');\nvar HumanTime = /** @class */ (function (_super) {\n    __extends(HumanTime, _super);\n    function HumanTime(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = _this.getStateFromProps(props);\n        return _this;\n    }\n    HumanTime.prototype.getStateFromProps = function (props) {\n        return {\n            formattedTime: human(new Date(props.time))\n                .replace(/minute/, 'min')\n                .replace(/^.*second.*$/, 'now'),\n        };\n    };\n    HumanTime.prototype.componentDidMount = function () {\n        var _this = this;\n        this._timer = setInterval(function () { return _this.setState(_this.getStateFromProps(_this.props)); }, this.props.period || 30e3);\n    };\n    HumanTime.prototype.componentWillUnmount = function () {\n        clearInterval(this._timer);\n    };\n    HumanTime.prototype.render = function () {\n        return this.state.formattedTime;\n    };\n    return HumanTime;\n}(react_1.Component));\nexports.default = HumanTime;\n//# sourceMappingURL=index.js.map","import BigNumber from \"big.js\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Asset, Networks, Operation, Transaction } from \"stellar-sdk\"\nimport HumanTime from \"react-human-time\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport CallMadeIcon from \"@material-ui/icons/CallMade\"\nimport CallReceivedIcon from \"@material-ui/icons/CallReceived\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext } from \"~App/contexts/settings\"\nimport * as routes from \"~App/routes\"\nimport { useIsMobile, useRouter } from \"~Generic/hooks/userinterface\"\nimport { DecodedTransactionResponse } from \"~Generic/hooks/_caches\"\nimport { getPaymentSummary, PaymentSummary } from \"~Generic/lib/paymentSummary\"\nimport { breakpoints } from \"~App/theme\"\nimport { ActionButton } from \"~Generic/components/DialogActions\"\nimport { InlineErrorBoundary } from \"~Generic/components/ErrorBoundaries\"\nimport { PublicKey } from \"~Generic/components/PublicKey\"\nimport { formatBalance } from \"~Generic/lib/balances\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport { stringifyAssetToReadableString } from \"~Generic/lib/stellar\"\nimport MemoMessage from \"~Transaction/components/MemoMessage\"\nimport TransactionReviewDialog from \"~TransactionReview/components/TransactionReviewDialog\"\nimport { useOperationTitle } from \"~TransactionReview/components/Operations\"\nimport { SingleBalance } from \"./AccountBalances\"\n\nconst dedupe = <T extends any>(array: T[]): T[] => Array.from(new Set(array))\nconst doNothing = () => undefined\n\nfunction sum(...amounts: (string | number | BigNumber)[]): BigNumber {\n  return amounts.reduce<BigNumber>((total, amount) => total.add(amount), BigNumber(0))\n}\n\nfunction EntryAnimation(props: { children: React.ReactNode; animate: boolean }) {\n  return props.animate ? (\n    <Collapse appear enter={false} in timeout={{ enter: 1000 }}>\n      {props.children}\n    </Collapse>\n  ) : (\n    <React.Fragment>{props.children}</React.Fragment>\n  )\n}\n\nfunction OfferDescription(props: {\n  amount: BigNumber\n  buying: Asset\n  offerId: string\n  price: BigNumber\n  selling: Asset\n  type: Operation.ManageBuyOffer[\"type\"] | Operation.ManageSellOffer[\"type\"]\n}) {\n  const { amount, buying, offerId, price, selling } = props\n  const { t } = useTranslation()\n  let prefix: string\n\n  if (offerId === \"0\") {\n    prefix = `${t(\"account.transactions.transaction-list.offer-description.prefix.default\")}: `\n  } else if (amount.eq(0)) {\n    prefix = `${t(\"account.transactions.transaction-list.offer-description.prefix.cancel\")}: `\n  } else {\n    prefix = `${t(\"account.transactions.transaction-list.offer-description.prefix.update\")}: `\n  }\n\n  return (\n    <>\n      {prefix}\n      {props.type === \"manageBuyOffer\"\n        ? t(\n            \"account.transactions.transaction-list.offer-description.buy\",\n            `Buy ${amount.eq(0) ? \"\" : formatBalance(amount.toString())} ${buying.code} for ${\n              amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString())\n            } ${selling.code}`,\n            {\n              buyingAmount: amount.eq(0) ? \"\" : formatBalance(amount.toString()),\n              buyingCode: buying.code,\n              sellingAmount: amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString()),\n              sellingCode: selling.code\n            }\n          )\n        : t(\n            \"account.transactions.transaction-list.offer-description.sell\",\n            `Sell ${amount.eq(0) ? \"\" : formatBalance(amount.toString())} ${selling.code} for ${\n              amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString())\n            } ${buying.code}`,\n            {\n              buyingAmount: amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString()),\n              buyingCode: buying.code,\n              sellingAmount: amount.eq(0) ? \"\" : formatBalance(amount.toString()),\n              sellingCode: selling.code\n            }\n          )}\n    </>\n  )\n}\n\nfunction RemotePublicKeys(props: { publicKeys: string[]; short?: boolean; testnet: boolean }) {\n  const { t } = useTranslation()\n  if (props.publicKeys.length === 0) {\n    return <>-</>\n  } else if (props.publicKeys.length === 1) {\n    return (\n      <PublicKey publicKey={props.publicKeys[0]} testnet={props.testnet} variant={props.short ? \"short\" : \"full\"} />\n    )\n  } else {\n    return (\n      <>\n        <PublicKey publicKey={props.publicKeys[0]} testnet={props.testnet} variant=\"short\" />{\" \"}\n        <i>\n          + {props.publicKeys.length - 1} {t(\"account.transactions.transaction-list.item.remote-public-keys.more\")}\n        </i>\n      </>\n    )\n  }\n}\n\nconst Time = React.memo(function Time(props: { time: string }) {\n  const date = new Date(props.time)\n  return (\n    <span style={{ whiteSpace: \"nowrap\" }}>\n      <HumanTime time={date.getTime()} />\n    </span>\n  )\n})\n\nfunction TransactionIcon(props: { paymentSummary: PaymentSummary; transaction: Transaction }) {\n  if (\n    props.transaction.operations.length === 1 &&\n    [\"manageBuyOffer\", \"manageSellOffer\"].includes(props.transaction.operations[0].type)\n  ) {\n    return <SwapHorizIcon />\n  } else if (props.transaction.operations.length === 1 && props.transaction.operations[0].type === \"changeTrust\") {\n    return BigNumber(props.transaction.operations[0].limit).eq(0) ? <RemoveIcon /> : <AddIcon />\n  } else if (props.transaction.operations.every(operation => operation.type === \"accountMerge\")) {\n    return <CallReceivedIcon />\n  } else if (props.paymentSummary.length === 0) {\n    return <SettingsIcon />\n  } else if (props.paymentSummary.every(summaryItem => summaryItem.balanceChange.gt(0))) {\n    return <CallReceivedIcon />\n  } else if (props.paymentSummary.every(summaryItem => summaryItem.balanceChange.lt(0))) {\n    return <CallMadeIcon />\n  } else {\n    return <SwapHorizIcon />\n  }\n}\n\ninterface TitleTextProps {\n  accountPublicKey: string\n  alwaysShowSource?: boolean\n  createdAt: string\n  paymentSummary: PaymentSummary\n  style?: React.CSSProperties\n  showMemo: boolean\n  transaction: Transaction\n}\n\n// TODO: Re-use code of transaction summary operation heading\n// tslint:disable-next-line no-shadowed-variable\nconst TransactionItemText = React.memo(function TransactionItemText(props: TitleTextProps) {\n  const getOperationTitle = useOperationTitle()\n  const { t } = useTranslation()\n  const remotePublicKeys = props.paymentSummary.reduce(\n    (pubKeys, summaryItem) => pubKeys.concat(summaryItem.publicKeys),\n    [] as string[]\n  )\n\n  const testnet = props.transaction.networkPassphrase === Networks.TESTNET\n\n  const secondary = React.useMemo(\n    () => (\n      <span style={{ display: \"block\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\n        <Time time={props.createdAt} />\n        {props.showMemo && props.transaction.memo.type !== \"none\" ? (\n          <>\n            &nbsp;&nbsp;|&nbsp;&nbsp;\n            <MemoMessage\n              prefix={<>{t(\"account.transactions.transaction-list.item.memo\")}:&nbsp;</>}\n              memo={props.transaction.memo}\n            />\n          </>\n        ) : null}\n      </span>\n    ),\n    [props.createdAt, props.showMemo, props.transaction, t]\n  )\n\n  if (remotePublicKeys.length > 0 && props.paymentSummary.every(summaryItem => summaryItem.balanceChange.gt(0))) {\n    return (\n      <ListItemText\n        primary={\n          <span>\n            {t(\"account.transactions.transaction-list.item.from\")}&nbsp;\n            <RemotePublicKeys publicKeys={remotePublicKeys} short testnet={testnet} />\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  } else if (\n    remotePublicKeys.length > 0 &&\n    props.paymentSummary.every(summaryItem => summaryItem.balanceChange.lt(0))\n  ) {\n    return (\n      <ListItemText\n        primary={\n          <span>\n            {t(\"account.transactions.transaction-list.item.to\")}&nbsp;\n            <RemotePublicKeys publicKeys={remotePublicKeys} short testnet={testnet} />\n            {props.alwaysShowSource ? (\n              <span>\n                &nbsp;{t(\"account.transactions.transaction-list.item.from\")}&nbsp;\n                <PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />{\" \"}\n              </span>\n            ) : null}\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  } else if (props.transaction.operations.length === 1 && props.transaction.operations[0].type === \"changeTrust\") {\n    const operation = props.transaction.operations[0] as Operation.ChangeTrust\n\n    return BigNumber(operation.limit).eq(0) ? (\n      <ListItemText\n        primary={\n          <span>\n            {t(\n              \"account.transactions.transaction-list.item.trust.remove-trust\",\n              `Remove trust in asset ${stringifyAssetToReadableString(operation.line)}`,\n              { asset: stringifyAssetToReadableString(operation.line) }\n            )}\n            {props.alwaysShowSource ? (\n              <>\n                {\" \"}\n                (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n              </>\n            ) : null}\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    ) : (\n      <ListItemText\n        primary={\n          <span>\n            {t(\n              \"account.transactions.transaction-list.item.trust.add-trust\",\n              `Trust asset ${stringifyAssetToReadableString(operation.line)}`,\n              {\n                asset: stringifyAssetToReadableString(operation.line)\n              }\n            )}\n            {props.alwaysShowSource ? (\n              <>\n                {\" \"}\n                (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n              </>\n            ) : null}\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  } else if (\n    props.transaction.operations.length === 1 &&\n    [\"manageBuyOffer\", \"manageSellOffer\"].includes(props.transaction.operations[0].type)\n  ) {\n    const operation = props.transaction.operations[0] as Operation.ManageBuyOffer | Operation.ManageSellOffer\n    const amount = BigNumber(operation.type === \"manageBuyOffer\" ? operation.buyAmount : operation.amount)\n\n    if (String(operation.offerId) === \"0\") {\n      // Create offer\n      return (\n        <ListItemText\n          primary={\n            <span>\n              <OfferDescription {...operation} amount={amount} price={BigNumber(operation.price)} />\n              {props.alwaysShowSource ? (\n                <>\n                  {\" \"}\n                  (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n                </>\n              ) : null}\n            </span>\n          }\n          primaryTypographyProps={{ style: props.style }}\n          secondary={secondary}\n          style={props.style}\n        />\n      )\n    } else if (amount.eq(0)) {\n      // Delete offer\n      return (\n        <ListItemText\n          primary={\n            <span>\n              <OfferDescription {...operation} amount={BigNumber(0)} price={BigNumber(operation.price)} />\n              {props.alwaysShowSource ? (\n                <>\n                  {\" \"}\n                  (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n                </>\n              ) : null}\n            </span>\n          }\n          primaryTypographyProps={{ style: props.style }}\n          secondary={secondary}\n          style={props.style}\n        />\n      )\n    } else {\n      // Update offer\n      return (\n        <ListItemText\n          primary={\n            <span>\n              <OfferDescription {...operation} amount={amount} price={BigNumber(operation.price)} />\n              {props.alwaysShowSource ? (\n                <>\n                  {\" \"}\n                  (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n                </>\n              ) : null}\n            </span>\n          }\n          primaryTypographyProps={{ style: props.style }}\n          secondary={secondary}\n          style={props.style}\n        />\n      )\n    }\n  } else {\n    const formattedOperations = props.transaction.operations.map(getOperationTitle)\n    return (\n      <ListItemText\n        primary={<span>{dedupe(formattedOperations).join(\", \")}</span>}\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  }\n})\n\nfunction TransactionListItemBalance(props: {\n  accountPublicKey: string\n  paymentSummary: PaymentSummary\n  style?: React.CSSProperties\n  transaction: Transaction\n}) {\n  const { paymentSummary } = props\n  const isSmallScreen = useIsMobile()\n\n  const creationOps = props.transaction.operations.filter(\n    (op): op is Operation.CreateAccount => op.type === \"createAccount\"\n  )\n  const paymentOps = props.transaction.operations.filter((op): op is Operation.Payment => op.type === \"payment\")\n\n  // Handle special edge case: Sending money from an account to itself\n  const balanceChange = paymentSummary.every(payment =>\n    payment.publicKeys.every(pubkey => pubkey === props.accountPublicKey)\n  )\n    ? sum(...creationOps.map(op => op.startingBalance), ...paymentOps.map(op => op.amount))\n    : paymentSummary[0].balanceChange\n\n  return (\n    <ListItemText primaryTypographyProps={{ align: \"right\" }} style={{ flexShrink: 0, ...props.style }}>\n      {paymentSummary.length === 0 ? null : (\n        <SingleBalance\n          assetCode={paymentSummary[0].asset.getCode()}\n          balance={balanceChange.toString()}\n          style={isSmallScreen ? { fontSize: \"1rem\" } : { fontSize: \"1.4rem\" }}\n        />\n      )}\n    </ListItemText>\n  )\n}\n\ninterface TransactionListItemProps {\n  accountPublicKey: string\n  alwaysShowSource?: boolean\n  className?: string\n  createdAt: string\n  icon?: React.ReactElement<any>\n  onOpenTransaction?: (transactionHash: string) => void\n  style?: React.CSSProperties\n  transaction: Transaction\n}\n\nexport const TransactionListItem = React.memo(function TransactionListItem(props: TransactionListItemProps) {\n  const { hideMemos } = React.useContext(SettingsContext)\n  const isSmallScreen = useIsMobile()\n\n  const { transaction, onOpenTransaction } = props\n\n  const paymentSummary = getPaymentSummary(props.accountPublicKey, transaction)\n  const onOpen = onOpenTransaction ? () => onOpenTransaction(transaction.hash().toString(\"hex\")) : undefined\n\n  return (\n    <ListItem button={Boolean(onOpen) as any} className={props.className || \"\"} onClick={onOpen} style={props.style}>\n      <ListItemIcon style={{ marginRight: isSmallScreen ? 0 : undefined }}>\n        {props.icon || <TransactionIcon paymentSummary={paymentSummary} transaction={transaction} />}\n      </ListItemIcon>\n      <TransactionItemText\n        accountPublicKey={props.accountPublicKey}\n        alwaysShowSource={props.alwaysShowSource}\n        createdAt={props.createdAt}\n        paymentSummary={paymentSummary}\n        showMemo={!hideMemos}\n        style={{\n          fontSize: isSmallScreen ? \"0.8rem\" : undefined,\n          fontWeight: \"bold\",\n          overflow: \"hidden\",\n          paddingRight: 0,\n          textOverflow: \"ellipsis\"\n        }}\n        transaction={transaction}\n      />\n      <TransactionListItemBalance\n        accountPublicKey={props.accountPublicKey}\n        paymentSummary={paymentSummary}\n        style={{ paddingRight: 0 }}\n        transaction={transaction}\n      />\n    </ListItem>\n  )\n})\n\ninterface LoadMoreTransactionsListItemProps {\n  onClick: () => void\n  pending?: boolean\n}\n\nconst LoadMoreTransactionsListItem = React.memo(function LoadMoreTransactionsListItem(\n  props: LoadMoreTransactionsListItemProps\n) {\n  const { t } = useTranslation()\n  return (\n    <ListItem style={{ borderBottom: \"none\", height: 75 }}>\n      <ListItemText disableTypography style={{ textAlign: \"center\" }}>\n        <ActionButton\n          onClick={props.onClick}\n          loading={props.pending}\n          style={{ margin: \"0 auto\", paddingLeft: 16, paddingRight: 16 }}\n          variant=\"text\"\n        >\n          {t(\"account.transactions.transaction-list.load-more.label\")}\n        </ActionButton>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\nconst useTransactionListStyles = makeStyles({\n  listItem: {\n    padding: \"8px 24px\",\n\n    [breakpoints.down(600)]: {\n      paddingLeft: 24,\n      paddingRight: 24\n    }\n  }\n})\n\ninterface TransactionListProps {\n  account: Account\n  background?: React.CSSProperties[\"background\"]\n  loadingMoreTransactions?: boolean\n  olderTransactionsAvailable?: boolean\n  onFetchMoreTransactions: () => void\n  title: React.ReactNode\n  transactions: DecodedTransactionResponse[]\n}\n\nfunction TransactionList(props: TransactionListProps) {\n  const classes = useTransactionListStyles()\n  const isSmallScreen = useIsMobile()\n  const router = useRouter()\n\n  const openedTxHash = matchesRoute(router.location.pathname, routes.showTransaction(\"*\", \"*\"))\n    ? (router.match.params as { id: string; subaction: string }).subaction\n    : null\n\n  const openedTransaction = React.useMemo(() => {\n    if (!openedTxHash) {\n      return null\n    }\n\n    const txResponse = props.transactions.find(recentTx => recentTx.hash === openedTxHash)\n\n    // TODO: use decoded transaction from cache once we have it\n    const tx = txResponse ? txResponse.decodedTx : null\n\n    // tslint:disable-next-line prefer-object-spread\n    return tx && txResponse ? Object.assign(tx, { created_at: txResponse.created_at }) : tx\n  }, [openedTxHash, props.transactions])\n\n  const openTransaction = React.useCallback(\n    (transactionHash: string) => {\n      router.history.push(routes.showTransaction(props.account.id, transactionHash))\n    },\n    [props.account.id, router.history]\n  )\n\n  const closeTransaction = React.useCallback(() => {\n    router.history.push(routes.account(props.account.id))\n\n    // A little hack to prevent :focus style being set again on list item after closing the dialog\n    setTimeout(() => {\n      if (document.activeElement) {\n        ;(document.activeElement as HTMLElement).blur()\n      }\n    }, 0)\n  }, [props.account.id, router.history])\n\n  const transactionListItems = React.useMemo(\n    () => (\n      <>\n        {props.transactions.map(transaction => (\n          <EntryAnimation\n            key={transaction.hash}\n            // Animate only if it's a new tx, not if we just haven't rendered it before\n            animate={Date.now() - new Date(transaction.created_at).getTime() < 10_000}\n          >\n            <InlineErrorBoundary height={72}>\n              <TransactionListItem\n                key={transaction.hash}\n                accountPublicKey={props.account.publicKey}\n                className={classes.listItem}\n                createdAt={transaction.created_at}\n                onOpenTransaction={openTransaction}\n                transaction={transaction.decodedTx}\n              />\n            </InlineErrorBoundary>\n          </EntryAnimation>\n        ))}\n      </>\n    ),\n    [props.transactions, props.account.publicKey, classes.listItem, openTransaction]\n  )\n\n  if (props.transactions.length === 0 && !props.olderTransactionsAvailable) {\n    return null\n  }\n\n  return (\n    <List disablePadding={isSmallScreen} style={{ background: props.background }}>\n      <ListSubheader className={classes.listItem} disableSticky style={{ background: props.background }}>\n        {props.title}\n      </ListSubheader>\n      {transactionListItems}\n      {props.olderTransactionsAvailable ? (\n        <LoadMoreTransactionsListItem pending={props.loadingMoreTransactions} onClick={props.onFetchMoreTransactions} />\n      ) : null}\n      <TransactionReviewDialog\n        open={openedTransaction !== null}\n        account={props.account}\n        disabled={true}\n        showSource\n        showSubmissionProgress={false}\n        transaction={openedTransaction}\n        onClose={closeTransaction}\n        onSubmitTransaction={doNothing}\n      />\n    </List>\n  )\n}\n\nexport default React.memo(TransactionList)\n","import ListSubheader from \"@material-ui/core/ListSubheader\"\nimport { TransactionStellarUri } from \"@stellarguard/stellar-uri\"\nimport React from \"react\"\nimport { Transaction } from \"stellar-sdk\"\nimport { useRouter } from \"~Generic/hooks/userinterface\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport * as routes from \"~App/routes\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { InlineErrorBoundary } from \"~Generic/components/ErrorBoundaries\"\nimport { MultisigTransactionResponse } from \"~Generic/lib/multisig-service\"\nimport { List } from \"~Layout/components/List\"\nimport { TransactionListItem } from \"./TransactionList\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\n\ninterface SignatureRequestListItemProps {\n  icon?: React.ReactElement<any>\n  onOpenTransaction?: (tx: Transaction, signatureRequest: MultisigTransactionResponse) => void\n  signatureRequest: MultisigTransactionResponse\n  style?: React.CSSProperties\n}\n\nfunction SignatureRequestListItem(props: SignatureRequestListItemProps) {\n  const { onOpenTransaction, signatureRequest } = props\n\n  const tx = React.useMemo(() => new TransactionStellarUri(signatureRequest.req).getTransaction(), [\n    signatureRequest.req\n  ])\n\n  const openTransaction = React.useCallback(\n    onOpenTransaction ? () => onOpenTransaction(tx, signatureRequest) : () => undefined,\n    [onOpenTransaction, signatureRequest, tx]\n  )\n\n  return (\n    <TransactionListItem\n      alwaysShowSource\n      accountPublicKey={tx.source}\n      createdAt={signatureRequest.created_at}\n      icon={props.icon}\n      onOpenTransaction={openTransaction}\n      style={props.style}\n      transaction={tx}\n    />\n  )\n}\n\ninterface SignatureRequestListProps {\n  account: Account\n  icon?: React.ReactElement<any>\n  sendTransaction: (transaction: Transaction, signatureRequest: MultisigTransactionResponse) => void\n  signatureRequests: MultisigTransactionResponse[]\n  title: React.ReactNode\n}\n\n// tslint:disable-next-line no-shadowed-variable\nexport const SignatureRequestList = React.memo(function SignatureRequestList(props: SignatureRequestListProps) {\n  const { sendTransaction } = props\n  const router = useRouter()\n\n  React.useEffect(() => {\n    const handleNavigation = (pathname: string) => {\n      if (matchesRoute(pathname, routes.showTransaction(\"*\", \"*\"))) {\n        const [, , , hash] = pathname.replace(/^\\//, \"\").split(\"/\")\n        const signatureRequest = props.signatureRequests.find(sr => sr.hash === hash)\n\n        if (signatureRequest) {\n          const stellarUri = new TransactionStellarUri(signatureRequest.req)\n          sendTransaction(stellarUri.getTransaction(), signatureRequest)\n        }\n      }\n    }\n\n    handleNavigation(router.location.pathname)\n\n    const unsubscribe = router.history.listen(location => {\n      handleNavigation(location.pathname)\n    })\n    return unsubscribe\n  }, [router.history, router.location.pathname, sendTransaction, props.signatureRequests])\n\n  const openSignatureRequest = (tx: Transaction, signatureRequest: MultisigTransactionResponse) => {\n    router.history.push(routes.showTransaction(props.account.id, signatureRequest.hash))\n  }\n\n  if (props.signatureRequests.length === 0) {\n    return null\n  }\n  return (\n    <>\n      <List style={{ background: \"transparent\" }}>\n        <ListSubheader disableSticky style={{ background: \"transparent\" }}>\n          {props.title}\n        </ListSubheader>\n        {props.signatureRequests.map(signatureRequest => (\n          <InlineErrorBoundary height={72} key={signatureRequest.hash}>\n            <SignatureRequestListItem\n              icon={props.icon}\n              onOpenTransaction={openSignatureRequest}\n              signatureRequest={signatureRequest}\n              style={{\n                minHeight: 72\n              }}\n            />\n          </InlineErrorBoundary>\n        ))}\n      </List>\n    </>\n  )\n})\n\nexport const InteractiveSignatureRequestList = React.memo(\n  (props: {\n    account: Account\n    icon?: React.ReactElement<any>\n    signatureRequests: MultisigTransactionResponse[]\n    title: React.ReactNode\n  }) => {\n    const router = useRouter()\n    const forceClose = !matchesRoute(router.location.pathname, routes.showTransaction(\"*\", \"*\"))\n\n    const onCloseDialog = React.useCallback(() => {\n      router.history.push(routes.routeUp(router.location.pathname))\n    }, [router])\n\n    return (\n      <TransactionSender account={props.account} forceClose={forceClose} onCloseTransactionDialog={onCloseDialog}>\n        {({ sendTransaction }) => (\n          <SignatureRequestList\n            account={props.account}\n            icon={props.icon}\n            sendTransaction={sendTransaction}\n            signatureRequests={props.signatureRequests}\n            title={props.title}\n          />\n        )}\n      </TransactionSender>\n    )\n  }\n)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\"\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\"\nimport UpdateIcon from \"@material-ui/icons/Update\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext } from \"~App/contexts/settings\"\nimport { SignatureDelegationContext } from \"~App/contexts/signatureDelegation\"\nimport { useHorizonURLs } from \"~Generic/hooks/stellar\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, useRouter } from \"~Generic/hooks/userinterface\"\nimport { useLoadingState } from \"~Generic/hooks/util\"\nimport { DecodedTransactionResponse } from \"~Generic/hooks/_caches\"\nimport useFilteredTransactions from \"~Generic/hooks/useFilteredTransactions\"\nimport * as routes from \"~App/routes\"\nimport MainSelectionButton from \"~Generic/components/MainSelectionButton\"\nimport { VerticalLayout } from \"~Layout/components/Box\"\nimport FriendbotButton from \"./FriendbotButton\"\nimport OfferList from \"./OfferList\"\nimport { InteractiveSignatureRequestList } from \"./SignatureRequestList\"\nimport TransactionList from \"./TransactionList\"\nimport { isDustTransaction } from \"~Generic/lib/transaction\"\n\nconst excludeClaimableFilter = (account: Account, tx: DecodedTransactionResponse) =>\n  !tx.decodedTx.operations.every(\n    o => o.type === \"createClaimableBalance\" || (o.type === \"claimClaimableBalance\" && o.source !== account.publicKey)\n  )\n\nconst excludeDustFilter = (account: Account, tx: DecodedTransactionResponse) =>\n  !isDustTransaction(tx.decodedTx, account)\n\nfunction PendingMultisigTransactions(props: { account: Account }) {\n  const { pendingSignatureRequests } = React.useContext(SignatureDelegationContext)\n  const { t } = useTranslation()\n\n  const cosignIcon = React.useMemo(() => <DoneAllIcon />, [])\n  const waitingIcon = React.useMemo(() => <UpdateIcon style={{ opacity: 0.5 }} />, [])\n\n  const pendingRequestsToCosign = React.useMemo(() => {\n    return pendingSignatureRequests.filter(\n      request =>\n        request.status !== \"submitted\" &&\n        request.signers.some(signer => signer === props.account.publicKey) &&\n        request.signed_by.indexOf(props.account.publicKey) === -1\n    )\n  }, [props.account, pendingSignatureRequests])\n\n  const pendingRequestsWaitingForOthers = React.useMemo(() => {\n    return pendingSignatureRequests.filter(\n      request =>\n        request.status !== \"submitted\" &&\n        request.signers.some(signer => signer === props.account.publicKey) &&\n        request.signed_by.indexOf(props.account.publicKey) > -1\n    )\n  }, [props.account, pendingSignatureRequests])\n\n  return (\n    <>\n      <InteractiveSignatureRequestList\n        account={props.account}\n        icon={cosignIcon}\n        signatureRequests={pendingRequestsToCosign}\n        title={t(\"account.transactions.signature-request-list.title.requests-to-cosign\")}\n      />\n      <InteractiveSignatureRequestList\n        account={props.account}\n        icon={waitingIcon}\n        signatureRequests={pendingRequestsWaitingForOthers}\n        title={t(\"account.transactions.signature-request-list.title.requests-waiting-for-others\")}\n      />\n    </>\n  )\n}\n\nfunction AccountTransactions(props: { account: Account }) {\n  const { account } = props\n  const { showDust, showClaimableBalanceTxs } = React.useContext(SettingsContext)\n  const { t } = useTranslation()\n  const accountData = useLiveAccountData(account.accountID, account.testnet)\n  const horizonURLs = useHorizonURLs(account.testnet)\n  const isSmallScreen = useIsMobile()\n  const [moreTxsLoadingState, handleMoreTxsFetch] = useLoadingState()\n\n  const txsFilter = React.useCallback(\n    (txs: DecodedTransactionResponse[]) =>\n      txs.filter(tx => {\n        return (\n          (showClaimableBalanceTxs || excludeClaimableFilter(account, tx)) &&\n          (showDust || excludeDustFilter(account, tx))\n        )\n      }),\n    []\n  )\n\n  const { transactions, olderTransactionsAvailable, fetchMoreTransactions } = useFilteredTransactions(\n    account.accountID,\n    account.testnet,\n    txsFilter\n  )\n\n  const router = useRouter()\n  const settings = React.useContext(SettingsContext)\n\n  const handleFetchMoreTransactions = React.useCallback(() => handleMoreTxsFetch(fetchMoreTransactions()), [\n    fetchMoreTransactions,\n    handleMoreTxsFetch\n  ])\n\n  const navigateToDeposit = React.useCallback(() => router.history.push(routes.depositAsset(account.id)), [\n    account,\n    router\n  ])\n\n  return (\n    <>\n      {accountData.balances.length > 0 ? (\n        <>\n          {settings.multiSignature ? <PendingMultisigTransactions account={account} /> : null}\n          <OfferList account={account} title={t(\"account.transactions.offer-list.title\")} />\n          <TransactionList\n            account={account}\n            background=\"transparent\"\n            loadingMoreTransactions={moreTxsLoadingState.type === \"pending\"}\n            olderTransactionsAvailable={olderTransactionsAvailable}\n            onFetchMoreTransactions={handleFetchMoreTransactions}\n            title={t(\"account.transactions.transaction-list.title\")}\n            transactions={transactions}\n          />\n        </>\n      ) : (\n        <>\n          <VerticalLayout\n            alignItems=\"stretch\"\n            margin=\"0 auto\"\n            style={{ padding: isSmallScreen ? \"16px 28px\" : \"32px 28px\", width: \"fit-content\" }}\n          >\n            {account.testnet ? (\n              <FriendbotButton\n                horizonURL={horizonURLs[0]}\n                publicKey={account.publicKey}\n                style={{ marginBottom: isSmallScreen ? 16 : 32 }}\n              />\n            ) : null}\n            <MainSelectionButton\n              Icon={CreditCardIcon}\n              description={t(\"account.transactions.action.navigate-to-deposit.description\")}\n              label={t(\"account.transactions.action.navigate-to-deposit.label\")}\n              onClick={navigateToDeposit}\n            />\n          </VerticalLayout>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default React.memo(AccountTransactions)\n"],"names":["styles","ListSubheader","require$$0","require$$1","account","Operation","OfferListItem","BigNumber","LoadMoreOffersListItem","this","HumanTime","Time","TransactionItemText","Networks","TransactionListItem","LoadMoreTransactionsListItem","makeStyles","routes.showTransaction","routes.account","SignatureRequestList","routes.routeUp","routes.depositAsset","OfferList","TransactionList"],"mappings":"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","x_google_ignoreList":[0,1,2,4,6,7,9,10]}