{"version":3,"file":"TradingDialog-BXfrh9b1.js","sources":["../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js","../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js","../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js","../node_modules/@material-ui/icons/ArrowRightAlt.js","../node_modules/@material-ui/icons/BarChart.js","../src/Account/components/OfferList.tsx","../src/Trading/components/MainActionSelection.tsx","../node_modules/@material-ui/icons/Gavel.js","../src/Generic/lib/orderbook.ts","../src/Trading/hooks/conversion.ts","../src/Trading/hooks/form.ts","../src/Trading/components/TradingPrice.tsx","../src/Trading/components/TradingForm.tsx","../src/Trading/components/TradingDialog.tsx"],"sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _toArray(r) {\n  return arrayWithHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableRest();\n}\nexport { _toArray as default };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useRef = React.useRef(expandedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultExpanded),\n      expandedState = _React$useState[0],\n      setExpandedState = _React$useState[1];\n\n  var expanded = isControlled ? expandedProp : expandedState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (expandedProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled ExpansionPanel to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled ExpansionPanel ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [expandedProp, isControlled]);\n  }\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      setExpandedState(!expanded);\n    }\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  };\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), React.cloneElement(summary, {\n    disabled: disabled,\n    expanded: expanded,\n    onChange: handleChange\n  }), React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (summary.type === React.Fragment) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: '8px 24px 24px'\n  }\n};\nvar ExpansionPanelDetails = React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: '0 24px 0 24px',\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        opacity: 0.38\n      }\n    },\n\n    /* Styles applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root and children wrapper elements when focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar ExpansionPanelSummary = React.forwardRef(function ExpansionPanelSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expanded = props.expanded,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"expanded\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onChange\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && React.createElement(IconButton, _extends({\n    disabled: disabled,\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: -1,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * If `true`, the summary will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   * If `true`, expands the summary, otherwise collapse it.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z\"\n}), 'BarChart');\n\nexports.default = _default;","import BigNumber from \"big.js\"\nimport React from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { Operation, Horizon, Transaction } from \"@stellar/stellar-sdk\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRightAlt\"\nimport BarChartIcon from \"@material-ui/icons/BarChart\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { breakpoints } from \"~App/theme\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { ActionButton } from \"~Generic/components/DialogActions\"\nimport { useHorizon } from \"~Generic/hooks/stellar\"\nimport { useLoadingState } from \"~Generic/hooks/util\"\nimport { useLiveAccountData, useLiveAccountOffers, useOlderOffers } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { offerAssetToAsset } from \"~Generic/lib/stellar\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport { List } from \"~Layout/components/List\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\nimport { SingleBalance } from \"./AccountBalances\"\n\nfunction createDismissalTransaction(\n  horizon: Horizon.Server,\n  account: Account,\n  accountData: AccountData,\n  offer: Horizon.ServerApi.OfferRecord\n): Promise<Transaction> {\n  const buying = offerAssetToAsset(offer.buying)\n  const selling = offerAssetToAsset(offer.selling)\n\n  return selling.isNative()\n    ? createTransaction(\n        [\n          Operation.manageBuyOffer({\n            offerId: offer.id,\n            buyAmount: \"0\",\n            buying,\n            price: offer.price,\n            selling,\n          })\n        ],\n        { accountData, horizon, walletAccount: account }\n      )\n    : createTransaction(\n        [\n          Operation.manageSellOffer({\n            offerId: offer.id,\n            amount: \"0\",\n            buying,\n            price: offer.price,\n            selling,\n          })\n        ],\n        { accountData, horizon, walletAccount: account }\n      )\n}\n\ninterface OfferListItemProps {\n  accountPublicKey: string\n  offer: Horizon.ServerApi.OfferRecord\n  onCancel?: () => void\n  style?: React.CSSProperties\n}\n\nconst OfferListItem = React.memo(function OfferListItem(props: OfferListItemProps) {\n  const buying = offerAssetToAsset(props.offer.buying)\n  const selling = offerAssetToAsset(props.offer.selling)\n  const isSmallScreen = useIsMobile()\n  return (\n    <ListItem\n      button={Boolean(props.onCancel) as any}\n      onClick={props.onCancel}\n      style={{ minHeight: isSmallScreen ? 58 : 72, ...props.style }}\n    >\n      <ListItemIcon style={{ marginRight: isSmallScreen ? 0 : undefined }}>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText\n        primary={\n          // Horizon seems to always returns open offers in the format of us\n          // on the seller side, no matter if we submitted a buy or sell order,\n          // so we use the philosophy \"i never 'sell XLM', 'i buy the <other asset>'\"\n          props.offer.seller === props.accountPublicKey && !selling.isNative() ? (\n            <span style={{ fontWeight: \"bold\" }}>\n              <Trans i18nKey=\"account.transactions.offer-list.text.sell\">\n                Sell\n                <SingleBalance\n                  assetCode={selling.getCode()}\n                  balance={props.offer.amount}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n                for\n                <SingleBalance\n                  assetCode={buying.getCode()}\n                  balance={String(BigNumber(props.offer.amount).mul(props.offer.price))}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n              </Trans>\n            </span>\n          ) : (\n            <span style={{ fontWeight: \"bold\" }}>\n              <Trans i18nKey=\"account.transactions.offer-list.text.buy\">\n                Buy\n                <SingleBalance\n                  assetCode={buying.getCode()}\n                  balance={String(BigNumber(props.offer.amount).mul(props.offer.price))}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n                for\n                <SingleBalance\n                  assetCode={selling.getCode()}\n                  balance={props.offer.amount}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n              </Trans>\n            </span>\n          )\n        }\n        primaryTypographyProps={{\n          style: { overflow: \"hidden\", textOverflow: \"ellipsis\" }\n        }}\n        style={{ paddingRight: isSmallScreen ? 0 : undefined }}\n      />\n      <ListItemText\n        primaryTypographyProps={{ align: \"right\" }}\n        style={{ display: isSmallScreen ? \"none\" : undefined, flexShrink: 0, paddingRight: 0 }}\n      >\n        <HorizontalLayout alignItems=\"center\" inline style={{ fontSize: \"1.4rem\" }}>\n          <b>{selling.getCode()}</b>\n          &nbsp;\n          <ArrowRightIcon style={{ fontSize: \"150%\" }} />\n          &nbsp;\n          <b>{buying.getCode()}</b>\n        </HorizontalLayout>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\ninterface LoadMoreOffersListItemProps {\n  onClick: () => void\n  pending?: boolean\n}\n\nconst LoadMoreOffersListItem = React.memo(function LoadMoreOffersListItem(props: LoadMoreOffersListItemProps) {\n  const { t } = useTranslation()\n  return (\n    <ListItem style={{ borderBottom: \"none\", height: 75 }}>\n      <ListItemText disableTypography style={{ textAlign: \"center\" }}>\n        <ActionButton\n          onClick={props.onClick}\n          loading={props.pending}\n          style={{ margin: \"0 auto\", paddingLeft: 16, paddingRight: 16 }}\n          variant=\"text\"\n        >\n          {t(\"account.transactions.transaction-list.load-more.label\")}\n        </ActionButton>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\ninterface Props {\n  account: Account\n  title: React.ReactNode\n}\n\nconst useStyles = makeStyles({\n  expansionPanel: {\n    background: \"transparent\",\n\n    \"&:before\": {\n      background: \"transparent\"\n    }\n  },\n  expansionPanelSummary: {\n    justifyContent: \"flex-start\",\n    minHeight: \"48px !important\",\n    padding: 0\n  },\n  expansionPanelSummaryContent: {\n    flexGrow: 0,\n    marginTop: \"0 !important\",\n    marginBottom: \"0 !important\"\n  },\n  expansionPanelDetails: {\n    display: \"block\",\n    padding: 0\n  },\n  listItem: {\n    padding: \"8px 24px\",\n\n    [breakpoints.down(600)]: {\n      paddingLeft: 24,\n      paddingRight: 24\n    }\n  }\n})\n\nfunction OfferList(props: Props & { sendTransaction: (tx: Transaction) => Promise<void> }) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const horizon = useHorizon(props.account.testnet)\n  const offerHistory = useLiveAccountOffers(props.account.accountID, props.account.testnet)\n  const [moreTxsLoadingState, handleMoreTxsFetch] = useLoadingState()\n  const fetchMoreOffers = useOlderOffers(props.account.accountID, props.account.testnet)\n\n  const handleFetchMoreOffers = React.useCallback(() => handleMoreTxsFetch(fetchMoreOffers()), [\n    fetchMoreOffers,\n    handleMoreTxsFetch\n  ])\n\n  const onCancel = async (offer: Horizon.ServerApi.OfferRecord) => {\n    try {\n      const tx = await createDismissalTransaction(horizon, props.account, accountData, offer)\n      await props.sendTransaction(tx)\n    } catch (error) {\n      trackError(error)\n    }\n  }\n\n  return offerHistory.offers.length === 0 ? null : (\n    <List style={{ background: \"transparent\" }}>\n      {offerHistory.offers.map(offer => (\n        <OfferListItem\n          key={offer.id}\n          accountPublicKey={props.account.accountID}\n          offer={offer}\n          onCancel={() => onCancel(offer)}\n        />\n      ))}\n      {offerHistory.olderOffersAvailable ? (\n        <LoadMoreOffersListItem pending={moreTxsLoadingState.type === \"pending\"} onClick={handleFetchMoreOffers} />\n      ) : null}\n    </List>\n  )\n}\n\nfunction OfferListContainer(props: Props) {\n  return (\n    <TransactionSender account={props.account}>\n      {({ sendTransaction }) => <OfferList {...props} sendTransaction={sendTransaction} />}\n    </TransactionSender>\n  )\n}\n\nexport default OfferListContainer\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\nimport MainSelectionButton from \"~Generic/components/MainSelectionButton\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport OfferList from \"~Account/components/OfferList\"\nimport { Account } from \"~App/contexts/accounts\"\n\ninterface Props {\n  account: Account\n  onSelectBuy: () => void\n  onSelectSell: () => void\n  style?: React.CSSProperties\n}\n\nconst MainActionSelection = React.forwardRef(function MainActionSelection(\n  props: Props,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const { t } = useTranslation()\n\n  return (<div style={{ margin: \"48px 0 24px\", padding: \"0 8px\" }}>\n    <HorizontalLayout ref={ref} justifyContent=\"space-evenly\" wrap=\"wrap\">\n      <MainSelectionButton\n        label={t(\"trading.action-selection.buy.label\")}\n        description={t(\"trading.action-selection.buy.description\")}\n        gutterBottom\n        onClick={props.onSelectBuy}\n        Icon={AddIcon}\n      />\n      <MainSelectionButton\n        label={t(\"trading.action-selection.sell.label\")}\n        description={t(\"trading.action-selection.sell.description\")}\n        gutterBottom\n        onClick={props.onSelectSell}\n        Icon={RemoveIcon}\n      />\n    </HorizontalLayout>\n    <OfferList account={props.account} title={t(\"account.transactions.offer-list.title\")} />\n  </div>)\n})\n\nexport default React.memo(MainActionSelection)\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"defs\", null, _react.default.createElement(\"path\", {\n  id: \"a\",\n  d: \"M0 0h24v24H0V0z\"\n})), _react.default.createElement(\"path\", {\n  d: \"M1 21h12v2H1zM5.245 8.07l2.83-2.827 14.14 14.142-2.828 2.828zM12.317 1l5.657 5.656-2.83 2.83-5.654-5.66zM3.825 9.485l5.657 5.657-2.828 2.828-5.657-5.657z\"\n})), 'Gavel');\n\nexports.default = _default;","import { Asset } from \"@stellar/stellar-sdk\"\n\n/*\n * Quick orderbook cheat sheet:\n *\n * Consider a trading pair T (buy=asset_x, sell=asset_y).\n * The inverse would be T'(buy=asset_y, sell=asset_x).\n *\n * asks(T) === bids(T').map(offer => ({ ...offer, price = 1 / offer.price }))\n * asks(T') === bids(T).map(offer => ({ ...offer, price = 1 / offer.price }))\n *\n * Since the asks & bids are ordered from closest to last trade price to furthest when\n * returned by horizon server, the order of asks(T) & bids(T') is the same as well.\n */\n\n// @types/stellar-sdk types seem wrong\nexport interface FixedOrderbookOffer {\n  price_r: {\n    n: number\n    d: number\n  }\n  price: string\n  amount: string\n}\n\n// @types/stellar-sdk types seem wrong\nexport interface FixedOrderbookRecord {\n  asks: FixedOrderbookOffer[]\n  bids: FixedOrderbookOffer[]\n  base: Asset\n  counter: Asset\n}\n\nexport function calculateSpread(asks: FixedOrderbookOffer[], bids: FixedOrderbookOffer[]) {\n  // TODO: Calculate according to trade volume (because larger volumes will likely lead to larger spreads)\n\n  if (asks.length === 0 || bids.length === 0) {\n    return {\n      absoluteSpread: 0,\n      relativeSpread: 0\n    }\n  }\n\n  const absoluteSpread = Number.parseFloat(asks[0].price) - Number.parseFloat(bids[0].price)\n  const relativeSpread = absoluteSpread / Math.min(Number.parseFloat(asks[0].price), Number.parseFloat(bids[0].price))\n  return {\n    absoluteSpread,\n    relativeSpread\n  }\n}\n","import BigNumber from \"big.js\"\nimport React from \"react\"\nimport { FixedOrderbookOffer } from \"~Generic/lib/orderbook\"\n\nconst sum = (numbers: BigNumber[]) => numbers.reduce((total, no) => total.add(no), BigNumber(0))\n\nexport function useConversionOffers(\n  offers: FixedOrderbookOffer[],\n  amount: BigNumber,\n  invertOfferAmounts: boolean = false\n) {\n  // Best offers always returned first by horizon\n  const bestOffers = invertOfferAmounts\n    ? offers.map(offer => ({\n        ...offer,\n        amount: BigNumber(offer.price).eq(0)\n          ? BigNumber(0).toFixed(7)\n          : BigNumber(offer.amount)\n              .div(offer.price)\n              .toFixed(7)\n      }))\n    : offers\n\n  const bestMatches = React.useMemo(() => {\n    const offersToCover: FixedOrderbookOffer[] = []\n    let volume = BigNumber(0)\n\n    for (const matchingOffer of bestOffers) {\n      if (volume.gte(amount)) {\n        break\n      }\n      if (!BigNumber(matchingOffer.price).eq(0)) {\n        offersToCover.push(matchingOffer)\n        volume = volume.add(matchingOffer.amount)\n      }\n    }\n\n    return {\n      offers: offersToCover,\n      volume\n    }\n  }, [bestOffers, amount])\n\n  const bestPrices = bestMatches.offers.map(offer => BigNumber(offer.price))\n  const worstPriceOfBestMatches = bestPrices.length > 0 ? bestPrices[bestPrices.length - 1] : undefined\n\n  const firstBestOffers = bestMatches.offers.slice(0, -1)\n  const lastBestOffer = bestMatches.offers[bestMatches.offers.length - 1]\n\n  const estimatedReturn = sum([\n    ...firstBestOffers.slice(0, -1).map(offer => BigNumber(offer.amount).mul(offer.price)),\n    lastBestOffer\n      ? BigNumber(lastBestOffer.price).mul(BigNumber(lastBestOffer.amount).sub(bestMatches.volume.sub(amount)))\n      : BigNumber(0)\n  ])\n\n  return {\n    estimatedReturn,\n    worstPriceOfBestMatches\n  }\n}\n","import BigNumber from \"big.js\"\nimport { Asset, Horizon } from \"@stellar/stellar-sdk\"\nimport { AccountData, BalanceLine } from \"~Generic/lib/account\"\nimport { formatBalance, BalanceFormattingOptions } from \"~Generic/lib/balances\"\nimport { FormBigNumber, isValidAmount } from \"~Generic/lib/form\"\nimport { calculateSpread, FixedOrderbookRecord } from \"~Generic/lib/orderbook\"\nimport {\n  BASE_RESERVE,\n  findMatchingBalanceLine,\n  getAccountMinimumBalance,\n  getSpendableBalance\n} from \"~Generic/lib/stellar\"\nimport { useConversionOffers } from \"./conversion\"\n\nexport const bigNumberToInputValue = (bignum: BigNumber, overrides?: BalanceFormattingOptions) =>\n  formatBalance(bignum, { minimumSignificants: 3, maximumSignificants: 9, groupThousands: false, ...overrides })\n\nfunction getSpendableBalanceWithoutBaseReserve(accountMinimumBalance: BigNumber, balanceLine: BalanceLine) {\n  const spendableBalance = getSpendableBalance(accountMinimumBalance, balanceLine).minus(\n    // subtract base-reserve when asset_type is native because placing a new order requires 1 * base-reserve XLM\n    BigNumber(balanceLine.asset_type === \"native\" ? BASE_RESERVE : BigNumber(0))\n  )\n\n  // return 0 if calculated balance is negative\n  return spendableBalance.cmp(BigNumber(0)) < 0 ? BigNumber(0) : spendableBalance\n}\n\nexport interface TradingFormValues {\n  primaryAsset: Asset | undefined\n  primaryAmountString: string\n  secondaryAsset: Asset\n  manualPrice: string\n}\n\ninterface CalculationParameters {\n  accountData: AccountData\n  priceMode: \"primary\" | \"secondary\"\n  primaryAction: \"buy\" | \"sell\"\n  tradePair: FixedOrderbookRecord\n  values: TradingFormValues\n}\n\ninterface CalculationResults {\n  defaultPrice: string\n  effectivePrice: BigNumber\n  maxPrimaryAmount: BigNumber\n  minAccountBalance: BigNumber\n  primaryAmount: BigNumber\n  primaryBalance: Horizon.BalanceLine | undefined\n  relativeSpread: number\n  secondaryAmount: BigNumber\n  secondaryBalance: Horizon.BalanceLine | undefined\n  spendablePrimaryBalance: BigNumber\n  spendableSecondaryBalance: BigNumber\n}\n\nexport function useCalculation(parameters: CalculationParameters): CalculationResults {\n  const { accountData, priceMode, primaryAction, tradePair } = parameters\n  const { manualPrice, primaryAmountString, primaryAsset, secondaryAsset } = parameters.values\n\n  const price =\n    manualPrice && isValidAmount(manualPrice)\n      ? priceMode === \"secondary\"\n        ? FormBigNumber(manualPrice)\n        : FormBigNumber(manualPrice).eq(0) // prevent division by zero\n        ? BigNumber(0)\n        : BigNumber(1).div(FormBigNumber(manualPrice))\n      : BigNumber(0)\n\n  const primaryAmount =\n    primaryAmountString && isValidAmount(primaryAmountString) ? FormBigNumber(primaryAmountString) : BigNumber(0)\n\n  const primaryBalance = primaryAsset ? findMatchingBalanceLine(accountData.balances, primaryAsset) : undefined\n  const secondaryBalance = secondaryAsset ? findMatchingBalanceLine(accountData.balances, secondaryAsset) : undefined\n\n  const { worstPriceOfBestMatches } = useConversionOffers(\n    primaryAction === \"buy\" ? tradePair.asks : tradePair.bids,\n    primaryAmount.gt(0) ? primaryAmount : BigNumber(0.01),\n    primaryAction === \"sell\"\n  )\n\n  const { relativeSpread } = calculateSpread(tradePair.asks, tradePair.bids)\n  const bestPrice = worstPriceOfBestMatches && worstPriceOfBestMatches.gt(0) ? worstPriceOfBestMatches : undefined\n  const effectivePrice = price.gt(0) ? price : bestPrice || BigNumber(0)\n  const secondaryAmount = primaryAmount.mul(effectivePrice)\n\n  // prevent division by zero\n  const inversePrice = effectivePrice.eq(0) ? BigNumber(0) : BigNumber(1).div(effectivePrice)\n  const defaultPrice = bigNumberToInputValue(priceMode === \"secondary\" ? effectivePrice : inversePrice)\n\n  const minAccountBalance = getAccountMinimumBalance(accountData)\n\n  const spendablePrimaryBalance = primaryBalance\n    ? primaryAction === \"sell\"\n      ? getSpendableBalanceWithoutBaseReserve(minAccountBalance, primaryBalance)\n      : getSpendableBalance(minAccountBalance, primaryBalance)\n    : BigNumber(0)\n\n  const spendableSecondaryBalance = secondaryBalance\n    ? primaryAction === \"buy\"\n      ? getSpendableBalanceWithoutBaseReserve(minAccountBalance, secondaryBalance)\n      : getSpendableBalance(minAccountBalance, secondaryBalance)\n    : BigNumber(0)\n\n  const maxPrimaryAmount =\n    primaryAction === \"buy\"\n      ? spendableSecondaryBalance.gt(0) && effectivePrice.gt(0)\n        ? BigNumber(spendableSecondaryBalance).div(effectivePrice)\n        : BigNumber(0)\n      : spendablePrimaryBalance.gt(0)\n      ? BigNumber(spendablePrimaryBalance)\n      : BigNumber(0)\n\n  return {\n    defaultPrice,\n    effectivePrice,\n    maxPrimaryAmount,\n    minAccountBalance,\n    primaryAmount,\n    primaryBalance,\n    relativeSpread,\n    secondaryAmount,\n    secondaryBalance,\n    spendablePrimaryBalance,\n    spendableSecondaryBalance\n  }\n}\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Asset } from \"@stellar/stellar-sdk\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Select from \"@material-ui/core/Select\"\nimport TextField from \"@material-ui/core/TextField\"\n\ninterface TradingPriceProps {\n  defaultPrice?: string\n  inputError?: string\n  manualPrice?: string\n  onBlur?: () => void\n  onChange?: (event: React.ChangeEvent) => void\n  onSetPriceDenotedIn: (denotedIn: \"primary\" | \"secondary\") => void\n  priceDenotedIn: \"primary\" | \"secondary\"\n  primaryAsset: Asset | undefined\n  secondaryAsset: Asset | undefined\n  selectOnFocus?: boolean\n  style?: React.CSSProperties\n}\n\nconst TradingPrice = React.forwardRef(function TradingPrice(props: TradingPriceProps, ref: React.Ref<HTMLDivElement>) {\n  const isDisabled = !props.primaryAsset || !props.secondaryAsset\n  const { t } = useTranslation()\n\n  const priceUnit = props.priceDenotedIn === \"primary\" ? props.secondaryAsset?.getCode() : props.primaryAsset?.getCode()\n\n  const label = priceUnit\n    ? t(\"trading.trading-price.label\", { unit: priceUnit })\n    : t(\"trading.trading-price.default-label\")\n\n  const endAdornment = (\n    <InputAdornment position=\"end\">\n      <Select\n        disabled={isDisabled}\n        disableUnderline\n        onChange={event => props.onSetPriceDenotedIn(event.target.value as any)}\n        style={{ fontWeight: 400 }}\n        value={props.priceDenotedIn}\n      >\n        <MenuItem selected={props.priceDenotedIn === \"secondary\"} value=\"secondary\">\n          {props.secondaryAsset ? props.secondaryAsset.getCode() : \"\"}\n        </MenuItem>\n        <MenuItem selected={props.priceDenotedIn === \"primary\"} value=\"primary\">\n          {props.primaryAsset ? props.primaryAsset.getCode() : \"\"}\n        </MenuItem>\n      </Select>\n    </InputAdornment>\n  )\n\n  return (\n    <TextField\n      inputProps={{\n        pattern: \"^[0-9]*(.[0-9]+)?$\",\n        inputMode: \"decimal\",\n        min: \"0.0000001\"\n      }}\n      InputProps={{ endAdornment }}\n      inputRef={ref}\n      error={Boolean(props.inputError)}\n      label={props.inputError || label}\n      onBlur={props.onBlur}\n      onChange={props.onChange}\n      onFocus={props.selectOnFocus ? event => event.target.select() : undefined}\n      style={props.style}\n      value={props.defaultPrice ? props.defaultPrice : props.manualPrice}\n    />\n  )\n})\n\nexport default React.memo(TradingPrice)\n","import React from \"react\"\nimport { Controller, useForm } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { Asset, Horizon, Operation, Transaction } from \"@stellar/stellar-sdk\"\nimport Button from \"@material-ui/core/Button\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Typography from \"@material-ui/core/Typography\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport GavelIcon from \"@material-ui/icons/Gavel\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { warningColor } from \"~App/theme\"\nimport AssetSelector from \"~Generic/components/AssetSelector\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport { ReadOnlyTextfield } from \"~Generic/components/FormFields\"\nimport Portal from \"~Generic/components/Portal\"\nimport { useHorizon } from \"~Generic/hooks/stellar\"\nimport { useLiveOrderbook } from \"~Generic/hooks/stellar-subscriptions\"\nimport { RefStateObject, useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { CustomError } from \"~Generic/lib/errors\"\nimport {\n  balancelineToAsset,\n  findMatchingBalanceLine,\n  getAccountMinimumBalance,\n  getSpendableBalance\n} from \"~Generic/lib/stellar\"\nimport { FormBigNumber, isValidAmount } from \"~Generic/lib/form\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { Box, HorizontalLayout, VerticalLayout } from \"~Layout/components/Box\"\nimport { bigNumberToInputValue, TradingFormValues, useCalculation } from \"../hooks/form\"\nimport TradingPrice from \"./TradingPrice\"\n\nconst useStyles = makeStyles({\n  expansionPanel: {\n    background: \"transparent\",\n    margin: \"8px 0 !important\",\n\n    \"&:before\": {\n      background: \"transparent\"\n    }\n  },\n  expansionPanelSummary: {\n    justifyContent: \"flex-start\",\n    minHeight: \"48px !important\",\n    padding: 0\n  },\n  expansionPanelSummaryContent: {\n    flexGrow: 0,\n    marginTop: \"0 !important\",\n    marginBottom: \"0 !important\"\n  },\n  expansionPanelDetails: {\n    justifyContent: \"flex-start\",\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 12\n  }\n})\n\ninterface Props {\n  account: Account\n  accountData: AccountData\n  className?: string\n  dialogActionsRef: RefStateObject | null\n  initialPrimaryAsset?: Asset\n  primaryAction: \"buy\" | \"sell\"\n  sendTransaction: (transaction: Transaction) => void\n  style?: React.CSSProperties\n  trustlines: Horizon.BalanceLineAsset[]\n}\n\nfunction TradingForm(props: Props) {\n  const classes = useStyles()\n  const isSmallScreen = useIsMobile()\n  const isSmallHeightScreen = useMediaQuery(\"(max-height: 500px)\")\n  const isSmallScreenXY = isSmallScreen || isSmallHeightScreen\n  const { t } = useTranslation()\n\n  const [expanded, setExpanded] = React.useState(false)\n  const [priceMode, setPriceMode] = React.useState<\"primary\" | \"secondary\">(\"secondary\")\n  const [pending, setPending] = React.useState(false)\n\n  const form = useForm<TradingFormValues>({\n    defaultValues: {\n      primaryAsset: props.initialPrimaryAsset,\n      primaryAmountString: \"\",\n      secondaryAsset: Asset.native(),\n      manualPrice: \"0\"\n    }\n  })\n\n  const sendTransaction = props.sendTransaction\n  const { primaryAsset, secondaryAsset, manualPrice } = form.watch()\n\n  const isSellingOwnAsset = React.useMemo(() => primaryAsset?.getIssuer() === props.accountData.account_id, [\n    props.accountData,\n    primaryAsset\n  ])\n\n  React.useEffect(() => {\n    if (!primaryAsset && props.initialPrimaryAsset) {\n      form.setValue(\"primaryAsset\", props.initialPrimaryAsset)\n    }\n  }, [form, primaryAsset, props.initialPrimaryAsset])\n\n  const horizon = useHorizon(props.account.testnet)\n  const tradePair = useLiveOrderbook(primaryAsset || Asset.native(), secondaryAsset, props.account.testnet)\n\n  const assets = React.useMemo(() => props.trustlines.map(balancelineToAsset), [props.trustlines])\n\n  const calculation = useCalculation({\n    accountData: props.accountData,\n    priceMode,\n    primaryAction: props.primaryAction,\n    tradePair,\n    values: form.getValues()\n  })\n\n  const {\n    maxPrimaryAmount,\n    primaryBalance,\n    defaultPrice,\n    effectivePrice,\n    primaryAmount,\n    relativeSpread,\n    secondaryAmount,\n    secondaryBalance,\n    spendablePrimaryBalance,\n    spendableSecondaryBalance\n  } = calculation\n\n  if (form.formState.touched.primaryAmountString) {\n    // trigger delayed validation to make sure that primaryAmountString is validated with latest calculation results\n    setTimeout(() => form.triggerValidation(\"primaryAmountString\"), 0)\n  }\n\n  const setPrimaryAmountToMax = () => {\n    form.setValue(\"primaryAmountString\", maxPrimaryAmount.toFixed(7))\n  }\n\n  const validateManualPrice = React.useCallback(() => {\n    const value = FormBigNumber(manualPrice).gt(0) ? manualPrice : defaultPrice\n    const valid = isValidAmount(value) && FormBigNumber(value).gt(0)\n    if (!valid) {\n      if (!expanded) {\n        setExpanded(true)\n      }\n      return t<string>(\"trading.validation.invalid-price\")\n    }\n  }, [defaultPrice, expanded, manualPrice, t])\n\n  const submitForm = React.useCallback(async () => {\n    try {\n      setPending(true)\n\n      const error = validateManualPrice()\n      if (error) {\n        form.setError(\"manualPrice\", \"invalid-amount\", error)\n        return\n      }\n\n      if (!primaryAsset) {\n        throw CustomError(\n          \"InvariantViolationError\",\n          \"Invariant violation: Should not be able to submit form without having selected the primary asset.\",\n          { message: \"Should not be able to submit form without having selected the primary asset.\" }\n        )\n      }\n\n      const spendableXLMBalance = getSpendableBalance(\n        getAccountMinimumBalance(props.accountData),\n        findMatchingBalanceLine(props.accountData.balances, Asset.native())\n      )\n      if (spendableXLMBalance.minus(0.5).cmp(0) <= 0) {\n        throw CustomError(\"LowReserveOrderError\", \"Cannot place order because spendable XLM balance is too low.\")\n      }\n\n      const tx = await createTransaction(\n        [\n          props.primaryAction === \"buy\"\n            ? Operation.manageBuyOffer({\n                buyAmount: primaryAmount.toFixed(7),\n                buying: primaryAsset,\n                offerId: 0,\n                price: effectivePrice.toFixed(7),\n                selling: secondaryAsset,\n                withMuxing: true\n              })\n            : Operation.manageSellOffer({\n                amount: primaryAmount.toFixed(7),\n                buying: secondaryAsset,\n                offerId: 0,\n                price: effectivePrice.toFixed(7),\n                selling: primaryAsset,\n                withMuxing: true\n              })\n        ],\n        {\n          accountData: props.accountData,\n          horizon,\n          walletAccount: props.account\n        }\n      )\n      await sendTransaction(tx)\n    } catch (error) {\n      trackError(error)\n    } finally {\n      setPending(false)\n    }\n  }, [\n    form,\n    effectivePrice,\n    horizon,\n    primaryAsset,\n    props.account,\n    props.accountData,\n    props.primaryAction,\n    primaryAmount,\n    secondaryAsset,\n    sendTransaction,\n    validateManualPrice\n  ])\n\n  return (\n    // set minHeight to prevent wrapping of layout when keyboard is shown\n    <VerticalLayout\n      alignItems=\"stretch\"\n      alignSelf={isSmallScreenXY ? undefined : \"center\"}\n      grow={1}\n      minHeight={300}\n      maxHeight=\"100%\"\n      margin={isSmallScreen ? undefined : \"32px 0 0\"}\n      padding=\"16px 0\"\n      shrink={1}\n      width=\"100%\"\n    >\n      <VerticalLayout\n        alignItems=\"stretch\"\n        alignSelf={isSmallScreen ? \"stretch\" : \"center\"}\n        minWidth={isSmallScreen ? \"75%\" : 450}\n        maxWidth={isSmallScreen ? \"100%\" : 500}\n        padding=\"0 2px\"\n        shrink={0}\n        width=\"100%\"\n      >\n        <HorizontalLayout margin=\"8px 0\">\n          <Controller\n            as={\n              <AssetSelector\n                assets={assets}\n                inputError={form.errors.primaryAsset && form.errors.primaryAsset.message}\n                label={\n                  props.primaryAction === \"buy\"\n                    ? t(\"trading.inputs.primary-asset-selector.label.buy\")\n                    : t(\"trading.inputs.primary-asset-selector.label.sell\")\n                }\n                minWidth={75}\n                showXLM\n                style={{ flexGrow: 1, marginRight: 24, maxWidth: 150, width: \"25%\" }}\n                testnet={props.account.testnet}\n                value={primaryAsset}\n                accountId={props.accountData.account_id}\n              />\n            }\n            control={form.control}\n            name=\"primaryAsset\"\n            rules={{\n              required: t<string>(\"trading.validation.primary-asset-missing\")\n            }}\n          />\n          <TextField\n            name=\"primaryAmountString\"\n            inputRef={form.register({\n              required: t<string>(\"trading.validation.primary-amount-missing\"),\n              validate: value => {\n                const amountInvalid = primaryAmount.lt(0) || (value.length > 0 && primaryAmount.eq(0))\n                if (isSellingOwnAsset) return true\n                const exceedsBalance =\n                  (props.primaryAction === \"sell\" && primaryBalance && primaryAmount.gt(spendablePrimaryBalance)) ||\n                  (props.primaryAction === \"buy\" && secondaryBalance && secondaryAmount.gt(spendableSecondaryBalance))\n\n                if (amountInvalid) {\n                  return t<string>(\"trading.validation.invalid-amount\")\n                } else if (exceedsBalance) {\n                  return t<string>(\"trading.validation.not-enough-balance\")\n                } else {\n                  return true\n                }\n              }\n            })}\n            error={Boolean(form.errors.primaryAmountString)}\n            inputProps={{\n              pattern: \"^[0-9]*(.[0-9]+)?$\",\n              inputMode: \"decimal\",\n              min: \"0.0000001\",\n              max: maxPrimaryAmount.toFixed(7),\n              style: { height: 27 }\n            }}\n            InputProps={{\n              endAdornment:\n                props.primaryAction === \"buy\" || isSellingOwnAsset ? (\n                  undefined\n                ) : (\n                  <InputAdornment position=\"end\">\n                    <Button\n                      disabled={!primaryAsset || !primaryBalance}\n                      onClick={setPrimaryAmountToMax}\n                      style={{ boxShadow: \"none\", fontWeight: 400 }}\n                    >\n                      {t(\"trading.inputs.primary-amount.max-button.label\")}\n                    </Button>\n                  </InputAdornment>\n                )\n            }}\n            label={\n              form.errors.primaryAmountString && form.errors.primaryAmountString.message\n                ? form.errors.primaryAmountString.message\n                : props.primaryAction === \"buy\"\n                ? t(\"trading.inputs.primary-amount.label.buy\")\n                : t(\"trading.inputs.primary-amount.label.sell\")\n            }\n            placeholder={\n              isSellingOwnAsset\n                ? \"\"\n                : t(\"trading.inputs.primary-amount.placeholder\", `Max. ${bigNumberToInputValue(maxPrimaryAmount)}`, {\n                    amount: bigNumberToInputValue(maxPrimaryAmount)\n                  })\n            }\n            required\n            style={{ flexGrow: 1, flexShrink: 1, width: \"55%\" }}\n          />\n        </HorizontalLayout>\n        <HorizontalLayout margin=\"8px 0 32px\">\n          <Controller\n            as={\n              <AssetSelector\n                assets={assets}\n                label={\n                  props.primaryAction === \"buy\"\n                    ? t(\"trading.inputs.secondary-asset-selector.label.buy\")\n                    : t(\"trading.inputs.secondary-asset-selector.label.sell\")\n                }\n                minWidth={75}\n                showXLM\n                style={{ flexGrow: 1, marginRight: 24, maxWidth: 150, width: \"25%\" }}\n                testnet={props.account.testnet}\n                value={secondaryAsset}\n                accountId={props.accountData.account_id}\n              />\n            }\n            control={form.control}\n            name=\"secondaryAsset\"\n            rules={{ required: t<string>(\"trading.validation.secondary-asset-missing\") }}\n          />\n          <ReadOnlyTextfield\n            disableUnderline\n            inputProps={{\n              style: { height: 27 }\n            }}\n            label={\n              props.primaryAction === \"buy\"\n                ? t(\"trading.inputs.estimated-costs.label.buy\")\n                : t(\"trading.inputs.estimated-costs.label.sell\")\n            }\n            placeholder={`Max. ${secondaryBalance ? secondaryBalance.balance : \"0\"}`}\n            style={{ flexGrow: 1, flexShrink: 1, width: \"55%\" }}\n            inputMode=\"decimal\"\n            type=\"number\"\n            value={\n              // Format amount without thousands grouping, since it may lead to illegal number input values (#831)\n              bigNumberToInputValue(secondaryAmount, { groupThousands: false })\n            }\n          />\n        </HorizontalLayout>\n        <ExpansionPanel\n          className={classes.expansionPanel}\n          elevation={0}\n          expanded={expanded}\n          onChange={() => setExpanded(!expanded)}\n        >\n          <ExpansionPanelSummary\n            classes={{ root: classes.expansionPanelSummary, content: classes.expansionPanelSummaryContent }}\n            expandIcon={<ExpandMoreIcon />}\n          >\n            <Typography align=\"center\" style={{ flexGrow: 1 }}>\n              {t(\"trading.advanced.header\")}\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n            <Controller\n              as={\n                <TradingPrice\n                  defaultPrice={!form.formState.touched.manualPrice ? defaultPrice : undefined}\n                  inputError={form.errors.manualPrice && form.errors.manualPrice.message}\n                  onSetPriceDenotedIn={setPriceMode}\n                  priceDenotedIn={priceMode}\n                  primaryAsset={primaryAsset}\n                  secondaryAsset={secondaryAsset}\n                  selectOnFocus\n                  style={{ flexGrow: 1, maxWidth: 250, width: \"55%\" }}\n                />\n              }\n              control={form.control}\n              name=\"manualPrice\"\n              rules={{\n                validate: value => {\n                  const valid = isValidAmount(value)\n                  return valid || t<string>(\"trading.validation.invalid-price\")\n                }\n              }}\n              valueName=\"manualPrice\"\n            />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        {relativeSpread >= 0.015 ? (\n          <Box margin=\"32px 0 0\" padding=\"8px 12px\" style={{ background: warningColor }}>\n            <b>{t(\"trading.warning.title\")}</b>\n            <br />\n            {t(\n              \"trading.warning.message\",\n              `The spread between buying and selling price is about ${(relativeSpread * 100).toFixed(1)}%.`,\n              { spread: (relativeSpread * 100).toFixed(1) }\n            )}\n          </Box>\n        ) : null}\n        {isSellingOwnAsset ? (\n          <Box margin=\"32px 0 0\" padding=\"8px 12px\" style={{ background: warningColor }}>\n            {t(\"trading.issuance\", { asset: primaryAsset?.getCode() })}\n          </Box>\n        ) : null}\n        <Portal target={props.dialogActionsRef?.element}>\n          <DialogActionsBox desktopStyle={{ marginTop: 32 }}>\n            <ActionButton loading={pending} icon={<GavelIcon />} onClick={form.handleSubmit(submitForm)} type=\"primary\">\n              {t(\"trading.action.submit\")}\n            </ActionButton>\n          </DialogActionsBox>\n        </Portal>\n      </VerticalLayout>\n    </VerticalLayout>\n  )\n}\n\nexport default React.memo(TradingForm)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Asset, Horizon, Transaction } from \"@stellar/stellar-sdk\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { Account } from \"~App/contexts/accounts\"\nimport * as routes from \"~App/routes\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport { InlineErrorBoundary } from \"~Generic/components/ErrorBoundaries\"\nimport MainTitle from \"~Generic/components/MainTitle\"\nimport Portal from \"~Generic/components/Portal\"\nimport ScrollableBalances from \"~Generic/components/ScrollableBalances\"\nimport TestnetBadge from \"~Generic/components/TestnetBadge\"\nimport ViewLoading from \"~Generic/components/ViewLoading\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useDialogActions, useRouter } from \"~Generic/hooks/userinterface\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport { parseAssetID, stringifyAsset } from \"~Generic/lib/stellar\"\nimport { getLastArgumentFromURL } from \"~Generic/lib/url\"\nimport Carousel from \"~Layout/components/Carousel\"\nimport DialogBody from \"~Layout/components/DialogBody\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\nimport MainActionSelection from \"./MainActionSelection\"\nimport TradingForm from \"./TradingForm\"\nimport OfferList from \"~Account/components/OfferList\"\n\ninterface TradingDialogProps {\n  account: Account\n  horizon: Horizon.Server\n  onClose: () => void\n  sendTransaction: (transaction: Transaction) => void\n}\n\nfunction getAssetFromPath(pathname: string) {\n  if (matchesRoute(pathname, routes.tradeAsset(\"*\", undefined, \"*\"))) {\n    const lastArgument = getLastArgumentFromURL(pathname)\n    if (lastArgument !== \"buy\" && lastArgument !== \"sell\") {\n      return parseAssetID(lastArgument)\n    }\n  }\n  return undefined\n}\n\nfunction TradingDialog(props: TradingDialogProps) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const dialogActionsRef = useDialogActions()\n  const router = useRouter()\n  const [preselectedAsset, setPreselectedAsset] = React.useState<Asset | undefined>()\n  const { t } = useTranslation()\n\n  React.useEffect(() => {\n    const asset = getAssetFromPath(router.location.pathname)\n    setPreselectedAsset(asset)\n  }, [router.location.pathname])\n\n  const trustlines = React.useMemo(\n    () =>\n      accountData.balances.filter((balance): balance is Horizon.HorizonApi.BalanceLineAsset => balance.asset_type !== \"native\"),\n    [accountData.balances]\n  )\n\n  const primaryAction: \"buy\" | \"sell\" | undefined = matchesRoute(\n    router.location.pathname,\n    routes.tradeAsset(\"*\", \"buy\")\n  )\n    ? \"buy\"\n    : matchesRoute(router.location.pathname, routes.tradeAsset(\"*\", \"sell\"))\n    ? \"sell\"\n    : undefined\n\n  const clearPrimaryAction = React.useCallback(() => {\n    router.history.push(\n      routes.tradeAsset(props.account.id, undefined, preselectedAsset ? stringifyAsset(preselectedAsset) : undefined)\n    )\n  }, [preselectedAsset, props.account, router.history])\n\n  const selectPrimaryAction = React.useCallback(\n    (mainAction: \"buy\" | \"sell\") => {\n      router.history.push(\n        routes.tradeAsset(props.account.id, mainAction, preselectedAsset ? stringifyAsset(preselectedAsset) : undefined)\n      )\n    },\n    [preselectedAsset, props.account, router.history]\n  )\n\n  const MainContent = React.useMemo(\n    () => (\n      <Carousel current={primaryAction ? 1 : 0}>\n        <div>\n          <MainActionSelection\n            onSelectBuy={() => selectPrimaryAction(\"buy\")}\n            onSelectSell={() => selectPrimaryAction(\"sell\")}\n            account={props.account}\n          />\n        </div>\n        <React.Suspense fallback={<ViewLoading />}>\n          <TradingForm\n            account={props.account}\n            accountData={accountData}\n            dialogActionsRef={primaryAction ? dialogActionsRef : null}\n            initialPrimaryAsset={preselectedAsset}\n            primaryAction={primaryAction || \"buy\"}\n            sendTransaction={props.sendTransaction}\n            trustlines={trustlines}\n          />\n        </React.Suspense>\n      </Carousel>\n    ),\n    [\n      accountData,\n      dialogActionsRef,\n      preselectedAsset,\n      primaryAction,\n      props.account,\n      props.sendTransaction,\n      selectPrimaryAction,\n      trustlines\n    ]\n  )\n\n  const LinkToManageAssets = React.useMemo(\n    () => (\n      <Box margin=\"32px 0 0\" textAlign=\"center\">\n        <Typography>{t(\"trading.no-assets-info\")}</Typography>\n        <Portal target={dialogActionsRef.element}>\n          <DialogActionsBox>\n            <ActionButton\n              autoFocus\n              onClick={() => router.history.push(routes.manageAccountAssets(props.account.id))}\n              type=\"primary\"\n            >\n              {t(\"trading.action.add-asset\")}\n            </ActionButton>\n          </DialogActionsBox>\n        </Portal>\n      </Box>\n    ),\n    [dialogActionsRef, props.account, router, t]\n  )\n\n  return (\n    <DialogBody\n      top={\n        <>\n          <MainTitle\n            title={\n              <span>\n                {t(\"trading.title\")}\n                {props.account.testnet ? <TestnetBadge style={{ marginLeft: 8 }} /> : null}\n              </span>\n            }\n            onBack={primaryAction ? clearPrimaryAction : props.onClose}\n          />\n          <ScrollableBalances account={props.account} compact />\n        </>\n      }\n      actions={primaryAction ? dialogActionsRef : null}\n    >\n      <InlineErrorBoundary>{trustlines.length > 0 ? MainContent : LinkToManageAssets}</InlineErrorBoundary>\n    </DialogBody>\n  )\n}\n\nfunction TradingDialogContainer(props: Pick<TradingDialogProps, \"account\" | \"onClose\">) {\n  const router = useRouter()\n  const navigateToAccount = () => router.history.push(routes.account(props.account.id))\n\n  return (\n    <TransactionSender account={props.account} onSubmissionCompleted={navigateToAccount}>\n      {txContext => <TradingDialog {...props} {...txContext} />}\n    </TransactionSender>\n  )\n}\n\nexport default TradingDialogContainer\n"],"names":["_toArray","r","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","styles","theme","transition","ExpansionPanel","React","props","ref","childrenProp","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_React$useRef","isControlled","_React$useState","expandedState","setExpandedState","expanded","handleChange","event","_React$Children$toArr","_React$Children$toArr2","summary","children","Paper","_extends","clsx","ExpansionPanel$1","withStyles","ExpansionPanelDetails","ExpansionPanelDetails$1","ExpansionPanelSummary","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible","focusedState","setFocusedState","handleFocusVisible","handleBlur","ButtonBase","IconButton","ExpansionPanelSummary$1","_interopRequireDefault","require$$0","ArrowRightAlt","_react","require$$1","_createSvgIcon","_default","BarChart","createDismissalTransaction","horizon","account","accountData","offer","buying","offerAssetToAsset","selling","createTransaction","Operation","OfferListItem","isSmallScreen","useIsMobile","ListItem","ListItemIcon","BarChartIcon","ListItemText","Trans","SingleBalance","BigNumber","HorizontalLayout","ArrowRightIcon","LoadMoreOffersListItem","t","useTranslation","ActionButton","makeStyles","breakpoints","OfferList","useLiveAccountData","useHorizon","offerHistory","useLiveAccountOffers","moreTxsLoadingState","handleMoreTxsFetch","useLoadingState","fetchMoreOffers","useOlderOffers","handleFetchMoreOffers","onCancel","tx","error","trackError","List","OfferListContainer","TransactionSender","sendTransaction","MainActionSelection","MainSelectionButton","AddIcon","RemoveIcon","MainActionSelection$1","Gavel","calculateSpread","asks","bids","absoluteSpread","relativeSpread","sum","numbers","total","no","useConversionOffers","offers","amount","invertOfferAmounts","bestOffers","bestMatches","offersToCover","volume","matchingOffer","bestPrices","worstPriceOfBestMatches","firstBestOffers","lastBestOffer","bigNumberToInputValue","bignum","overrides","formatBalance","getSpendableBalanceWithoutBaseReserve","accountMinimumBalance","balanceLine","spendableBalance","getSpendableBalance","BASE_RESERVE","useCalculation","parameters","priceMode","primaryAction","tradePair","manualPrice","primaryAmountString","primaryAsset","secondaryAsset","price","isValidAmount","FormBigNumber","primaryAmount","primaryBalance","findMatchingBalanceLine","secondaryBalance","bestPrice","effectivePrice","secondaryAmount","inversePrice","defaultPrice","minAccountBalance","getAccountMinimumBalance","spendablePrimaryBalance","spendableSecondaryBalance","maxPrimaryAmount","TradingPrice","isDisabled","priceUnit","_a","_b","label","endAdornment","InputAdornment","Select","MenuItem","TextField","TradingPrice$1","useStyles","TradingForm","isSmallHeightScreen","useMediaQuery","isSmallScreenXY","setExpanded","setPriceMode","pending","setPending","form","useForm","Asset","isSellingOwnAsset","useLiveOrderbook","assets","balancelineToAsset","calculation","setPrimaryAmountToMax","validateManualPrice","value","submitForm","CustomError","VerticalLayout","Controller","AssetSelector","amountInvalid","exceedsBalance","Button","ReadOnlyTextfield","ExpandMoreIcon","Typography","Box","warningColor","Portal","DialogActionsBox","GavelIcon","TradingForm$1","getAssetFromPath","pathname","matchesRoute","routes.tradeAsset","lastArgument","getLastArgumentFromURL","parseAssetID","TradingDialog","dialogActionsRef","useDialogActions","router","useRouter","preselectedAsset","setPreselectedAsset","asset","trustlines","balance","clearPrimaryAction","stringifyAsset","selectPrimaryAction","mainAction","MainContent","Carousel","ViewLoading","LinkToManageAssets","routes.manageAccountAssets","DialogBody","MainTitle","TestnetBadge","ScrollableBalances","InlineErrorBoundary","TradingDialogContainer","navigateToAccount","routes.account","txContext"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,8]}