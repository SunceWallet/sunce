{"version":3,"file":"AccountContextMenu-CPAI0-wP.js","sources":["../node_modules/@material-ui/icons/List.js","../node_modules/@material-ui/icons/AttachMoney.js","../node_modules/@material-ui/icons/Contacts.js","../src/Generic/components/ContextMenu.tsx","../src/Account/components/AccountContextMenu.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"\n}), 'List');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z\"\n}), 'AttachMoney');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"\"\n}), _react.default.createElement(\"path\", {\n  d: \"M20 0H4v2h16V0zM4 24h16v-2H4v2zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 2.75c1.24 0 2.25 1.01 2.25 2.25s-1.01 2.25-2.25 2.25S9.75 10.24 9.75 9 10.76 6.75 12 6.75zM17 17H7v-1.5c0-1.67 3.33-2.5 5-2.5s5 .83 5 2.5V17z\"\n})), 'Contacts');\n\nexports.default = _default;","import React from \"react\"\n\nexport interface AnchorRenderProps {\n  onOpen: (event: React.SyntheticEvent<HTMLElement>) => void\n}\n\ninterface MenuRenderProps {\n  anchorEl: HTMLElement | null\n  closeAndCall: (fn: (() => void) | undefined) => () => void\n  open: boolean\n  onClose: () => void\n}\n\ninterface Props {\n  anchor: (anchorProps: AnchorRenderProps) => React.ReactNode\n  menu: (menuProps: MenuRenderProps) => React.ReactNode\n}\n\nfunction ContextMenu({ anchor, menu }: Props) {\n  const [anchorElement, setAnchorElement] = React.useState<HTMLElement | null>(null)\n  const [isOpen, setOpenState] = React.useState(false)\n\n  const show = (event: React.SyntheticEvent<HTMLElement>) => {\n    setAnchorElement(event.currentTarget)\n    setOpenState(true)\n  }\n  const hide = () => setOpenState(false)\n\n  const closeAndCall = (fn?: () => void) => {\n    return () => {\n      hide()\n      if (fn) {\n        fn()\n      }\n    }\n  }\n\n  return (\n    <>\n      {anchor({ onOpen: show })}\n      {menu({\n        anchorEl: anchorElement,\n        open: isOpen,\n        onClose: hide,\n        closeAndCall\n      })}\n    </>\n  )\n}\n\nexport default React.memo(ContextMenu)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Divider from \"@material-ui/core/Divider\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport CallMadeIcon from \"@material-ui/icons/CallMade\"\nimport CallReceivedIcon from \"@material-ui/icons/CallReceived\"\nimport ListIcon from \"@material-ui/icons/List\"\nimport MoneyIcon from \"@material-ui/icons/AttachMoney\"\nimport ContactsIcon from \"@material-ui/icons/Contacts\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContextType } from \"~App/contexts/settings\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport ContextMenu, { AnchorRenderProps } from \"~Generic/components/ContextMenu\"\n\nconst useContextMenuItemStyles = makeStyles({\n  disabled: {\n    opacity: \"1 !important\" as any,\n\n    \"& > *\": {\n      opacity: \"0.5 !important\" as any\n    }\n  },\n  icon: {\n    flex: \"0 0 24px\",\n    minWidth: 24,\n    marginRight: 24\n  }\n})\n\ninterface ItemProps {\n  disabled?: boolean\n  hidden?: boolean\n  icon: React.ReactElement<any>\n  label: string\n  onClick: () => void\n}\n\nconst AccountContextMenuItem = React.memo(\n  React.forwardRef((props: ItemProps, ref) => {\n    const classes = useContextMenuItemStyles()\n\n    if (props.hidden) {\n      return null\n    }\n    return (\n      <MenuItem className={props.disabled ? classes.disabled : \"\"} disabled={props.disabled} onClick={props.onClick}>\n        <ListItemIcon className={classes.icon}>{props.icon}</ListItemIcon>\n        <ListItemText ref={ref}>{props.label}</ListItemText>\n      </MenuItem>\n    )\n  })\n)\n\ninterface MenuProps {\n  account: Account\n  children: (anchorProps: AnchorRenderProps) => React.ReactNode\n  onAccountSettings?: () => void\n  onAccountTransactions?: () => void\n  onDeposit?: () => void\n  onManageAssets?: () => void\n  onSavedAddresses?: () => void\n  onPurchaseLumens?: () => void\n  onTrade?: () => void\n  onWithdraw?: () => void\n  settings: SettingsContextType\n  showingSettings: boolean\n}\n\nfunction LiveAccountContextMenuItems(\n  props: MenuProps & { closeAndCall: (fn: (() => void) | undefined) => () => void }\n) {\n  const { closeAndCall } = props\n\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const isFunded = accountData.balances.length > 0\n  const isSigner = accountData.signers.some(signer => signer.key === props.account.publicKey)\n  const activated = isFunded && isSigner\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <AccountContextMenuItem\n        disabled={!activated || !props.onTrade}\n        icon={<SwapHorizIcon style={{ transform: \"scale(1.2)\" }} />}\n        label={t(\"account.context-menu.trade.label\")}\n        onClick={closeAndCall(props.onTrade)}\n      />\n      <AccountContextMenuItem\n        disabled={!isSigner || !props.onDeposit}\n        icon={<CallReceivedIcon />}\n        label={t(\"account.context-menu.deposit.label\")}\n        onClick={closeAndCall(accountData.balances.length > 1 ? props.onDeposit : props.onPurchaseLumens)}\n      />\n      <AccountContextMenuItem\n        disabled={!activated || !props.onWithdraw}\n        icon={<CallMadeIcon />}\n        label={t(\"account.context-menu.withdraw.label\")}\n        onClick={closeAndCall(props.onWithdraw)}\n      />\n      <Divider />\n      <AccountContextMenuItem\n        disabled={!activated || !props.onManageAssets}\n        icon={<MoneyIcon />}\n        label={t(\"account.context-menu.assets-and-balances.label\")}\n        onClick={closeAndCall(props.onManageAssets)}\n      />\n      <AccountContextMenuItem\n        disabled={!activated || !props.onSavedAddresses}\n        icon={<ContactsIcon />}\n        label={t(\"account.context-menu.saved-addresses.label\")}\n        onClick={closeAndCall(props.onSavedAddresses)}\n      />\n    </>\n  )\n}\n\nfunction AccountContextMenu(props: MenuProps) {\n  const isSmallScreen = useIsMobile()\n  const { t } = useTranslation()\n\n  return (\n    <ContextMenu\n      anchor={props.children}\n      menu={({ anchorEl, open, onClose, closeAndCall }) => (\n        <Menu\n          anchorEl={isSmallScreen ? document.body : anchorEl || undefined}\n          disableAutoFocusItem={isSmallScreen}\n          onClose={onClose}\n          open={open}\n        >\n          <React.Suspense fallback={null}>\n            <LiveAccountContextMenuItems closeAndCall={closeAndCall} {...props} />\n          </React.Suspense>\n          {props.showingSettings ? (\n            <AccountContextMenuItem\n              disabled={!props.onAccountTransactions}\n              icon={<ListIcon />}\n              label={t(\"account.context-menu.transactions.label\")}\n              onClick={closeAndCall(props.onAccountTransactions)}\n            />\n          ) : (\n            <AccountContextMenuItem\n              disabled={!props.onAccountSettings}\n              icon={<SettingsIcon />}\n              label={t(\"account.context-menu.account-settings.label\")}\n              onClick={closeAndCall(props.onAccountSettings)}\n            />\n          )}\n        </Menu>\n      )}\n    />\n  )\n}\n\nexport default React.memo(AccountContextMenu)\n"],"names":["_interopRequireDefault","require$$0","List","_react","require$$1","_createSvgIcon","_default","AttachMoney","Contacts","ContextMenu","anchor","menu","anchorElement","setAnchorElement","React","isOpen","setOpenState","show","event","hide","closeAndCall","fn","ContextMenu$1","useContextMenuItemStyles","makeStyles","AccountContextMenuItem","props","ref","classes","MenuItem","ListItemIcon","ListItemText","LiveAccountContextMenuItems","accountData","useLiveAccountData","isFunded","isSigner","signer","activated","t","useTranslation","SwapHorizIcon","CallReceivedIcon","CallMadeIcon","Divider","MoneyIcon","ContactsIcon","AccountContextMenu","isSmallScreen","useIsMobile","anchorEl","open","onClose","Menu","ListIcon","SettingsIcon","AccountContextMenu$1"],"mappings":"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","x_google_ignoreList":[0,1,2]}