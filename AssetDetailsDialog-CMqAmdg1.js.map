{"version":3,"file":"AssetDetailsDialog-CMqAmdg1.js","sources":["../src/Assets/components/RemoveTrustline.tsx","../src/Assets/components/AssetDetailsActions.tsx","../src/Assets/components/SpendableBalanceBreakdown.tsx","../src/Assets/components/AssetDetailsDialog.tsx"],"sourcesContent":["import React from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { Asset, Horizon, Operation } from \"@stellar/stellar-sdk\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport TransactionSender, { SendTransaction } from \"~Transaction/components/TransactionSender\"\n\ninterface Props {\n  account: Account\n  accountData: AccountData\n  asset: Asset\n  horizon: Horizon.Server\n  onClose: () => void\n  onRemoved: () => void\n  sendTransaction: SendTransaction\n}\n\n// tslint:disable-next-line no-shadowed-variable\nconst RemoveTrustlineDialog = React.memo(function RemoveTrustlineDialog(props: Props) {\n  const { t } = useTranslation()\n  const [txCreationPending, setTxCreationPending] = React.useState(false)\n\n  const removeAsset = async () => {\n    try {\n      setTxCreationPending(true)\n      const operations = [Operation.changeTrust({ asset: props.asset, limit: \"0\", withMuxing: true })]\n      const transaction = await createTransaction(operations, {\n        accountData: props.accountData,\n        horizon: props.horizon,\n        walletAccount: props.account\n      })\n      setTxCreationPending(false)\n      await props.sendTransaction(transaction)\n      props.onRemoved()\n    } catch (error) {\n      setTxCreationPending(false)\n      trackError(error)\n    }\n  }\n\n  const assetBalance = (props.accountData.balances as Horizon.BalanceLineAsset[]).find(\n    balance => balance.asset_code === props.asset.getCode() && balance.asset_issuer === props.asset.getIssuer()\n  )\n  const stillOwnsTokens = assetBalance && parseFloat(assetBalance.balance) > 0\n\n  return (\n    <>\n      <DialogTitle>{t(\"account.remove-trustline.title\")}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {stillOwnsTokens ? (\n            <>{t(\"account.remove-trustline.text.warning\")}</>\n          ) : (\n            <Trans i18nKey=\"account.remove-trustline.text.info\">\n              You are about to remove <b>{{ asset: props.asset.code }}</b> from account \"\n              {{ accountName: props.account.name }}\".\n            </Trans>\n          )}\n        </DialogContentText>\n        {/* Not in the DialogBody's `actions` prop as it's not a fullscreen dialog */}\n        <DialogActionsBox preventMobileActionsBox>\n          <ActionButton onClick={props.onClose} style={{ maxWidth: \"none\" }}>\n            {t(\"account.remove-trustline.action.cancel\")}\n          </ActionButton>\n          {stillOwnsTokens ? null : (\n            <ActionButton\n              autoFocus\n              disabled={stillOwnsTokens}\n              loading={txCreationPending}\n              icon={<CloseIcon />}\n              onClick={removeAsset}\n              style={{ maxWidth: \"none\" }}\n              type=\"primary\"\n            >\n              {t(\"account.remove-trustline.action.remove\")}\n            </ActionButton>\n          )}\n        </DialogActionsBox>\n      </DialogContent>\n    </>\n  )\n})\n\nfunction ConnectedRemoveTrustlineDialog(props: Omit<Props, \"balances\" | \"horizon\" | \"sendTransaction\">) {\n  return (\n    <TransactionSender account={props.account} onSubmissionCompleted={props.onClose}>\n      {({ horizon, sendTransaction }) => (\n        <RemoveTrustlineDialog\n          {...props}\n          accountData={props.accountData}\n          horizon={horizon}\n          sendTransaction={sendTransaction}\n        />\n      )}\n    </TransactionSender>\n  )\n}\n\nexport default React.memo(ConnectedRemoveTrustlineDialog)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Asset, Operation, Horizon, Transaction } from \"@stellar/stellar-sdk\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport ClearIcon from \"@material-ui/icons/Clear\"\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport * as routes from \"~App/routes\"\nimport { CompactDialogTransition } from \"~App/theme\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useRouter } from \"~Generic/hooks/userinterface\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { stringifyAsset } from \"~Generic/lib/stellar\"\nimport { DialogActionsBox, ActionButton } from \"~Generic/components/DialogActions\"\nimport TransactionSender, { SendTransaction } from \"~Transaction/components/TransactionSender\"\nimport RemoveTrustlineDialog from \"./RemoveTrustline\"\n\nconst dialogActionsBoxStyle: React.CSSProperties = {\n  marginTop: 8\n}\n\ninterface Props {\n  account: Account\n  asset: Asset\n  horizon: Horizon.Server\n  sendTransaction: SendTransaction\n}\n\nfunction AssetDetailsActions(props: Props) {\n  const { account, asset } = props\n  const [removalDialogOpen, setRemovalDialogOpen] = React.useState(false)\n  const [txCreationPending, setTxCreationPending] = React.useState(false)\n  const router = useRouter()\n  const { t } = useTranslation()\n\n  const accountData = useLiveAccountData(account.accountID, account.testnet)\n\n  const balance = accountData.balances.find(\n    bal => bal.asset_type !== \"native\" && bal.asset_issuer === asset.issuer && bal.asset_code === asset.code\n  )\n\n  const createAddAssetTransaction = async (options: { limit?: string } = {}) => {\n    const operations = [Operation.changeTrust({ asset, limit: options.limit, withMuxing: true })]\n    return createTransaction(operations, {\n      accountData,\n      horizon: props.horizon,\n      walletAccount: props.account\n    })\n  }\n\n  const navigateBackDelayed = React.useCallback(() => {\n    setTimeout(() => router.history.push(routes.account(props.account.id)), 1300)\n  }, [props.account, router.history])\n\n  const sendTransaction = async (createTransactionToSend: () => Promise<Transaction>) => {\n    try {\n      setTxCreationPending(true)\n      const transaction = await createTransactionToSend()\n      setTxCreationPending(false)\n      await props.sendTransaction(transaction)\n      closeRemovalDialog()\n      navigateBackDelayed()\n    } catch (error) {\n      setTxCreationPending(false)\n      trackError(error)\n    }\n  }\n\n  const addThisAsset = () => sendTransaction(() => createAddAssetTransaction())\n  const closeRemovalDialog = React.useCallback(() => setRemovalDialogOpen(false), [])\n  const removeThisAsset = React.useCallback(() => setRemovalDialogOpen(true), [])\n\n  const tradeThisAsset = React.useCallback(\n    () => router.history.push(routes.tradeAsset(props.account.id, undefined, stringifyAsset(asset))),\n    [asset, props.account.id, router.history]\n  )\n\n  return (\n    <>\n      <DialogActionsBox desktopStyle={dialogActionsBoxStyle} smallDialog>\n        {balance ? (\n          <>\n            <ActionButton icon={<ClearIcon />} onClick={removeThisAsset} type=\"secondary\">\n              {t(\"account.add-asset.action.remove\")}\n            </ActionButton>\n            <ActionButton icon={<SwapHorizIcon />} onClick={tradeThisAsset} type=\"primary\">\n              {t(\"account.add-asset.action.trade\")}\n            </ActionButton>\n          </>\n        ) : (\n          <ActionButton loading={txCreationPending} onClick={addThisAsset} type=\"primary\">\n            {t(\"account.add-asset.action.add-asset\")}\n          </ActionButton>\n        )}\n      </DialogActionsBox>\n      <Dialog open={removalDialogOpen} onClose={closeRemovalDialog} TransitionComponent={CompactDialogTransition}>\n        <RemoveTrustlineDialog\n          account={props.account}\n          accountData={accountData}\n          asset={asset}\n          onClose={closeRemovalDialog}\n          onRemoved={navigateBackDelayed}\n        />\n      </Dialog>\n    </>\n  )\n}\n\nfunction ConnectedAssetDetailsActions(props: Omit<Props, \"horizon\" | \"sendTransaction\">) {\n  return (\n    <TransactionSender account={props.account}>\n      {({ horizon, sendTransaction }) => (\n        <AssetDetailsActions {...props} horizon={horizon} sendTransaction={sendTransaction} />\n      )}\n    </TransactionSender>\n  )\n}\n\nexport default React.memo(ConnectedAssetDetailsActions)\n","import BigNumber from \"big.js\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { breakpoints } from \"~App/theme\"\nimport { SingleBalance } from \"~Account/components/AccountBalances\"\n\nconst useBreakdownItemStyles = makeStyles({\n  root: {\n    padding: 0\n  },\n  mainListItemText: {\n    flexShrink: 5\n  },\n  mainListItemTextIndent: {\n    marginLeft: 24,\n\n    [breakpoints.down(600)]: {\n      marginLeft: 12\n    }\n  },\n  mainListItemTextPrimaryTypography: {\n    fontSize: 18,\n    fontWeight: 300,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n\n    [breakpoints.down(400)]: {\n      fontSize: 16,\n      lineHeight: \"20px\"\n    }\n  },\n  mainListItemTextSecondaryTypography: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n\n    [breakpoints.down(400)]: {\n      fontSize: 14\n    },\n    [breakpoints.down(350)]: {\n      fontSize: 12\n    }\n  },\n  balanceListItem: {\n    marginLeft: 8,\n    textAlign: \"right\"\n  }\n})\n\ninterface BreakdownItemProps {\n  amount: string\n  hide?: boolean\n  indent?: boolean\n  primary: React.ReactNode\n  secondary?: React.ReactNode\n  style?: React.CSSProperties\n  variant?: \"deduction\" | \"gross\" | \"total\"\n}\n\nfunction BreakdownItem(props: BreakdownItemProps) {\n  const { variant = \"deduction\" } = props\n  const classes = useBreakdownItemStyles()\n\n  if (props.hide) {\n    return null\n  }\n  return (\n    <ListItem className={classes.root} style={props.style}>\n      <ListItemText\n        classes={{\n          root: `${classes.mainListItemText} ${props.indent ? classes.mainListItemTextIndent : \"\"}`,\n          primary: classes.mainListItemTextPrimaryTypography,\n          secondary: classes.mainListItemTextSecondaryTypography\n        }}\n        primary={props.primary}\n        secondary={props.secondary}\n      />\n      <ListItemText\n        className={classes.balanceListItem}\n        primaryTypographyProps={{\n          style: { fontSize: \"150%\" }\n        }}\n      >\n        {variant === \"deduction\" ? \"-\" : variant === \"gross\" ? \"\" : \"=\"}\n        &nbsp;\n        <SingleBalance assetCode=\"\" balance={props.amount} />\n      </ListItemText>\n    </ListItem>\n  )\n}\n\nconst BreakdownHeadline = React.memo(function BreakdownHeadline(props: { left?: string; right?: string }) {\n  const classes = useBreakdownItemStyles()\n\n  return (\n    <ListItem className={classes.root} style={{ borderBottom: \"none\" }}>\n      <ListItemText\n        classes={{\n          root: classes.mainListItemText,\n          primary: classes.mainListItemTextPrimaryTypography,\n          secondary: classes.mainListItemTextSecondaryTypography\n        }}\n        primary={props.left}\n      />\n      <ListItemText\n        className={classes.balanceListItem}\n        primaryTypographyProps={{\n          style: {\n            fontSize: \"120%\",\n            fontWeight: 300\n          }\n        }}\n        style={{\n          marginTop: 0,\n          marginBottom: 0\n        }}\n      >\n        {props.right}\n      </ListItemText>\n    </ListItem>\n  )\n})\n\ninterface Props {\n  account: Account\n  accountData: AccountData\n  baseReserve: number\n  style?: React.CSSProperties\n}\n\nfunction SpendableBalanceBreakdown(props: Props) {\n  const { t } = useTranslation()\n\n  const nativeBalance = props.accountData.balances.find(balance => balance.asset_type === \"native\")\n  const trustedAssetBalances = props.accountData.balances.filter(balance => balance.asset_type !== \"native\")\n\n  const dataReserve = props.baseReserve * Object.keys(props.accountData.data_attr).length\n  const signersReserve = props.baseReserve * props.accountData.signers.length\n  const trustlinesReserve = props.baseReserve * trustedAssetBalances.length\n  const sellingLiabilities = nativeBalance ? BigNumber(nativeBalance.selling_liabilities) : BigNumber(0)\n\n  // calculate open orders reserve based on subentry count to circumvent fetching all orders\n  const openOrdersReserve = BigNumber(props.accountData.subentry_count * props.baseReserve)\n    .minus(props.baseReserve * (props.accountData.signers.length - 1))\n    .minus(dataReserve)\n    .minus(trustlinesReserve)\n\n  const rawBalance = nativeBalance ? BigNumber(nativeBalance.balance) : BigNumber(0)\n  const spendableBalance = rawBalance\n    .minus(props.baseReserve)\n    .minus(dataReserve)\n    .minus(openOrdersReserve)\n    .minus(signersReserve)\n    .minus(trustlinesReserve)\n    .minus(sellingLiabilities)\n\n  return (\n    <List style={{ padding: 0 }}>\n      <BreakdownHeadline right={t(\"account.balance-details.spendable-balances.headline\")} />\n      <BreakdownItem\n        amount={rawBalance.toFixed(4)}\n        primary={t(\"account.balance-details.spendable-balances.total-balance.primary\")}\n        secondary={t(\"account.balance-details.spendable-balances.total-balance.secondary\")}\n        style={props.style}\n        variant=\"gross\"\n      />\n      <BreakdownItem\n        amount={props.baseReserve.toFixed(1)}\n        indent\n        primary={t(\"account.balance-details.spendable-balances.base-reserve.primary\")}\n        secondary={t(\"account.balance-details.spendable-balances.base-reserve.secondary\")}\n        style={props.style}\n      />\n      <BreakdownItem\n        amount={signersReserve.toFixed(1)}\n        indent\n        primary={t(\"account.balance-details.spendable-balances.signers-reserve.primary\")}\n        secondary={\n          props.accountData.signers.length === 1\n            ? t(\"account.balance-details.spendable-balances.signers-reserve.secondary.single-key\")\n            : t(\"account.balance-details.spendable-balances.signers-reserve.secondary.multiple-keys\")\n        }\n        style={props.style}\n      />\n      <BreakdownItem\n        amount={trustlinesReserve.toFixed(1)}\n        hide={trustlinesReserve === 0}\n        indent\n        primary={t(\"account.balance-details.spendable-balances.trustline-reserve.primary\")}\n        secondary={t(\"account.balance-details.spendable-balances.trustline-reserve.secondary\")}\n        style={props.style}\n      />\n      <BreakdownItem\n        amount={openOrdersReserve.toFixed(1)}\n        hide={openOrdersReserve.cmp(0) === 0}\n        indent\n        primary={t(\"account.balance-details.spendable-balances.open-orders-reserve.primary\")}\n        secondary={t(\"account.balance-details.spendable-balances.open-orders-reserve.secondary\")}\n        style={props.style}\n      />\n      <BreakdownItem\n        amount={dataReserve.toFixed(1)}\n        hide={dataReserve === 0}\n        indent\n        primary={t(\"account.balance-details.spendable-balances.data-reserve.primary\")}\n        secondary={t(\"account.balance-details.spendable-balances.data-reserve.secondary\")}\n        style={props.style}\n      />\n      <BreakdownItem\n        amount={sellingLiabilities.toString()}\n        hide={sellingLiabilities.eq(0)}\n        indent\n        primary={t(\"account.balance-details.spendable-balances.selling-liabilities.primary\")}\n        secondary={t(\"account.balance-details.spendable-balances.selling-liabilities.secondary\")}\n        style={props.style}\n      />\n      <BreakdownItem\n        amount={spendableBalance.toString()}\n        primary={t(\"account.balance-details.spendable-balances.spendable-balance.primary\")}\n        secondary={t(\"account.balance-details.spendable-balances.spendable-balance.secondary\")}\n        style={props.style}\n        variant=\"total\"\n      />\n    </List>\n  )\n}\n\nexport default React.memo(SpendableBalanceBreakdown)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Asset } from \"@stellar/stellar-sdk\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { useAccountData, useAssetMetadata, useStellarToml } from \"~Generic/hooks/stellar\"\nimport { useClipboard, useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { BASE_RESERVE, parseAssetID } from \"~Generic/lib/stellar\"\nimport { openLink } from \"~Platform/links\"\nimport { breakpoints } from \"~App/theme\"\nimport { StellarTomlCurrency } from \"~shared/types/stellar-toml\"\nimport { SingleBalance } from \"~Account/components/AccountBalances\"\nimport DialogBody from \"~Layout/components/DialogBody\"\nimport { AccountName } from \"~Generic/components/Fetchers\"\nimport { ReadOnlyTextfield } from \"~Generic/components/FormFields\"\nimport { VerticalLayout } from \"~Layout/components/Box\"\nimport MainTitle from \"~Generic/components/MainTitle\"\nimport AssetDetailsActions from \"./AssetDetailsActions\"\nimport AssetLogo from \"./AssetLogo\"\nimport SpendableBalanceBreakdown from \"./SpendableBalanceBreakdown\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\n\nconst capitalize = (text: string) => text[0].toUpperCase() + text.substr(1)\n\nconst useDetailContentStyles = makeStyles({\n  card: {\n    backgroundColor: \"#fbfbfb\",\n    borderRadius: 8,\n    margin: \"12px -8px\",\n    overflowY: \"auto\"\n  },\n  cardContent: {\n    position: \"relative\",\n    padding: \"8px 16px !important\"\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 400,\n    marginBottom: 8\n  },\n  cardLogo: {\n    position: \"absolute\",\n    top: 8,\n    right: 8,\n    width: 72,\n    height: 72,\n    backgroundColor: \"white\",\n    boxShadow: \"0 0 2px 2px rgba(0, 0, 0, 0.2)\"\n  },\n  cardLogoImage: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n})\n\ninterface LumenDetailProps {\n  account: Account\n}\n\nconst LumenDetails = React.memo(function LumenDetails(props: LumenDetailProps) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const classes = useDetailContentStyles()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <ReadOnlyTextfield\n            disableUnderline\n            fullWidth\n            label={t(\"account.asset-details.lumen.description.label\")}\n            multiline\n            value={t(\"account.asset-details.lumen.description.text\")}\n          />\n        </CardContent>\n      </Card>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <SpendableBalanceBreakdown account={props.account} accountData={accountData} baseReserve={BASE_RESERVE} />\n        </CardContent>\n      </Card>\n    </>\n  )\n})\n\ninterface AssetDetailProps {\n  account: Account\n  asset: Asset\n  metadata: StellarTomlCurrency | undefined\n}\n\nconst AssetDetails = React.memo(function AssetDetails({ account, asset, metadata }: AssetDetailProps) {\n  const issuingAccountData = useAccountData(asset.issuer, account.testnet)\n  const stellarToml = useStellarToml(issuingAccountData.home_domain)\n\n  const classes = useDetailContentStyles()\n  const clipboard = useClipboard()\n  const { t } = useTranslation()\n\n  const copyIssuerToClipboard = React.useCallback(() => clipboard.copyToClipboard(asset.getIssuer()), [\n    asset,\n    clipboard\n  ])\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          {metadata && metadata.desc ? (\n            <ReadOnlyTextfield\n              disableUnderline\n              fullWidth\n              label={t(\"account.asset-details.general.description.label\")}\n              margin=\"dense\"\n              multiline\n              value={metadata.desc}\n            />\n          ) : null}\n          <ReadOnlyTextfield\n            disableUnderline\n            fullWidth\n            label={t(\"account.asset-details.general.issuing-account.label\")}\n            margin=\"dense\"\n            onClick={copyIssuerToClipboard}\n            value={asset.getIssuer()}\n            inputProps={{\n              style: {\n                cursor: \"pointer\",\n                textOverflow: \"ellipsis\"\n              }\n            }}\n          />\n          <ReadOnlyTextfield\n            disableUnderline\n            fullWidth\n            label={t(\"account.asset-details.general.account-flags.label\")}\n            margin=\"dense\"\n            multiline\n            value={capitalize(\n              [\n                issuingAccountData.flags.auth_required\n                  ? `• ${t(\"account.asset-details.general.account-flags.auth-required\")}`\n                  : `• ${t(\"account.asset-details.general.account-flags.auth-not-required\")}`,\n                issuingAccountData.flags.auth_revocable\n                  ? `• ${t(\"account.asset-details.general.account-flags.auth-revocable\")}`\n                  : `• ${t(\"account.asset-details.general.account-flags.auth-not-revocable\")}`,\n                issuingAccountData.flags.auth_immutable\n                  ? `• ${t(\"account.asset-details.general.account-flags.auth-immutable\")}`\n                  : `• ${t(\"account.asset-details.general.account-flags.auth-mutable\")}`\n              ].join(\"\\n\")\n            )}\n          />\n          {metadata && metadata.conditions ? (\n            <ReadOnlyTextfield\n              disableUnderline\n              fullWidth\n              label={t(\"account.asset-details.general.conditions.label\")}\n              margin=\"dense\"\n              multiline\n              value={metadata.conditions}\n            />\n          ) : null}\n          {metadata && metadata.anchor_asset_type ? (\n            <ReadOnlyTextfield\n              disableUnderline\n              fullWidth\n              label={t(\"account.asset-details.general.anchor-asset.label\")}\n              margin=\"dense\"\n              multiline\n              value={\n                metadata.anchor_asset\n                  ? `${capitalize(metadata.anchor_asset)} (${capitalize(metadata.anchor_asset_type)})`\n                  : capitalize(metadata.anchor_asset_type)\n              }\n            />\n          ) : null}\n          {metadata && metadata.redemption_instructions ? (\n            <ReadOnlyTextfield\n              disableUnderline\n              fullWidth\n              label={t(\"account.asset-details.general.redemption-instructions.label\")}\n              margin=\"dense\"\n              multiline\n              value={metadata.redemption_instructions}\n            />\n          ) : null}\n        </CardContent>\n      </Card>\n      {stellarToml && stellarToml.DOCUMENTATION ? (\n        <Card className={classes.card}>\n          <CardContent className={classes.cardContent}>\n            {stellarToml.DOCUMENTATION.ORG_LOGO ? (\n              <Avatar className={classes.cardLogo}>\n                <img\n                  alt=\"Organization logo\"\n                  className={classes.cardLogoImage}\n                  src={stellarToml.DOCUMENTATION.ORG_LOGO}\n                />\n              </Avatar>\n            ) : null}\n            {stellarToml.DOCUMENTATION.ORG_NAME ? (\n              <ReadOnlyTextfield\n                disableUnderline\n                fullWidth\n                label={t(\"account.asset-details.general.organisation.name.label\")}\n                margin=\"dense\"\n                value={stellarToml.DOCUMENTATION.ORG_NAME}\n              />\n            ) : null}\n            {stellarToml.DOCUMENTATION.ORG_DBA ? (\n              <ReadOnlyTextfield\n                disableUnderline\n                fullWidth\n                label={t(\"account.asset-details.general.organisation.dba.label\")}\n                margin=\"dense\"\n                value={stellarToml.DOCUMENTATION.ORG_DBA}\n              />\n            ) : null}\n            {stellarToml.DOCUMENTATION.ORG_URL ? (\n              <ReadOnlyTextfield\n                disableUnderline\n                fullWidth\n                label={t(\"account.asset-details.general.organisation.website.label\")}\n                margin=\"dense\"\n                onClick={() => openLink(stellarToml!.DOCUMENTATION!.ORG_URL!)}\n                value={stellarToml.DOCUMENTATION.ORG_URL}\n                inputProps={{\n                  style: {\n                    cursor: \"pointer\",\n                    textDecoration: \"underline\"\n                  }\n                }}\n              />\n            ) : null}\n            {stellarToml.DOCUMENTATION.ORG_DESCRIPTION ? (\n              <ReadOnlyTextfield\n                disableUnderline\n                fullWidth\n                label={t(\"account.asset-details.general.organisation.description.label\")}\n                margin=\"dense\"\n                multiline\n                value={stellarToml.DOCUMENTATION.ORG_DESCRIPTION}\n              />\n            ) : null}\n            {stellarToml.DOCUMENTATION.ORG_PHYSICAL_ADDRESS ? (\n              <ReadOnlyTextfield\n                disableUnderline\n                fullWidth\n                label={t(\"account.asset-details.general.organisation.address.label\")}\n                margin=\"dense\"\n                multiline\n                value={stellarToml.DOCUMENTATION.ORG_PHYSICAL_ADDRESS}\n                inputProps={{\n                  style: {\n                    whiteSpace: \"pre\"\n                  }\n                }}\n              />\n            ) : null}\n            {stellarToml.DOCUMENTATION.ORG_OFFICIAL_EMAIL ? (\n              <ReadOnlyTextfield\n                disableUnderline\n                fullWidth\n                label={t(\"account.asset-details.general.organisation.email.label\")}\n                margin=\"dense\"\n                multiline\n                onClick={() => openLink(\"mailto:\" + stellarToml!.DOCUMENTATION!.ORG_OFFICIAL_EMAIL!)}\n                value={stellarToml.DOCUMENTATION.ORG_OFFICIAL_EMAIL}\n                inputProps={{\n                  style: {\n                    cursor: \"pointer\",\n                    textDecoration: \"underline\"\n                  }\n                }}\n              />\n            ) : null}\n            {stellarToml.DOCUMENTATION.ORG_PHONE_NUMBER ? (\n              <ReadOnlyTextfield\n                disableUnderline\n                fullWidth\n                label={t(\"account.asset-details.general.organisation.phone-number.label\")}\n                margin=\"dense\"\n                multiline\n                value={stellarToml.DOCUMENTATION.ORG_PHONE_NUMBER}\n              />\n            ) : null}\n          </CardContent>\n        </Card>\n      ) : null}\n    </>\n  )\n})\n\nconst useAssetDetailStyles = makeStyles({\n  logo: {\n    position: \"absolute\",\n    top: 4,\n    right: -4,\n    width: 96,\n    height: 96,\n    boxShadow: \"0 0 8px 2px rgba(0, 0, 0, 0.2)\",\n    fontSize: 24,\n\n    [breakpoints.down(600)]: {\n      width: 64,\n      height: 64,\n      fontSize: 18\n    }\n  },\n  domain: {\n    marginTop: -4,\n    marginLeft: 47, // should be 46, but somehow 47 looks correct\n    marginBottom: 16,\n\n    [breakpoints.down(600)]: {\n      marginLeft: 39\n    }\n  }\n})\n\ninterface Props {\n  account: Account\n  assetID: string\n  onClose: () => void\n}\n\nfunction AssetDetailsDialog(props: Props) {\n  const accountData = useAccountData(props.account.accountID, props.account.testnet)\n  const asset = React.useMemo(() => parseAssetID(props.assetID), [props.assetID])\n  const classes = useAssetDetailStyles()\n  const isSmallScreen = useIsMobile()\n\n  const balance = accountData.balances.find(\n    asset.isNative()\n      ? bal => bal.asset_type === \"native\"\n      : bal => bal.asset_type !== \"native\" && bal.asset_issuer === asset.issuer && bal.asset_code === asset.code\n  )\n\n  const metadata = useAssetMetadata(asset, props.account.testnet)\n\n  const dialogActions = React.useMemo(\n    () => (asset.isNative() ? null : <AssetDetailsActions account={props.account} asset={asset} />),\n    [props.account, asset]\n  )\n\n  return (\n    <DialogBody\n      excessWidth={8}\n      top={\n        <>\n          <MainTitle\n            nowrap\n            onBack={props.onClose}\n            style={{ position: \"relative\", zIndex: 1 }}\n            title={\n              asset.isNative()\n                ? \"Stellar Lumens (XLM)\"\n                : metadata && metadata.name\n                ? `${metadata.name} (${asset.getCode()})`\n                : asset.getCode()\n            }\n            titleStyle={{\n              maxWidth: isSmallScreen ? \"calc(100% - 75px)\" : \"calc(100% - 100px)\",\n              textShadow: \"0 0 5px white, 0 0 5px white, 0 0 5px white\"\n            }}\n          />\n          <Typography className={classes.domain} variant=\"subtitle1\">\n            {balance ? (\n              <SingleBalance assetCode={asset.getCode()} balance={balance.balance} />\n            ) : asset.isNative() ? (\n              \"stellar.org\"\n            ) : (\n              <AccountName publicKey={asset.getIssuer()} testnet={props.account.testnet} />\n            )}\n          </Typography>\n          <AssetLogo asset={asset} className={classes.logo} testnet={props.account.testnet} />\n        </>\n      }\n      actions={dialogActions}\n      actionsPosition=\"bottom\"\n      fitToShrink\n    >\n      <VerticalLayout margin=\"0 4px\" padding={`0 0 ${isSmallScreen ? 68 : 0}px`} shrink={0}>\n        {asset.isNative() ? (\n          <LumenDetails account={props.account} />\n        ) : (\n          <AssetDetails account={props.account} asset={asset} metadata={metadata} />\n        )}\n      </VerticalLayout>\n    </DialogBody>\n  )\n}\n\nexport default AssetDetailsDialog\n"],"names":["RemoveTrustlineDialog","React","props","t","useTranslation","txCreationPending","setTxCreationPending","removeAsset","operations","Operation","transaction","createTransaction","error","trackError","assetBalance","balance","stillOwnsTokens","DialogTitle","DialogContent","DialogContentText","Trans","DialogActionsBox","ActionButton","CloseIcon","ConnectedRemoveTrustlineDialog","TransactionSender","horizon","sendTransaction","RemoveTrustlineDialog$1","dialogActionsBoxStyle","AssetDetailsActions","account","asset","removalDialogOpen","setRemovalDialogOpen","router","useRouter","accountData","useLiveAccountData","bal","createAddAssetTransaction","options","navigateBackDelayed","routes.account","createTransactionToSend","closeRemovalDialog","addThisAsset","removeThisAsset","tradeThisAsset","routes.tradeAsset","stringifyAsset","ClearIcon","SwapHorizIcon","Dialog","CompactDialogTransition","ConnectedAssetDetailsActions","AssetDetailsActions$1","useBreakdownItemStyles","makeStyles","breakpoints","BreakdownItem","variant","classes","ListItem","ListItemText","SingleBalance","BreakdownHeadline","SpendableBalanceBreakdown","nativeBalance","trustedAssetBalances","dataReserve","signersReserve","trustlinesReserve","sellingLiabilities","BigNumber","openOrdersReserve","rawBalance","spendableBalance","List","SpendableBalanceBreakdown$1","capitalize","text","useDetailContentStyles","LumenDetails","Card","CardContent","ReadOnlyTextfield","BASE_RESERVE","AssetDetails","metadata","issuingAccountData","useAccountData","stellarToml","useStellarToml","clipboard","useClipboard","copyIssuerToClipboard","Avatar","openLink","useAssetDetailStyles","AssetDetailsDialog","parseAssetID","isSmallScreen","useIsMobile","useAssetMetadata","dialogActions","DialogBody","MainTitle","Typography","AccountName","AssetLogo","VerticalLayout"],"mappings":"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"}