{"version":3,"file":"LumenPurchaseOptions-BS60gtKd.js","sources":["../src/LumenPurchase/components/LegalConfirmation.tsx","../src/LumenPurchase/components/LumenPurchaseOptions.tsx"],"sourcesContent":["import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useDialogActions, useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { breakpoints, CompactDialogTransition } from \"~App/theme\"\nimport DialogBody from \"~Layout/components/DialogBody\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport Portal from \"~Generic/components/Portal\"\n\nconst useLegalConfirmationStyles = makeStyles({\n  root: {\n    [breakpoints.down(600)]: {\n      zIndex: 1400\n    }\n  },\n  dialogPaper: {\n    [breakpoints.down(600)]: {\n      alignSelf: \"flex-end\",\n      background: \"rgba(255, 255, 255, 0.9)\",\n      margin: \"0 20px 120px\"\n    }\n  }\n})\n\ninterface Props {\n  message: React.ReactNode\n  onClose: () => void\n  onConfirm: () => void\n  open: boolean\n}\n\nfunction LegalConfirmation(props: Props) {\n  const classes = useLegalConfirmationStyles()\n  const dialogActionsRef = useDialogActions()\n  const isSmallScreen = useIsMobile()\n  const { t } = useTranslation()\n\n  const actions = React.useMemo(\n    () => (\n      <DialogActionsBox className={classes.root} smallDialog transparent>\n        <Fade enter={isSmallScreen} exit={isSmallScreen} in={props.open}>\n          <ActionButton onClick={props.onConfirm} type=\"primary\">\n            {t(\"account.purchase-lumens.legal-confirmation.action.confirm\")}\n          </ActionButton>\n        </Fade>\n      </DialogActionsBox>\n    ),\n    [classes.root, isSmallScreen, props.onConfirm, props.open, t]\n  )\n\n  return (\n    <Dialog\n      classes={{\n        paper: classes.dialogPaper\n      }}\n      onClose={props.onClose}\n      open={props.open}\n      TransitionComponent={CompactDialogTransition}\n    >\n      <DialogBody actions={dialogActionsRef} preventActionsPlaceholder preventNotchSpacing>\n        <Typography color=\"textSecondary\">{props.message}</Typography>\n      </DialogBody>\n      <Portal target={isSmallScreen ? document.body : dialogActionsRef.element}>{actions}</Portal>\n    </Dialog>\n  )\n}\n\nexport default React.memo(LegalConfirmation)\n","import React from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { CustomError } from \"~Generic/lib/errors\"\nimport { openLink } from \"~Platform/links\"\nimport LegalConfirmation from \"./LegalConfirmation\"\n\n// Fetch a signed URL for redirecting to MoonPay with a walletaddress\nasync function fetchSignedMoonpayURL(account: Account) {\n  const baseURL = \"https://ncy9jaxgqh.execute-api.eu-central-1.amazonaws.com/moonpay\"\n  const url = `${baseURL}?walletAddress=${account.accountID}&testnet=${account.testnet}`\n\n  const response = await fetch(url)\n\n  if (!response.ok) {\n    const responseText = await response.text()\n    throw CustomError(\"HttpRequestError\", `HTTP fetch failed: ${responseText} \\nService: ${url}`, {\n      response: responseText,\n      service: url\n    })\n  }\n\n  const result = await response.json()\n  return result.url\n}\n\ninterface LumenDepositOptionsProps {\n  account: Account\n  onCloseDialog: () => void\n}\n\nfunction LumenDepositOptions(props: LumenDepositOptionsProps) {\n  const { account, onCloseDialog } = props\n  const [isLegalNoteOpen, setIsLegalNoteOpen] = React.useState(false)\n  const { t } = useTranslation()\n\n  const closeLegalNote = React.useCallback(() => setIsLegalNoteOpen(false), [])\n  const openLegalNote = React.useCallback(() => setIsLegalNoteOpen(true), [])\n\n  const navigateToMoonPay = React.useCallback(async () => {\n    try {\n      const signedMoonpayURL = await fetchSignedMoonpayURL(account)\n      openLink(signedMoonpayURL)\n      onCloseDialog()\n    } catch (error) {\n      trackError(error)\n    }\n  }, [account, onCloseDialog])\n\n  return (\n    <List style={{ margin: \"16px auto\", maxWidth: 600 }}>\n      <ListItem button onClick={openLegalNote}>\n        <ListItemText\n          primary={t(\"account.purchase-lumens.moonpay.text.primary\")}\n          secondary={t(\"account.purchase-lumens.moonpay.text.secondary\")}\n        />\n        <ListItemIcon style={{ minWidth: 24, marginLeft: 12 }}>\n          <OpenInNewIcon />\n        </ListItemIcon>\n      </ListItem>\n      <LegalConfirmation\n        message={\n          <Trans i18nKey=\"account.purchase-lumens.moonpay.legal-confirmation\">\n            You will be redirected to moonpay.io, a third-party service. The depositing process is operated by Moon Pay\n            Ltd, not by Sunce or Montelibero.\n            <br />\n            <br />\n            Please contact the moonpay.io support for inquiries related to your deposit.\n          </Trans>\n        }\n        onClose={closeLegalNote}\n        open={isLegalNoteOpen}\n        onConfirm={navigateToMoonPay}\n      />\n    </List>\n  )\n}\n\nexport default React.memo(LumenDepositOptions)\n"],"names":["LegalConfirmation"],"mappings":"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"}