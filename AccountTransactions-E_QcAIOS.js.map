{"version":3,"file":"AccountTransactions-E_QcAIOS.js","sources":["../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","../node_modules/@material-ui/icons/DoneAll.js","../node_modules/@material-ui/icons/CreditCard.js","../src/Generic/hooks/useFilteredTransactions.ts","../node_modules/@material-ui/icons/ThumbUp.js","../src/Account/components/FriendbotButton.tsx","../node_modules/@material-ui/icons/ArrowRightAlt.js","../node_modules/@material-ui/icons/BarChart.js","../src/Account/components/OfferList.tsx","../node_modules/human-time/human.js","../node_modules/react-human-time/index.js","../src/Account/components/TransactionList.tsx","../src/Account/components/SignatureRequestList.tsx","../src/Account/components/AccountTransactions.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAll');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\"\n}), 'CreditCard');\n\nexports.default = _default;","import React from \"react\"\nimport { DecodedTransactionResponse } from \"./_caches\"\nimport { useLiveRecentTransactions, useOlderTransactions } from \"./stellar-subscriptions\"\n\nfunction useFilteredTransactions(\n  accountId: string,\n  testnet: boolean,\n  filter: (txs: DecodedTransactionResponse[]) => DecodedTransactionResponse[]\n) {\n  const [refetchKey, setRefetchKey] = React.useState<number>(Date.now())\n  const limit = 15\n  const { transactions, olderTransactionsAvailable } = useLiveRecentTransactions(accountId, testnet, refetchKey)\n  const fetchMore = useOlderTransactions(accountId, testnet)\n  const txs = React.useMemo(() => filter(transactions), [transactions])\n\n  const fetchMoreTransactions = async (count: number = 0): Promise<void> => {\n    if (count >= limit) {\n      setRefetchKey(Date.now())\n      return\n    }\n    const unfiltered = await fetchMore()\n    const moreTxs = filter(unfiltered)\n    return fetchMoreTransactions(count + moreTxs.length)\n  }\n\n  React.useEffect(() => {\n    if (txs.length < limit) {\n      fetchMoreTransactions(txs.length)\n    }\n  }, [txs])\n\n  return {\n    olderTransactionsAvailable,\n    transactions: txs,\n    fetchMoreTransactions\n  }\n}\n\nexport default useFilteredTransactions\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z\"\n}), 'ThumbUp');\n\nexports.default = _default;","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { friendbotTopup } from \"~Generic/lib/stellar\"\nimport MainSelectionButton from \"~Generic/components/MainSelectionButton\"\n\ninterface Props {\n  className?: string\n  horizonURL: string\n  publicKey: string\n  style?: React.CSSProperties\n}\n\nfunction FriendbotButton(props: Props) {\n  const [isPending, setPending] = React.useState(false)\n  const { t } = useTranslation()\n\n  const topup = async () => {\n    try {\n      setPending(true)\n      await friendbotTopup(props.horizonURL, props.publicKey)\n\n      // Do not reset the pending state â€“ we want to see the spinner until we receive\n      // the update and hide the whole friendbot button\n    } catch (error) {\n      setPending(false)\n      trackError(error)\n    }\n  }\n\n  return (\n    // Extra padding especially for mobile\n    <MainSelectionButton\n      Icon={isPending ? CircularProgress : ThumbUpIcon}\n      className={props.className}\n      description={t(\"account.transactions.action.friendbot.description\")}\n      label={t(\"account.transactions.action.friendbot.label\")}\n      onClick={topup}\n      style={props.style}\n    />\n  )\n}\n\nexport default FriendbotButton\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z\"\n}), 'BarChart');\n\nexports.default = _default;","import BigNumber from \"big.js\"\nimport React from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { Operation, Horizon, Transaction } from \"@stellar/stellar-sdk\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRightAlt\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport BarChartIcon from \"@material-ui/icons/BarChart\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { breakpoints } from \"~App/theme\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { ActionButton } from \"~Generic/components/DialogActions\"\nimport { useHorizon } from \"~Generic/hooks/stellar\"\nimport { useLoadingState } from \"~Generic/hooks/util\"\nimport { useLiveAccountData, useLiveAccountOffers, useOlderOffers } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { offerAssetToAsset } from \"~Generic/lib/stellar\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport { List } from \"~Layout/components/List\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\nimport { SingleBalance } from \"./AccountBalances\"\n\nfunction createDismissalTransaction(\n  horizon: Horizon.Server,\n  account: Account,\n  accountData: AccountData,\n  offer: Horizon.ServerApi.OfferRecord\n): Promise<Transaction> {\n  const buying = offerAssetToAsset(offer.buying)\n  const selling = offerAssetToAsset(offer.selling)\n\n  return selling.isNative()\n    ? createTransaction(\n        [\n          Operation.manageBuyOffer({\n            offerId: offer.id,\n            buyAmount: \"0\",\n            buying,\n            price: offer.price,\n            selling,\n            withMuxing: true\n          })\n        ],\n        { accountData, horizon, walletAccount: account }\n      )\n    : createTransaction(\n        [\n          Operation.manageSellOffer({\n            offerId: offer.id,\n            amount: \"0\",\n            buying,\n            price: offer.price,\n            selling,\n            withMuxing: true\n          })\n        ],\n        { accountData, horizon, walletAccount: account }\n      )\n}\n\ninterface OfferListItemProps {\n  accountPublicKey: string\n  offer: ServerApi.OfferRecord\n  onCancel?: () => void\n  style?: React.CSSProperties\n}\n\nconst OfferListItem = React.memo(function OfferListItem(props: OfferListItemProps) {\n  const buying = offerAssetToAsset(props.offer.buying)\n  const selling = offerAssetToAsset(props.offer.selling)\n  const isSmallScreen = useIsMobile()\n  return (\n    <ListItem\n      button={Boolean(props.onCancel) as any}\n      onClick={props.onCancel}\n      style={{ minHeight: isSmallScreen ? 58 : 72, ...props.style }}\n    >\n      <ListItemIcon style={{ marginRight: isSmallScreen ? 0 : undefined }}>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText\n        primary={\n          // Horizon seems to always returns open offers in the format of us\n          // on the seller side, no matter if we submitted a buy or sell order,\n          // so we use the philosophy \"i never 'sell XLM', 'i buy the <other asset>'\"\n          props.offer.seller === props.accountPublicKey && !selling.isNative() ? (\n            <span style={{ fontWeight: \"bold\" }}>\n              <Trans i18nKey=\"account.transactions.offer-list.text.sell\">\n                Sell\n                <SingleBalance\n                  assetCode={selling.getCode()}\n                  balance={props.offer.amount}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n                for\n                <SingleBalance\n                  assetCode={buying.getCode()}\n                  balance={String(BigNumber(props.offer.amount).mul(props.offer.price))}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n              </Trans>\n            </span>\n          ) : (\n            <span style={{ fontWeight: \"bold\" }}>\n              <Trans i18nKey=\"account.transactions.offer-list.text.buy\">\n                Buy\n                <SingleBalance\n                  assetCode={buying.getCode()}\n                  balance={String(BigNumber(props.offer.amount).mul(props.offer.price))}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n                for\n                <SingleBalance\n                  assetCode={selling.getCode()}\n                  balance={props.offer.amount}\n                  inline\n                  style={{ marginLeft: \"0.35em\", marginRight: \"0.35em\" }}\n                />\n              </Trans>\n            </span>\n          )\n        }\n        primaryTypographyProps={{\n          style: { overflow: \"hidden\", textOverflow: \"ellipsis\" }\n        }}\n        style={{ paddingRight: isSmallScreen ? 0 : undefined }}\n      />\n      <ListItemText\n        primaryTypographyProps={{ align: \"right\" }}\n        style={{ display: isSmallScreen ? \"none\" : undefined, flexShrink: 0, paddingRight: 0 }}\n      >\n        <HorizontalLayout alignItems=\"center\" inline style={{ fontSize: \"1.4rem\" }}>\n          <b>{selling.getCode()}</b>\n          &nbsp;\n          <ArrowRightIcon style={{ fontSize: \"150%\" }} />\n          &nbsp;\n          <b>{buying.getCode()}</b>\n        </HorizontalLayout>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\ninterface LoadMoreOffersListItemProps {\n  onClick: () => void\n  pending?: boolean\n}\n\nconst LoadMoreOffersListItem = React.memo(function LoadMoreOffersListItem(props: LoadMoreOffersListItemProps) {\n  const { t } = useTranslation()\n  return (\n    <ListItem style={{ borderBottom: \"none\", height: 75 }}>\n      <ListItemText disableTypography style={{ textAlign: \"center\" }}>\n        <ActionButton\n          onClick={props.onClick}\n          loading={props.pending}\n          style={{ margin: \"0 auto\", paddingLeft: 16, paddingRight: 16 }}\n          variant=\"text\"\n        >\n          {t(\"account.transactions.transaction-list.load-more.label\")}\n        </ActionButton>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\ninterface Props {\n  account: Account\n  title: React.ReactNode\n}\n\nconst useStyles = makeStyles({\n  expansionPanel: {\n    background: \"transparent\",\n\n    \"&:before\": {\n      background: \"transparent\"\n    }\n  },\n  expansionPanelSummary: {\n    justifyContent: \"flex-start\",\n    minHeight: \"48px !important\",\n    padding: 0\n  },\n  expansionPanelSummaryContent: {\n    flexGrow: 0,\n    marginTop: \"0 !important\",\n    marginBottom: \"0 !important\"\n  },\n  expansionPanelDetails: {\n    display: \"block\",\n    padding: 0\n  },\n  listItem: {\n    padding: \"8px 24px\",\n\n    [breakpoints.down(600)]: {\n      paddingLeft: 24,\n      paddingRight: 24\n    }\n  }\n})\n\nfunction OfferList(props: Props & { sendTransaction: (tx: Transaction) => Promise<void> }) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const classes = useStyles()\n  const horizon = useHorizon(props.account.testnet)\n  const offerHistory = useLiveAccountOffers(props.account.accountID, props.account.testnet)\n  const [moreTxsLoadingState, handleMoreTxsFetch] = useLoadingState()\n  const fetchMoreOffers = useOlderOffers(props.account.accountID, props.account.testnet)\n\n  const [expanded, setExpanded] = React.useState(true)\n\n  const handleFetchMoreOffers = React.useCallback(() => handleMoreTxsFetch(fetchMoreOffers()), [\n    fetchMoreOffers,\n    handleMoreTxsFetch\n  ])\n\n  const onCancel = async (offer: Horizon.ServerApi.OfferRecord) => {\n    try {\n      const tx = await createDismissalTransaction(horizon, props.account, accountData, offer)\n      await props.sendTransaction(tx)\n    } catch (error) {\n      trackError(error)\n    }\n  }\n\n  return offerHistory.offers.length === 0 ? null : (\n    <List style={{ background: \"transparent\" }}>\n      <ExpansionPanel\n        className={classes.expansionPanel}\n        elevation={0}\n        expanded={expanded}\n        onChange={() => setExpanded(!expanded)}\n      >\n        <ExpansionPanelSummary\n          classes={{ root: classes.expansionPanelSummary, content: classes.expansionPanelSummaryContent }}\n          expandIcon={<ExpandMoreIcon />}\n        >\n          <ListSubheader\n            className={classes.listItem}\n            disableSticky\n            style={{ background: \"transparent\", paddingRight: 0 }}\n          >\n            {props.title}\n          </ListSubheader>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n          {offerHistory.offers.map(offer => (\n            <OfferListItem\n              key={offer.id}\n              accountPublicKey={props.account.accountID}\n              offer={offer}\n              onCancel={() => onCancel(offer)}\n            />\n          ))}\n          {offerHistory.olderOffersAvailable ? (\n            <LoadMoreOffersListItem pending={moreTxsLoadingState.type === \"pending\"} onClick={handleFetchMoreOffers} />\n          ) : null}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </List>\n  )\n}\n\nfunction OfferListContainer(props: Props) {\n  return (\n    <TransactionSender account={props.account}>\n      {({ sendTransaction }) => <OfferList {...props} sendTransaction={sendTransaction} />}\n    </TransactionSender>\n  )\n}\n\nexport default OfferListContainer\n","/**\n * Print a human readable timestamp to the terminal\n * given a number representing seconds\n *\n * Author: Dave Eddy <dave@daveeddy.com>\n * Date: 8/18/2014\n * License: MIT\n */\n\nvar util = require('util');\n\nmodule.exports = human;\n\nfunction human(seconds) {\n  if (seconds instanceof Date)\n    seconds = Math.round((Date.now() - seconds) / 1000);\n  var suffix = seconds < 0 ? 'from now' : 'ago';\n  seconds = Math.abs(seconds);\n\n  var times = [\n    seconds / 60 / 60 / 24 / 365, // years\n    seconds / 60 / 60 / 24 / 30,  // months\n    seconds / 60 / 60 / 24 / 7,   // weeks\n    seconds / 60 / 60 / 24,       // days\n    seconds / 60 / 60,            // hours\n    seconds / 60,                 // minutes\n    seconds                       // seconds\n  ];\n  var names = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second'];\n\n  for (var i = 0; i < names.length; i++) {\n    var time = Math.floor(times[i]);\n    if (time > 1)\n      return util.format('%d %ss %s', time, names[i], suffix);\n    else if (time === 1)\n      return util.format('%d %s %s', time, names[i], suffix);\n  }\n  return util.format('0 seconds %s', suffix);\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar human = require('human-time');\nvar HumanTime = /** @class */ (function (_super) {\n    __extends(HumanTime, _super);\n    function HumanTime(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = _this.getStateFromProps(props);\n        return _this;\n    }\n    HumanTime.prototype.getStateFromProps = function (props) {\n        return {\n            formattedTime: human(new Date(props.time))\n                .replace(/minute/, 'min')\n                .replace(/^.*second.*$/, 'now'),\n        };\n    };\n    HumanTime.prototype.componentDidMount = function () {\n        var _this = this;\n        this._timer = setInterval(function () { return _this.setState(_this.getStateFromProps(_this.props)); }, this.props.period || 30e3);\n    };\n    HumanTime.prototype.componentWillUnmount = function () {\n        clearInterval(this._timer);\n    };\n    HumanTime.prototype.render = function () {\n        return this.state.formattedTime;\n    };\n    return HumanTime;\n}(react_1.Component));\nexports.default = HumanTime;\n//# sourceMappingURL=index.js.map","import BigNumber from \"big.js\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Asset, Networks, Operation, Transaction } from \"@stellar/stellar-sdk\"\nimport HumanTime from \"react-human-time\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport CallMadeIcon from \"@material-ui/icons/CallMade\"\nimport CallReceivedIcon from \"@material-ui/icons/CallReceived\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext } from \"~App/contexts/settings\"\nimport * as routes from \"~App/routes\"\nimport { useIsMobile, useRouter } from \"~Generic/hooks/userinterface\"\nimport { DecodedTransactionResponse } from \"~Generic/hooks/_caches\"\nimport { getPaymentSummary, PaymentSummary } from \"~Generic/lib/paymentSummary\"\nimport { breakpoints } from \"~App/theme\"\nimport { ActionButton } from \"~Generic/components/DialogActions\"\nimport { InlineErrorBoundary } from \"~Generic/components/ErrorBoundaries\"\nimport { PublicKey } from \"~Generic/components/PublicKey\"\nimport { formatBalance } from \"~Generic/lib/balances\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport { stringifyAssetToReadableString } from \"~Generic/lib/stellar\"\nimport MemoMessage from \"~Transaction/components/MemoMessage\"\nimport TransactionReviewDialog from \"~TransactionReview/components/TransactionReviewDialog\"\nimport { useOperationTitle } from \"~TransactionReview/components/Operations\"\nimport { SingleBalance } from \"./AccountBalances\"\n\nconst dedupe = <T extends any>(array: T[]): T[] => Array.from(new Set(array))\nconst doNothing = () => undefined\n\nfunction sum(...amounts: (string | number | BigNumber)[]): BigNumber {\n  return amounts.reduce<BigNumber>((total, amount) => total.add(amount), BigNumber(0))\n}\n\nfunction EntryAnimation(props: { children: React.ReactNode; animate: boolean }) {\n  return props.animate ? (\n    <Collapse appear enter={false} in timeout={{ enter: 1000 }}>\n      {props.children}\n    </Collapse>\n  ) : (\n    <React.Fragment>{props.children}</React.Fragment>\n  )\n}\n\nfunction OfferDescription(props: {\n  amount: BigNumber\n  buying: Asset\n  offerId: string\n  price: BigNumber\n  selling: Asset\n  type: Operation.ManageBuyOffer[\"type\"] | Operation.ManageSellOffer[\"type\"]\n}) {\n  const { amount, buying, offerId, price, selling } = props\n  const { t } = useTranslation()\n  let prefix: string\n\n  if (offerId === \"0\") {\n    prefix = `${t(\"account.transactions.transaction-list.offer-description.prefix.default\")}: `\n  } else if (amount.eq(0)) {\n    prefix = `${t(\"account.transactions.transaction-list.offer-description.prefix.cancel\")}: `\n  } else {\n    prefix = `${t(\"account.transactions.transaction-list.offer-description.prefix.update\")}: `\n  }\n\n  return (\n    <>\n      {prefix}\n      {props.type === \"manageBuyOffer\"\n        ? t(\n            \"account.transactions.transaction-list.offer-description.buy\",\n            `Buy ${amount.eq(0) ? \"\" : formatBalance(amount.toString())} ${buying.code} for ${\n              amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString())\n            } ${selling.code}`,\n            {\n              buyingAmount: amount.eq(0) ? \"\" : formatBalance(amount.toString()),\n              buyingCode: buying.code,\n              sellingAmount: amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString()),\n              sellingCode: selling.code\n            }\n          )\n        : t(\n            \"account.transactions.transaction-list.offer-description.sell\",\n            `Sell ${amount.eq(0) ? \"\" : formatBalance(amount.toString())} ${selling.code} for ${\n              amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString())\n            } ${buying.code}`,\n            {\n              buyingAmount: amount.eq(0) ? \"\" : formatBalance(amount.mul(price).toString()),\n              buyingCode: buying.code,\n              sellingAmount: amount.eq(0) ? \"\" : formatBalance(amount.toString()),\n              sellingCode: selling.code\n            }\n          )}\n    </>\n  )\n}\n\nfunction RemotePublicKeys(props: { publicKeys: string[]; short?: boolean; testnet: boolean }) {\n  const { t } = useTranslation()\n  if (props.publicKeys.length === 0) {\n    return <>-</>\n  } else if (props.publicKeys.length === 1) {\n    return (\n      <PublicKey publicKey={props.publicKeys[0]} testnet={props.testnet} variant={props.short ? \"short\" : \"full\"} />\n    )\n  } else {\n    return (\n      <>\n        <PublicKey publicKey={props.publicKeys[0]} testnet={props.testnet} variant=\"short\" />{\" \"}\n        <i>\n          + {props.publicKeys.length - 1} {t(\"account.transactions.transaction-list.item.remote-public-keys.more\")}\n        </i>\n      </>\n    )\n  }\n}\n\nconst Time = React.memo(function Time(props: { time: string }) {\n  const date = new Date(props.time)\n  return (\n    <span style={{ whiteSpace: \"nowrap\" }}>\n      <HumanTime time={date.getTime()} />\n    </span>\n  )\n})\n\nfunction TransactionIcon(props: { paymentSummary: PaymentSummary; transaction: Transaction }) {\n  if (\n    props.transaction.operations.length === 1 &&\n    [\"manageBuyOffer\", \"manageSellOffer\"].includes(props.transaction.operations[0].type)\n  ) {\n    return <SwapHorizIcon />\n  } else if (props.transaction.operations.length === 1 && props.transaction.operations[0].type === \"changeTrust\") {\n    return BigNumber(props.transaction.operations[0].limit).eq(0) ? <RemoveIcon /> : <AddIcon />\n  } else if (props.transaction.operations.every(operation => operation.type === \"accountMerge\")) {\n    return <CallReceivedIcon />\n  } else if (props.paymentSummary.length === 0) {\n    return <SettingsIcon />\n  } else if (props.paymentSummary.every(summaryItem => summaryItem.balanceChange.gt(0))) {\n    return <CallReceivedIcon />\n  } else if (props.paymentSummary.every(summaryItem => summaryItem.balanceChange.lt(0))) {\n    return <CallMadeIcon />\n  } else {\n    return <SwapHorizIcon />\n  }\n}\n\ninterface TitleTextProps {\n  accountPublicKey: string\n  alwaysShowSource?: boolean\n  createdAt: string\n  paymentSummary: PaymentSummary\n  style?: React.CSSProperties\n  showMemo: boolean\n  transaction: Transaction\n}\n\n// TODO: Re-use code of transaction summary operation heading\n// tslint:disable-next-line no-shadowed-variable\nconst TransactionItemText = React.memo(function TransactionItemText(props: TitleTextProps) {\n  const getOperationTitle = useOperationTitle()\n  const { t } = useTranslation()\n  const remotePublicKeys = props.paymentSummary.reduce(\n    (pubKeys, summaryItem) => pubKeys.concat(summaryItem.publicKeys),\n    [] as string[]\n  )\n\n  const testnet = props.transaction.networkPassphrase === Networks.TESTNET\n\n  const secondary = React.useMemo(\n    () => (\n      <span style={{ display: \"block\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\n        <Time time={props.createdAt} />\n        {props.showMemo && props.transaction.memo.type !== \"none\" ? (\n          <>\n            &nbsp;&nbsp;|&nbsp;&nbsp;\n            <MemoMessage\n              prefix={<>{t(\"account.transactions.transaction-list.item.memo\")}:&nbsp;</>}\n              memo={props.transaction.memo}\n            />\n          </>\n        ) : null}\n      </span>\n    ),\n    [props.createdAt, props.showMemo, props.transaction, t]\n  )\n\n  if (remotePublicKeys.length > 0 && props.paymentSummary.every(summaryItem => summaryItem.balanceChange.gt(0))) {\n    return (\n      <ListItemText\n        primary={\n          <span>\n            {t(\"account.transactions.transaction-list.item.from\")}&nbsp;\n            <RemotePublicKeys publicKeys={remotePublicKeys} short testnet={testnet} />\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  } else if (\n    remotePublicKeys.length > 0 &&\n    props.paymentSummary.every(summaryItem => summaryItem.balanceChange.lt(0))\n  ) {\n    return (\n      <ListItemText\n        primary={\n          <span>\n            {t(\"account.transactions.transaction-list.item.to\")}&nbsp;\n            <RemotePublicKeys publicKeys={remotePublicKeys} short testnet={testnet} />\n            {props.alwaysShowSource ? (\n              <span>\n                &nbsp;{t(\"account.transactions.transaction-list.item.from\")}&nbsp;\n                <PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />{\" \"}\n              </span>\n            ) : null}\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  } else if (props.transaction.operations.length === 1 && props.transaction.operations[0].type === \"changeTrust\") {\n    const operation = props.transaction.operations[0] as Operation.ChangeTrust\n\n    return BigNumber(operation.limit).eq(0) ? (\n      <ListItemText\n        primary={\n          <span>\n            {t(\n              \"account.transactions.transaction-list.item.trust.remove-trust\",\n              `Remove trust in asset ${stringifyAssetToReadableString(operation.line)}`,\n              { asset: stringifyAssetToReadableString(operation.line) }\n            )}\n            {props.alwaysShowSource ? (\n              <>\n                {\" \"}\n                (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n              </>\n            ) : null}\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    ) : (\n      <ListItemText\n        primary={\n          <span>\n            {t(\n              \"account.transactions.transaction-list.item.trust.add-trust\",\n              `Trust asset ${stringifyAssetToReadableString(operation.line)}`,\n              {\n                asset: stringifyAssetToReadableString(operation.line)\n              }\n            )}\n            {props.alwaysShowSource ? (\n              <>\n                {\" \"}\n                (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n              </>\n            ) : null}\n          </span>\n        }\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  } else if (\n    props.transaction.operations.length === 1 &&\n    [\"manageBuyOffer\", \"manageSellOffer\"].includes(props.transaction.operations[0].type)\n  ) {\n    const operation = props.transaction.operations[0] as Operation.ManageBuyOffer | Operation.ManageSellOffer\n    const amount = BigNumber(operation.type === \"manageBuyOffer\" ? operation.buyAmount : operation.amount)\n\n    if (String(operation.offerId) === \"0\") {\n      // Create offer\n      return (\n        <ListItemText\n          primary={\n            <span>\n              <OfferDescription {...operation} amount={amount} price={BigNumber(operation.price)} />\n              {props.alwaysShowSource ? (\n                <>\n                  {\" \"}\n                  (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n                </>\n              ) : null}\n            </span>\n          }\n          primaryTypographyProps={{ style: props.style }}\n          secondary={secondary}\n          style={props.style}\n        />\n      )\n    } else if (amount.eq(0)) {\n      // Delete offer\n      return (\n        <ListItemText\n          primary={\n            <span>\n              <OfferDescription {...operation} amount={BigNumber(0)} price={BigNumber(operation.price)} />\n              {props.alwaysShowSource ? (\n                <>\n                  {\" \"}\n                  (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n                </>\n              ) : null}\n            </span>\n          }\n          primaryTypographyProps={{ style: props.style }}\n          secondary={secondary}\n          style={props.style}\n        />\n      )\n    } else {\n      // Update offer\n      return (\n        <ListItemText\n          primary={\n            <span>\n              <OfferDescription {...operation} amount={amount} price={BigNumber(operation.price)} />\n              {props.alwaysShowSource ? (\n                <>\n                  {\" \"}\n                  (<PublicKey publicKey={props.accountPublicKey} testnet={testnet} variant=\"short\" />)\n                </>\n              ) : null}\n            </span>\n          }\n          primaryTypographyProps={{ style: props.style }}\n          secondary={secondary}\n          style={props.style}\n        />\n      )\n    }\n  } else {\n    const formattedOperations = props.transaction.operations.map(getOperationTitle)\n    return (\n      <ListItemText\n        primary={<span>{dedupe(formattedOperations).join(\", \")}</span>}\n        primaryTypographyProps={{ style: props.style }}\n        secondary={secondary}\n        style={props.style}\n      />\n    )\n  }\n})\n\nfunction TransactionListItemBalance(props: {\n  accountPublicKey: string\n  paymentSummary: PaymentSummary\n  style?: React.CSSProperties\n  transaction: Transaction\n}) {\n  const { paymentSummary } = props\n  const isSmallScreen = useIsMobile()\n\n  const creationOps = props.transaction.operations.filter(\n    (op): op is Operation.CreateAccount => op.type === \"createAccount\"\n  )\n  const paymentOps = props.transaction.operations.filter((op): op is Operation.Payment => op.type === \"payment\")\n\n  // Handle special edge case: Sending money from an account to itself\n  const balanceChange = paymentSummary.every(payment =>\n    payment.publicKeys.every(pubkey => pubkey === props.accountPublicKey)\n  )\n    ? sum(...creationOps.map(op => op.startingBalance), ...paymentOps.map(op => op.amount))\n    : paymentSummary[0].balanceChange\n\n  return (\n    <ListItemText primaryTypographyProps={{ align: \"right\" }} style={{ flexShrink: 0, ...props.style }}>\n      {paymentSummary.length === 0 ? null : (\n        <SingleBalance\n          assetCode={paymentSummary[0].asset.getCode()}\n          balance={balanceChange.toString()}\n          style={isSmallScreen ? { fontSize: \"1rem\" } : { fontSize: \"1.4rem\" }}\n        />\n      )}\n    </ListItemText>\n  )\n}\n\ninterface TransactionListItemProps {\n  accountPublicKey: string\n  alwaysShowSource?: boolean\n  className?: string\n  createdAt: string\n  icon?: React.ReactElement<any>\n  onOpenTransaction?: (transactionHash: string) => void\n  style?: React.CSSProperties\n  transaction: Transaction\n}\n\nexport const TransactionListItem = React.memo(function TransactionListItem(props: TransactionListItemProps) {\n  const { hideMemos } = React.useContext(SettingsContext)\n  const isSmallScreen = useIsMobile()\n\n  const { transaction, onOpenTransaction } = props\n\n  const paymentSummary = getPaymentSummary(props.accountPublicKey, transaction)\n  const onOpen = onOpenTransaction ? () => onOpenTransaction(transaction.hash().toString(\"hex\")) : undefined\n\n  return (\n    <ListItem button={Boolean(onOpen) as any} className={props.className || \"\"} onClick={onOpen} style={props.style}>\n      <ListItemIcon style={{ marginRight: isSmallScreen ? 0 : undefined }}>\n        {props.icon || <TransactionIcon paymentSummary={paymentSummary} transaction={transaction} />}\n      </ListItemIcon>\n      <TransactionItemText\n        accountPublicKey={props.accountPublicKey}\n        alwaysShowSource={props.alwaysShowSource}\n        createdAt={props.createdAt}\n        paymentSummary={paymentSummary}\n        showMemo={!hideMemos}\n        style={{\n          fontSize: isSmallScreen ? \"0.8rem\" : undefined,\n          fontWeight: \"bold\",\n          overflow: \"hidden\",\n          paddingRight: 0,\n          textOverflow: \"ellipsis\"\n        }}\n        transaction={transaction}\n      />\n      <TransactionListItemBalance\n        accountPublicKey={props.accountPublicKey}\n        paymentSummary={paymentSummary}\n        style={{ paddingRight: 0 }}\n        transaction={transaction}\n      />\n    </ListItem>\n  )\n})\n\ninterface LoadMoreTransactionsListItemProps {\n  onClick: () => void\n  pending?: boolean\n}\n\nconst LoadMoreTransactionsListItem = React.memo(function LoadMoreTransactionsListItem(\n  props: LoadMoreTransactionsListItemProps\n) {\n  const { t } = useTranslation()\n  return (\n    <ListItem style={{ borderBottom: \"none\", height: 75 }}>\n      <ListItemText disableTypography style={{ textAlign: \"center\" }}>\n        <ActionButton\n          onClick={props.onClick}\n          loading={props.pending}\n          style={{ margin: \"0 auto\", paddingLeft: 16, paddingRight: 16 }}\n          variant=\"text\"\n        >\n          {t(\"account.transactions.transaction-list.load-more.label\")}\n        </ActionButton>\n      </ListItemText>\n    </ListItem>\n  )\n})\n\nconst useTransactionListStyles = makeStyles({\n  listItem: {\n    padding: \"8px 24px\",\n\n    [breakpoints.down(600)]: {\n      paddingLeft: 24,\n      paddingRight: 24\n    }\n  }\n})\n\ninterface TransactionListProps {\n  account: Account\n  background?: React.CSSProperties[\"background\"]\n  loadingMoreTransactions?: boolean\n  olderTransactionsAvailable?: boolean\n  onFetchMoreTransactions: () => void\n  title: React.ReactNode\n  transactions: DecodedTransactionResponse[]\n}\n\nfunction TransactionList(props: TransactionListProps) {\n  const classes = useTransactionListStyles()\n  const isSmallScreen = useIsMobile()\n  const router = useRouter()\n\n  const openedTxHash = matchesRoute(router.location.pathname, routes.showTransaction(\"*\", \"*\"))\n    ? (router.match.params as { id: string; subaction: string }).subaction\n    : null\n\n  const openedTransaction = React.useMemo(() => {\n    if (!openedTxHash) {\n      return null\n    }\n\n    const txResponse = props.transactions.find(recentTx => recentTx.hash === openedTxHash)\n\n    // TODO: use decoded transaction from cache once we have it\n    const tx = txResponse ? txResponse.decodedTx : null\n\n    // tslint:disable-next-line prefer-object-spread\n    return tx && txResponse ? Object.assign(tx, { created_at: txResponse.created_at }) : tx\n  }, [openedTxHash, props.transactions])\n\n  const openTransaction = React.useCallback(\n    (transactionHash: string) => {\n      router.history.push(routes.showTransaction(props.account.id, transactionHash))\n    },\n    [props.account.id, router.history]\n  )\n\n  const closeTransaction = React.useCallback(() => {\n    router.history.push(routes.account(props.account.id))\n\n    // A little hack to prevent :focus style being set again on list item after closing the dialog\n    setTimeout(() => {\n      if (document.activeElement) {\n        ;(document.activeElement as HTMLElement).blur()\n      }\n    }, 0)\n  }, [props.account.id, router.history])\n\n  const transactionListItems = React.useMemo(\n    () => (\n      <>\n        {props.transactions.map(transaction => (\n          <EntryAnimation\n            key={transaction.hash}\n            // Animate only if it's a new tx, not if we just haven't rendered it before\n            animate={Date.now() - new Date(transaction.created_at).getTime() < 10_000}\n          >\n            <InlineErrorBoundary height={72}>\n              <TransactionListItem\n                key={transaction.hash}\n                accountPublicKey={props.account.publicKey}\n                className={classes.listItem}\n                createdAt={transaction.created_at}\n                onOpenTransaction={openTransaction}\n                transaction={transaction.decodedTx}\n              />\n            </InlineErrorBoundary>\n          </EntryAnimation>\n        ))}\n      </>\n    ),\n    [props.transactions, props.account.publicKey, classes.listItem, openTransaction]\n  )\n\n  if (props.transactions.length === 0 && !props.olderTransactionsAvailable) {\n    return null\n  }\n\n  return (\n    <List disablePadding={isSmallScreen} style={{ background: props.background }}>\n      <ListSubheader className={classes.listItem} disableSticky style={{ background: props.background }}>\n        {props.title}\n      </ListSubheader>\n      {transactionListItems}\n      {props.olderTransactionsAvailable ? (\n        <LoadMoreTransactionsListItem pending={props.loadingMoreTransactions} onClick={props.onFetchMoreTransactions} />\n      ) : null}\n      <TransactionReviewDialog\n        open={openedTransaction !== null}\n        account={props.account}\n        disabled={true}\n        showSource\n        showSubmissionProgress={false}\n        transaction={openedTransaction}\n        onClose={closeTransaction}\n        onSubmitTransaction={doNothing}\n      />\n    </List>\n  )\n}\n\nexport default React.memo(TransactionList)\n","import ListSubheader from \"@material-ui/core/ListSubheader\"\nimport { TransactionStellarUri } from \"@suncewallet/stellar-uri\"\nimport React from \"react\"\nimport { Transaction } from \"@stellar/stellar-sdk\"\nimport { useRouter } from \"~Generic/hooks/userinterface\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport * as routes from \"~App/routes\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { InlineErrorBoundary } from \"~Generic/components/ErrorBoundaries\"\nimport { MultisigTransactionResponse } from \"~Generic/lib/multisig-service\"\nimport { List } from \"~Layout/components/List\"\nimport { TransactionListItem } from \"./TransactionList\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\n\ninterface SignatureRequestListItemProps {\n  icon?: React.ReactElement<any>\n  onOpenTransaction?: (tx: Transaction, signatureRequest: MultisigTransactionResponse) => void\n  signatureRequest: MultisigTransactionResponse\n  style?: React.CSSProperties\n}\n\nfunction SignatureRequestListItem(props: SignatureRequestListItemProps) {\n  const { onOpenTransaction, signatureRequest } = props\n\n  const tx = React.useMemo(() => new TransactionStellarUri(signatureRequest.req).getTransaction(), [\n    signatureRequest.req\n  ])\n\n  const openTransaction = React.useCallback(\n    onOpenTransaction ? () => onOpenTransaction(tx, signatureRequest) : () => undefined,\n    [onOpenTransaction, signatureRequest, tx]\n  )\n\n  return (\n    <TransactionListItem\n      alwaysShowSource\n      accountPublicKey={tx.source}\n      createdAt={signatureRequest.created_at}\n      icon={props.icon}\n      onOpenTransaction={openTransaction}\n      style={props.style}\n      transaction={tx}\n    />\n  )\n}\n\ninterface SignatureRequestListProps {\n  account: Account\n  icon?: React.ReactElement<any>\n  sendTransaction: (transaction: Transaction, signatureRequest: MultisigTransactionResponse) => void\n  signatureRequests: MultisigTransactionResponse[]\n  title: React.ReactNode\n}\n\n// tslint:disable-next-line no-shadowed-variable\nexport const SignatureRequestList = React.memo(function SignatureRequestList(props: SignatureRequestListProps) {\n  const { sendTransaction } = props\n  const router = useRouter()\n\n  React.useEffect(() => {\n    const handleNavigation = (pathname: string) => {\n      if (matchesRoute(pathname, routes.showTransaction(\"*\", \"*\"))) {\n        const [, , , hash] = pathname.replace(/^\\//, \"\").split(\"/\")\n        const signatureRequest = props.signatureRequests.find(sr => sr.hash === hash)\n\n        if (signatureRequest) {\n          const stellarUri = new TransactionStellarUri(signatureRequest.req)\n          sendTransaction(stellarUri.getTransaction(), signatureRequest)\n        }\n      }\n    }\n\n    handleNavigation(router.location.pathname)\n\n    const unsubscribe = router.history.listen(location => {\n      handleNavigation(location.pathname)\n    })\n    return unsubscribe\n  }, [router.history, router.location.pathname, sendTransaction, props.signatureRequests])\n\n  const openSignatureRequest = (tx: Transaction, signatureRequest: MultisigTransactionResponse) => {\n    router.history.push(routes.showTransaction(props.account.id, signatureRequest.hash))\n  }\n\n  if (props.signatureRequests.length === 0) {\n    return null\n  }\n  return (\n    <>\n      <List style={{ background: \"transparent\" }}>\n        <ListSubheader disableSticky style={{ background: \"transparent\" }}>\n          {props.title}\n        </ListSubheader>\n        {props.signatureRequests.map(signatureRequest => (\n          <InlineErrorBoundary height={72} key={signatureRequest.hash}>\n            <SignatureRequestListItem\n              icon={props.icon}\n              onOpenTransaction={openSignatureRequest}\n              signatureRequest={signatureRequest}\n              style={{\n                minHeight: 72\n              }}\n            />\n          </InlineErrorBoundary>\n        ))}\n      </List>\n    </>\n  )\n})\n\nexport const InteractiveSignatureRequestList = React.memo(\n  (props: {\n    account: Account\n    icon?: React.ReactElement<any>\n    signatureRequests: MultisigTransactionResponse[]\n    title: React.ReactNode\n  }) => {\n    const router = useRouter()\n    const forceClose = !matchesRoute(router.location.pathname, routes.showTransaction(\"*\", \"*\"))\n\n    const onCloseDialog = React.useCallback(() => {\n      router.history.push(routes.routeUp(router.location.pathname))\n    }, [router])\n\n    return (\n      <TransactionSender account={props.account} forceClose={forceClose} onCloseTransactionDialog={onCloseDialog}>\n        {({ sendTransaction }) => (\n          <SignatureRequestList\n            account={props.account}\n            icon={props.icon}\n            sendTransaction={sendTransaction}\n            signatureRequests={props.signatureRequests}\n            title={props.title}\n          />\n        )}\n      </TransactionSender>\n    )\n  }\n)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\"\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\"\nimport UpdateIcon from \"@material-ui/icons/Update\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext } from \"~App/contexts/settings\"\nimport { SignatureDelegationContext } from \"~App/contexts/signatureDelegation\"\nimport { useHorizonURLs } from \"~Generic/hooks/stellar\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, useRouter } from \"~Generic/hooks/userinterface\"\nimport { useLoadingState } from \"~Generic/hooks/util\"\nimport { DecodedTransactionResponse } from \"~Generic/hooks/_caches\"\nimport useFilteredTransactions from \"~Generic/hooks/useFilteredTransactions\"\nimport * as routes from \"~App/routes\"\nimport MainSelectionButton from \"~Generic/components/MainSelectionButton\"\nimport { VerticalLayout } from \"~Layout/components/Box\"\nimport FriendbotButton from \"./FriendbotButton\"\nimport OfferList from \"./OfferList\"\nimport { InteractiveSignatureRequestList } from \"./SignatureRequestList\"\nimport TransactionList from \"./TransactionList\"\nimport { isDustTransaction } from \"~Generic/lib/transaction\"\n\nconst excludeClaimableFilter = (account: Account, tx: DecodedTransactionResponse) =>\n  !tx.decodedTx.operations.every(\n    o => o.type === \"createClaimableBalance\" || (o.type === \"claimClaimableBalance\" && o.source !== account.publicKey)\n  )\n\nconst excludeDustFilter = (account: Account, tx: DecodedTransactionResponse) =>\n  !isDustTransaction(tx.decodedTx, account)\n\nfunction PendingMultisigTransactions(props: { account: Account }) {\n  const { pendingSignatureRequests } = React.useContext(SignatureDelegationContext)\n  const { t } = useTranslation()\n\n  const cosignIcon = React.useMemo(() => <DoneAllIcon />, [])\n  const waitingIcon = React.useMemo(() => <UpdateIcon style={{ opacity: 0.5 }} />, [])\n\n  const pendingRequestsToCosign = React.useMemo(() => {\n    return pendingSignatureRequests.filter(\n      request =>\n        request.status !== \"submitted\" &&\n        request.signers.some(signer => signer === props.account.publicKey) &&\n        request.signed_by.indexOf(props.account.publicKey) === -1\n    )\n  }, [props.account, pendingSignatureRequests])\n\n  const pendingRequestsWaitingForOthers = React.useMemo(() => {\n    return pendingSignatureRequests.filter(\n      request =>\n        request.status !== \"submitted\" &&\n        request.signers.some(signer => signer === props.account.publicKey) &&\n        request.signed_by.indexOf(props.account.publicKey) > -1\n    )\n  }, [props.account, pendingSignatureRequests])\n\n  return (\n    <>\n      <InteractiveSignatureRequestList\n        account={props.account}\n        icon={cosignIcon}\n        signatureRequests={pendingRequestsToCosign}\n        title={t(\"account.transactions.signature-request-list.title.requests-to-cosign\")}\n      />\n      <InteractiveSignatureRequestList\n        account={props.account}\n        icon={waitingIcon}\n        signatureRequests={pendingRequestsWaitingForOthers}\n        title={t(\"account.transactions.signature-request-list.title.requests-waiting-for-others\")}\n      />\n    </>\n  )\n}\n\nfunction AccountTransactions(props: { account: Account }) {\n  const { account } = props\n  const { showDust, showClaimableBalanceTxs } = React.useContext(SettingsContext)\n  const { t } = useTranslation()\n  const accountData = useLiveAccountData(account.accountID, account.testnet)\n  const horizonURLs = useHorizonURLs(account.testnet)\n  const isSmallScreen = useIsMobile()\n  const [moreTxsLoadingState, handleMoreTxsFetch] = useLoadingState()\n\n  const txsFilter = React.useCallback(\n    (txs: DecodedTransactionResponse[]) =>\n      txs.filter(tx => {\n        return (\n          (showClaimableBalanceTxs || excludeClaimableFilter(account, tx)) &&\n          (showDust || excludeDustFilter(account, tx))\n        )\n      }),\n    []\n  )\n\n  const { transactions, olderTransactionsAvailable, fetchMoreTransactions } = useFilteredTransactions(\n    account.accountID,\n    account.testnet,\n    txsFilter\n  )\n\n  const router = useRouter()\n  const settings = React.useContext(SettingsContext)\n\n  const handleFetchMoreTransactions = React.useCallback(() => handleMoreTxsFetch(fetchMoreTransactions()), [\n    fetchMoreTransactions,\n    handleMoreTxsFetch\n  ])\n\n  const navigateToDeposit = React.useCallback(() => router.history.push(routes.depositAsset(account.id)), [\n    account,\n    router\n  ])\n\n  return (\n    <>\n      {accountData.balances.length > 0 ? (\n        <>\n          {settings.multiSignature ? <PendingMultisigTransactions account={account} /> : null}\n          <OfferList account={account} title={t(\"account.transactions.offer-list.title\")} />\n          <TransactionList\n            account={account}\n            background=\"transparent\"\n            loadingMoreTransactions={moreTxsLoadingState.type === \"pending\"}\n            olderTransactionsAvailable={olderTransactionsAvailable}\n            onFetchMoreTransactions={handleFetchMoreTransactions}\n            title={t(\"account.transactions.transaction-list.title\")}\n            transactions={transactions}\n          />\n        </>\n      ) : (\n        <>\n          <VerticalLayout\n            alignItems=\"stretch\"\n            margin=\"0 auto\"\n            style={{ padding: isSmallScreen ? \"16px 28px\" : \"32px 28px\", width: \"fit-content\" }}\n          >\n            {account.testnet ? (\n              <FriendbotButton\n                horizonURL={horizonURLs[0]}\n                publicKey={account.publicKey}\n                style={{ marginBottom: isSmallScreen ? 16 : 32 }}\n              />\n            ) : null}\n            <MainSelectionButton\n              Icon={CreditCardIcon}\n              description={t(\"account.transactions.action.navigate-to-deposit.description\")}\n              label={t(\"account.transactions.action.navigate-to-deposit.label\")}\n              onClick={navigateToDeposit}\n            />\n          </VerticalLayout>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default React.memo(AccountTransactions)\n"],"names":["styles","theme","ListSubheader","React","props","ref","classes","className","_props$color","color","_props$component","Component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","other","_objectWithoutProperties","_extends","clsx","capitalize","ListSubheader$1","withStyles","_interopRequireDefault","require$$0","DoneAll","_react","require$$1","_createSvgIcon","_default","CreditCard","useFilteredTransactions","accountId","testnet","filter","refetchKey","setRefetchKey","limit","transactions","olderTransactionsAvailable","useLiveRecentTransactions","fetchMore","useOlderTransactions","txs","fetchMoreTransactions","count","unfiltered","moreTxs","ThumbUp","FriendbotButton","isPending","setPending","t","useTranslation","topup","friendbotTopup","error","trackError","MainSelectionButton","CircularProgress","ThumbUpIcon","ArrowRightAlt","BarChart","createDismissalTransaction","horizon","account","accountData","offer","buying","offerAssetToAsset","selling","createTransaction","Operation","OfferListItem","isSmallScreen","useIsMobile","ListItem","ListItemIcon","BarChartIcon","ListItemText","Trans","SingleBalance","BigNumber","HorizontalLayout","ArrowRightIcon","LoadMoreOffersListItem","ActionButton","useStyles","makeStyles","breakpoints","OfferList","useLiveAccountData","useHorizon","offerHistory","useLiveAccountOffers","moreTxsLoadingState","handleMoreTxsFetch","useLoadingState","fetchMoreOffers","useOlderOffers","expanded","setExpanded","handleFetchMoreOffers","onCancel","tx","List","ExpansionPanel","ExpansionPanelSummary","ExpandMoreIcon","ExpansionPanelDetails","OfferListContainer","TransactionSender","sendTransaction","util","human_1","human","seconds","suffix","times","names","i","time","__extends","this","extendStatics","d","b","p","__","reactHumanTime","react_1","HumanTime","_super","_this","dedupe","array","doNothing","sum","amounts","total","amount","EntryAnimation","Collapse","OfferDescription","offerId","price","prefix","formatBalance","RemotePublicKeys","PublicKey","Time","date","TransactionIcon","SwapHorizIcon","RemoveIcon","AddIcon","operation","CallReceivedIcon","SettingsIcon","summaryItem","CallMadeIcon","TransactionItemText","getOperationTitle","useOperationTitle","remotePublicKeys","pubKeys","Networks","secondary","MemoMessage","stringifyAssetToReadableString","formattedOperations","TransactionListItemBalance","paymentSummary","creationOps","op","paymentOps","balanceChange","payment","pubkey","TransactionListItem","hideMemos","SettingsContext","transaction","onOpenTransaction","getPaymentSummary","onOpen","LoadMoreTransactionsListItem","useTransactionListStyles","TransactionList","router","useRouter","openedTxHash","matchesRoute","routes.showTransaction","openedTransaction","txResponse","recentTx","openTransaction","transactionHash","closeTransaction","routes.account","transactionListItems","InlineErrorBoundary","TransactionReviewDialog","TransactionList$1","SignatureRequestListItem","signatureRequest","TransactionStellarUri","SignatureRequestList","handleNavigation","pathname","hash","sr","stellarUri","location","openSignatureRequest","InteractiveSignatureRequestList","forceClose","onCloseDialog","routes.routeUp","excludeClaimableFilter","o","excludeDustFilter","isDustTransaction","PendingMultisigTransactions","pendingSignatureRequests","SignatureDelegationContext","cosignIcon","DoneAllIcon","waitingIcon","UpdateIcon","pendingRequestsToCosign","request","signer","pendingRequestsWaitingForOthers","AccountTransactions","showDust","showClaimableBalanceTxs","horizonURLs","useHorizonURLs","txsFilter","settings","handleFetchMoreTransactions","navigateToDeposit","routes.depositAsset","VerticalLayout","CreditCardIcon","AccountTransactions$1"],"mappings":"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","x_google_ignoreList":[0,1,2,4,6,7,9,10]}