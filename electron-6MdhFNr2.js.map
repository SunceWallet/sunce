{"version":3,"file":"electron-6MdhFNr2.js","sources":["../src/Platform/ipc/electron.ts"],"sourcesContent":["import pick from \"lodash.pick\"\nimport { CustomError } from \"../../Generic/lib/errors\"\n\nlet nextCallID = 1\n\nexport function call<Message extends keyof IPC.MessageType>(\n  messageType: Message,\n  ...args: IPC.MessageArgs<Message>\n): Promise<IPC.MessageReturnType<Message>> {\n  const callID = nextCallID++\n\n  window.electron!.sendIPCMessage(messageType, {\n    args,\n    callID\n  })\n\n  return new Promise<IPC.MessageReturnType<Message>>((resolve, reject) => {\n    const unsubscribe = window.electron!.subscribeToIPCMessages(messageType, (event: Event, message: any) => {\n      // TODO look into this again\n      if (!message || typeof message !== \"object\" || message.callID !== callID) {\n        return\n      }\n\n      unsubscribe()\n\n      if (\"error\" in message && message.error) {\n        const error = message.error\n        const extra = error.__extraProps ? pick(error, error.__extraProps || []) : undefined\n        reject(CustomError(error.name, error.message, extra))\n      } else {\n        resolve((message as ElectronIPCCallResultMessage).result)\n      }\n    })\n  })\n}\n\ntype UnsubscribeFn = () => void\n\nexport function subscribeToMessages<Message extends keyof IPC.MessageType>(\n  messageType: Message,\n  callback: (message: any) => void\n): UnsubscribeFn {\n  return window.electron!.subscribeToIPCMessages(messageType, (event: Event, message: any) => callback(message))\n}\n"],"names":[],"mappings":";AAGA,IAAI,aAAa;AAED,SAAA,KACd,gBACG,MACsC;AACzC,QAAM,SAAS;AAER,SAAA,SAAU,eAAe,aAAa;AAAA,IAC3C;AAAA,IACA;AAAA,EAAA,CACD;AAED,SAAO,IAAI,QAAwC,CAAC,SAAS,WAAW;AACtE,UAAM,cAAc,OAAO,SAAU,uBAAuB,aAAa,CAAC,OAAc,YAAiB;AAEvG,UAAI,CAAC,WAAW,OAAO,YAAY,YAAY,QAAQ,WAAW,QAAQ;AACxE;AAAA,MAAA;AAGU,kBAAA;AAER,UAAA,WAAW,WAAW,QAAQ,OAAO;AACvC,cAAM,QAAQ,QAAQ;AAChB,cAAA,QAAQ,MAAM,eAAe,KAAK,OAAO,MAAM,gBAAgB,CAAE,CAAA,IAAI;AAC3E,eAAO,YAAY,MAAM,MAAM,MAAM,SAAS,KAAK,CAAC;AAAA,MAAA,OAC/C;AACL,gBAAS,QAAyC,MAAM;AAAA,MAAA;AAAA,IAC1D,CACD;AAAA,EAAA,CACF;AACH;AAIgB,SAAA,oBACd,aACA,UACe;AACR,SAAA,OAAO,SAAU,uBAAuB,aAAa,CAAC,OAAc,YAAiB,SAAS,OAAO,CAAC;AAC/G;"}