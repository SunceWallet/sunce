{"version":3,"file":"AccountSettings-CwQP6UA2.js","sources":["../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../node_modules/@material-ui/icons/RemoveRedEye.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/VpnKey.js","../src/ManageSigners/lib/editor.ts","../src/ManageSigners/hooks/useSignersEditor.ts","../src/ManageSigners/components/MultisigEditorContext.tsx","../node_modules/@material-ui/icons/Person.js","../src/ManageSigners/components/NewSignerForm.tsx","../src/ManageSigners/components/ThresholdInput.tsx","../src/ManageSigners/components/SignersEditor.tsx","../src/ManageSigners/components/SignerSelector.tsx","../src/ManageSigners/components/DetailsEditor.tsx","../src/ManageSigners/components/PresetSelector.tsx","../src/ManageSigners/components/ManageSignersDialog.tsx","../src/Icons/components/Merge.tsx","../src/AccountSettings/components/AccountDeletionDialog.tsx","../src/AccountSettings/components/ChangePasswordDialog.tsx","../src/AccountSettings/components/AccountSettings.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport RadioGroupContext from './RadioGroupContext';\nvar RadioGroup = React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      name = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _React$useRef = React.useRef(valueProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(function () {\n    if (!isControlled) {\n      return props.defaultValue;\n    }\n\n    return null;\n  }),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled RadioGroup to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled RadioGroup ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var value = isControlled ? valueProp : valueState;\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      setValue(event.target.value);\n    }\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var context = {\n    name: name,\n    onChange: handleChange,\n    value: value\n  };\n  var handleRef = useForkRef(ref, rootRef);\n  return React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), React.createElement(RadioGroupContext.Provider, {\n    value: context\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  /**\n   * @ignore\n   */\n  actions: PropTypes.shape({\n    current: PropTypes.object\n  }),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * The name used to reference the value of the control.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}), 'VpnKey');\n\nexports.default = _default;","import { Horizon } from \"@stellar/stellar-sdk\"\nimport { AccountData } from \"~Generic/lib/account\"\n\nexport namespace MultisigPresets {\n  export enum Type {\n    Custom = \"Custom\",\n    OneOutOfN = \"OneOutOfN\",\n    MOutOfN = \"MOutOfN\",\n    SingleSignature = \"SingleSignature\"\n  }\n\n  export interface Custom {\n    thresholds: Horizon.AccountThresholds\n    type: Type.Custom\n  }\n\n  export interface OneOutOfN {\n    type: Type.OneOutOfN\n  }\n\n  export interface MOutOfN {\n    requiredKeyWeight: number\n    type: Type.MOutOfN\n  }\n\n  export interface SingleSignature {\n    type: Type.SingleSignature\n  }\n}\n\nexport type MultisigPreset =\n  | MultisigPresets.Custom\n  | MultisigPresets.OneOutOfN\n  | MultisigPresets.MOutOfN\n  | MultisigPresets.SingleSignature\n\nexport interface SignersEditorState {\n  preset: MultisigPreset\n  signersToAdd: Horizon.AccountSigner[]\n  signersToRemove: Horizon.AccountSigner[]\n}\n\nexport function initializeEditorState(accountData: AccountData): SignersEditorState {\n  let preset: MultisigPreset\n\n  const keyWeights = accountData.signers.map(signer => signer.weight)\n  const maxKeyWeight = Math.max(...keyWeights)\n  const minKeyWeight = Math.min(...keyWeights)\n\n  const equalThresholds =\n    accountData.thresholds.low_threshold === accountData.thresholds.med_threshold &&\n    accountData.thresholds.med_threshold === accountData.thresholds.high_threshold\n  const maxThreshold = Math.max(\n    accountData.thresholds.low_threshold,\n    accountData.thresholds.med_threshold,\n    accountData.thresholds.high_threshold\n  )\n\n  if (accountData.signers.length <= 1) {\n    preset = {\n      type: MultisigPresets.Type.SingleSignature\n    }\n  } else if (minKeyWeight >= maxThreshold) {\n    preset = {\n      type: MultisigPresets.Type.OneOutOfN\n    }\n  } else if (minKeyWeight === maxKeyWeight && equalThresholds) {\n    preset = {\n      requiredKeyWeight: Math.ceil(maxThreshold / minKeyWeight),\n      type: MultisigPresets.Type.MOutOfN\n    }\n  } else {\n    preset = {\n      thresholds: accountData.thresholds,\n      type: MultisigPresets.Type.Custom\n    }\n  }\n\n  return {\n    preset,\n    signersToAdd: [],\n    signersToRemove: []\n  }\n}\n\nexport function getSignatureThreshold(preset: MultisigPreset) {\n  if (\"requiredKeyWeight\" in preset) {\n    return preset.requiredKeyWeight\n  } else if (\"thresholds\" in preset) {\n    return Math.max(preset.thresholds.low_threshold, preset.thresholds.med_threshold, preset.thresholds.high_threshold)\n  }\n}\n\nexport function requiresSignatureThreshold(preset: MultisigPreset) {\n  return preset.type === MultisigPresets.Type.MOutOfN || preset.type === MultisigPresets.Type.Custom\n}\n","import React from \"react\"\nimport { Horizon, Operation, Transaction, xdr } from \"@stellar/stellar-sdk\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext, SettingsContextType } from \"~App/contexts/settings\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { initializeEditorState, SignersEditorState } from \"../lib/editor\"\n\nexport interface SignersEditorOptions {\n  account: Account\n  horizon: Horizon.Server\n  sendTransaction: (tx: Transaction) => void\n}\n\nexport interface SignersUpdate {\n  signersToAdd: Horizon.HorizonApi.AccountSigner[]\n  signersToRemove: Horizon.HorizonApi.AccountSigner[]\n  weightThreshold: number\n}\n\nfunction createTxOperations(\n  accountData: AccountData,\n  settings: SettingsContextType,\n  update: SignersUpdate\n): xdr.Operation[] {\n  const operations: xdr.Operation[] = [\n    // signer removals before adding, so you can remove and immediately re-add signer\n    ...update.signersToRemove.map(signer => {\n      return signer.key === accountData.account_id\n        ? Operation.setOptions({\n            masterWeight: 0\n          })\n        : Operation.setOptions({\n            signer: { ed25519PublicKey: signer.key, weight: 0 }\n          })\n    }),\n    ...update.signersToAdd.map(signer =>\n      Operation.setOptions({\n        signer: { ed25519PublicKey: signer.key, weight: signer.weight }\n      })\n    )\n  ]\n\n  if (!accountData.data_attr[\"config.multisig.coordinator\"]) {\n    operations.push(\n      Operation.manageData({\n        name: \"config.multisig.coordinator\",\n        value: settings.multiSignatureCoordinator\n      })\n    )\n  }\n\n  if (\n    update.weightThreshold !== accountData.thresholds.low_threshold &&\n    update.weightThreshold !== accountData.thresholds.med_threshold &&\n    update.weightThreshold !== accountData.thresholds.high_threshold\n  ) {\n    operations.push(\n      Operation.setOptions({\n        lowThreshold: update.weightThreshold,\n        medThreshold: update.weightThreshold,\n        highThreshold: update.weightThreshold\n      })\n    )\n  }\n\n  return operations\n}\n\nexport function useSignersEditor(options: SignersEditorOptions) {\n  const accountData = useLiveAccountData(options.account.accountID, options.account.testnet)\n  const settings = React.useContext(SettingsContext)\n\n  const [txCreationPending, setTxCreationPending] = React.useState(false)\n  const [rawEditorState, setRawEditorState] = React.useState<SignersEditorState>()\n\n  const initialEditorState = React.useMemo(() => initializeEditorState(accountData), [accountData])\n  const editorState = rawEditorState || initialEditorState\n\n  const setEditorState = React.useCallback(\n    (update: SignersEditorState | React.SetStateAction<SignersEditorState>) => {\n      if (typeof update === \"function\") {\n        setRawEditorState(prev => update(prev || initialEditorState))\n      } else {\n        setRawEditorState(update)\n      }\n    },\n    [setRawEditorState, initialEditorState]\n  )\n\n  const applyUpdate = async (update: SignersUpdate) => {\n    try {\n      setTxCreationPending(true)\n      const operations = createTxOperations(accountData, settings, update)\n\n      const tx = await createTransaction(operations, {\n        accountData,\n        horizon: options.horizon,\n        walletAccount: options.account\n      })\n\n      const submissionPromise = options.sendTransaction(tx)\n      setTxCreationPending(false)\n\n      await submissionPromise\n    } catch (error) {\n      trackError(error)\n      setTxCreationPending(false)\n    }\n  }\n\n  return {\n    applyUpdate,\n    editorState,\n    setEditorState: setEditorState as React.Dispatch<React.SetStateAction<SignersEditorState>>,\n    txCreationPending\n  }\n}\n","import React from \"react\"\nimport { Horizon, Transaction } from \"@stellar/stellar-sdk\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { useSignersEditor, SignersUpdate } from \"../hooks/useSignersEditor\"\nimport { MultisigPresets, SignersEditorState } from \"../lib/editor\"\n\nexport enum Step {\n  Presets,\n  Signers\n}\n\ninterface MultisigEditorContextType {\n  accountID: string\n  currentStep: Step\n  editorState: SignersEditorState\n  setEditorState: React.Dispatch<React.SetStateAction<SignersEditorState>>\n  switchToStep: React.Dispatch<React.SetStateAction<Step>>\n  testnet: boolean\n  txCreationPending: boolean\n  applyUpdate(update: SignersUpdate): any\n}\n\nexport const MultisigEditorContext = React.createContext<MultisigEditorContextType>({\n  accountID: \"\",\n  applyUpdate() {\n    throw Error(\"MultisigEditorContext has not yet been initialized\")\n  },\n  currentStep: Step.Presets,\n  editorState: {\n    preset: {\n      type: MultisigPresets.Type.SingleSignature\n    },\n    signersToAdd: [],\n    signersToRemove: []\n  },\n  setEditorState() {\n    throw Error(\"MultisigEditorContext has not yet been initialized\")\n  },\n  switchToStep() {\n    throw Error(\"MultisigEditorContext has not yet been initialized\")\n  },\n  testnet: false,\n  txCreationPending: false\n})\n\ninterface MultisigEditorProviderProps {\n  account: Account\n  children: React.ReactNode\n  horizon: Horizon.Server\n  sendTransaction: (tx: Transaction) => void\n}\n\nexport const MultisigEditorProvider = React.memo(function MultisigEditorProvider(props: MultisigEditorProviderProps) {\n  const [currentStep, switchToStep] = React.useState<Step>(Step.Presets)\n  const editor = useSignersEditor(props)\n\n  const contextValue: MultisigEditorContextType = {\n    ...editor,\n    accountID: props.account.accountID,\n    currentStep,\n    switchToStep,\n    testnet: props.account.testnet\n  }\n\n  return <MultisigEditorContext.Provider value={contextValue}>{props.children}</MultisigEditorContext.Provider>\n})\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport TextField from \"@material-ui/core/TextField\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\"\nimport { useIsSmallMobile, useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport theme from \"~App/theme\"\n\ninterface FormValues {\n  publicKey: string\n  weight: string\n}\n\ninterface FormErrors {\n  publicKey?: Error\n  weight?: Error\n}\n\ninterface Props {\n  errors: FormErrors\n  values: FormValues\n  onCancel: () => void\n  onSubmit: () => void\n  onUpdate: (values: Partial<FormValues>) => void\n  style?: React.CSSProperties\n}\n\nfunction NewSignerForm(props: Props) {\n  const isSmallScreen = useIsMobile()\n  const isTinyScreen = useIsSmallMobile()\n  const { t } = useTranslation()\n\n  return (\n    <ListItem style={props.style}>\n      <ListItemIcon>\n        <PersonAddIcon style={{ fontSize: \"2rem\" }} />\n      </ListItemIcon>\n      <ListItemText>\n        <HorizontalLayout>\n          <TextField\n            autoFocus={import.meta.env.VITE_PLATFORM !== \"ios\"}\n            error={!!props.errors.publicKey}\n            label={\n              props.errors.publicKey\n                ? props.errors.publicKey.message\n                : t(\"account-settings.manage-signers.signers-editor.new-signer.label\")\n            }\n            placeholder={\n              isSmallScreen\n                ? t(\"account-settings.manage-signers.signers-editor.new-signer.placeholder.short\")\n                : t(\"account-settings.manage-signers.signers-editor.new-signer.placeholder.long\")\n            }\n            onChange={event => props.onUpdate({ publicKey: event.target.value.trim() })}\n            style={{ flexGrow: 1 }}\n            InputProps={isTinyScreen ? { style: { fontSize: \"0.8rem\" } } : undefined}\n            value={props.values.publicKey}\n          />\n        </HorizontalLayout>\n      </ListItemText>\n      <ListItemIcon style={{ marginLeft: 8, minWidth: 0 }}>\n        <IconButton\n          color=\"primary\"\n          onClick={props.onSubmit}\n          style={{ borderColor: theme.palette.primary.main, borderStyle: \"solid\", borderWidth: 1.5, padding: 8 }}\n        >\n          <CheckIcon />\n        </IconButton>\n      </ListItemIcon>\n      <ListItemIcon style={{ minWidth: 0 }}>\n        <IconButton onClick={props.onCancel}>\n          <CloseIcon />\n        </IconButton>\n      </ListItemIcon>\n    </ListItem>\n  )\n}\n\nexport default NewSignerForm\n","import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { getSignatureThreshold } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\n\ninterface ThresholdInputProps {\n  inputRef?: React.Ref<any>\n}\n\nfunction ThresholdInput(props: ThresholdInputProps) {\n  const { editorState, setEditorState } = React.useContext(MultisigEditorContext)\n  const { preset } = editorState\n\n  const value = String(getSignatureThreshold(preset))\n\n  const setThreshold = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.persist()\n\n      setEditorState(prev => {\n        const newThreshold = Number.parseInt(event.target.value, 10)\n\n        if (\"requiredKeyWeight\" in prev.preset) {\n          return {\n            ...prev,\n            preset: {\n              ...prev.preset,\n              requiredKeyWeight: newThreshold\n            }\n          }\n        } else if (\"thresholds\" in prev.preset) {\n          return {\n            ...prev,\n            preset: {\n              ...prev.preset,\n              thresholds: {\n                high_threshold: newThreshold,\n                med_threshold: newThreshold,\n                low_threshold: newThreshold\n              }\n            }\n          }\n        } else {\n          throw Error(`Cannot update thresholds for multi-sig preset of type \"${prev.preset.type}\"`)\n        }\n      })\n    },\n    [setEditorState]\n  )\n\n  return (\n    <TextField\n      inputProps={{\n        min: 1,\n        style: {\n          maxWidth: 32,\n          padding: \"16px 14px\",\n          textAlign: \"center\"\n        }\n      }}\n      inputRef={props.inputRef}\n      onChange={setThreshold}\n      type=\"number\"\n      value={value}\n      variant=\"outlined\"\n    />\n  )\n}\n\nexport default React.memo(ThresholdInput)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Horizon } from \"@stellar/stellar-sdk\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Divider from \"@material-ui/core/Divider\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport PersonIcon from \"@material-ui/icons/Person\"\nimport RemoveIcon from \"@material-ui/icons/RemoveCircle\"\nimport { AccountsContext } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport ButtonListItem from \"~Generic/components/ButtonListItem\"\nimport { Address } from \"~Generic/components/PublicKey\"\nimport { useFederationLookup } from \"~Generic/hooks/stellar\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { isPublicKey, isStellarAddress } from \"~Generic/lib/stellar-address\"\nimport { requiresSignatureThreshold } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\nimport NewSignerForm from \"./NewSignerForm\"\nimport ThresholdInput from \"./ThresholdInput\"\n\ninterface SignerFormValues {\n  publicKey: string\n  weight: string\n}\n\ninterface SignerFormErrors {\n  publicKey?: Error\n  weight?: Error\n}\n\nfunction useFormValidation() {\n  const { t } = useTranslation()\n  return function validateNewSignerValues(\n    values: SignerFormValues,\n    signers: Horizon.AccountSigner[]\n  ): SignerFormErrors {\n    const errors: SignerFormErrors = {}\n\n    if (!isPublicKey(values.publicKey) && !isStellarAddress(values.publicKey)) {\n      errors.publicKey = new Error(\n        t(\"account-settings.manage-signers.signers-editor.validation.invalid-stellar-address\")\n      )\n    } else if (signers.find(existingSigner => existingSigner.key === values.publicKey)) {\n      errors.publicKey = new Error(t(\"account-settings.manage-signers.signers-editor.validation.existing-signer\"))\n    }\n    if (!values.weight.match(/^[0-9]+$/)) {\n      errors.weight = new Error(t(\"account-settings.manage-signers.signers-editor.validation.integer-required\"))\n    }\n\n    return errors\n  }\n}\n\nconst listItemStyles: React.CSSProperties = {\n  background: \"white\",\n  boxShadow: \"0 8px 12px 0 rgba(0, 0, 0, 0.1)\"\n}\n\ninterface SignersEditorProps {\n  signers: Horizon.AccountSigner[]\n  showKeyWeights?: boolean\n  testnet: boolean\n}\n\nfunction SignersEditor(props: SignersEditorProps) {\n  const { accounts } = React.useContext(AccountsContext)\n  const { editorState, setEditorState, testnet } = React.useContext(MultisigEditorContext)\n  const { lookupFederationRecord } = useFederationLookup()\n  const isSmallScreen = useIsMobile()\n  const validateNewSignerValues = useFormValidation()\n  const thresholdInputRef = React.createRef<HTMLInputElement>()\n\n  const { t } = useTranslation()\n  const { preset } = editorState\n\n  const [isEditingNewSigner, setIsEditingNewSigner] = React.useState(false)\n  const [newSignerErrors, setNewSignerErrors] = React.useState<SignerFormErrors>({})\n  const [newSignerValues, setNewSignerValues] = React.useState<SignerFormValues>({\n    publicKey: \"\",\n    weight: \"1\"\n  })\n\n  const editNewSigner = React.useCallback(() => setIsEditingNewSigner(true), [setIsEditingNewSigner])\n\n  const addSigner = (signer: Horizon.AccountSigner) =>\n    setEditorState(prev => ({\n      ...prev,\n      signersToAdd: [...prev.signersToAdd, signer]\n    }))\n\n  const removeSigner = (signer: Horizon.AccountSigner) => {\n    setEditorState(prev => ({\n      ...prev,\n      signersToAdd: prev.signersToAdd.filter(someSignerToBeAddd => someSignerToBeAddd.key !== signer.key),\n      signersToRemove: [...prev.signersToRemove, signer]\n    }))\n    thresholdInputRef.current?.focus()\n  }\n\n  const createCosigner = async () => {\n    try {\n      const federationRecord =\n        newSignerValues.publicKey.indexOf(\"*\") > -1 ? await lookupFederationRecord(newSignerValues.publicKey) : null\n\n      const cosignerPublicKey = federationRecord ? federationRecord.account_id : newSignerValues.publicKey\n      const errors = validateNewSignerValues(newSignerValues, props.signers)\n\n      if (Object.keys(errors).length > 0) {\n        return setNewSignerErrors(errors)\n      }\n\n      addSigner({\n        key: cosignerPublicKey,\n        type: \"ed25519_public_key\",\n        weight: parseInt(newSignerValues.weight, 10)\n      })\n\n      setIsEditingNewSigner(false)\n      setNewSignerErrors({})\n      setNewSignerValues({\n        publicKey: \"\",\n        weight: \"1\"\n      })\n\n      thresholdInputRef.current?.focus()\n    } catch (error) {\n      trackError(error)\n    }\n  }\n\n  const updateNewSignerValues = (values: Partial<SignerFormValues>) => {\n    setNewSignerValues(prevValues => ({\n      ...prevValues,\n      ...values\n    }))\n  }\n\n  return (\n    <List disablePadding={isSmallScreen}>\n      {isEditingNewSigner ? (\n        <NewSignerForm\n          errors={newSignerErrors}\n          onCancel={() => setIsEditingNewSigner(false)}\n          onSubmit={createCosigner}\n          onUpdate={updateNewSignerValues}\n          style={listItemStyles}\n          values={newSignerValues}\n        />\n      ) : (\n        <ButtonListItem gutterBottom onClick={editNewSigner}>\n          <AddIcon />\n          &nbsp;&nbsp;\n          {t(\"account-settings.manage-signers.action.add-signer\")}\n        </ButtonListItem>\n      )}\n      {props.signers.map(signer => (\n        <ListItem key={signer.key} style={listItemStyles}>\n          <ListItemIcon>\n            <PersonIcon style={{ fontSize: \"2rem\" }} />\n          </ListItemIcon>\n          <ListItemText\n            primary={<Address address={signer.key} testnet={props.testnet} variant=\"full\" />}\n            secondary={\n              <>\n                {props.showKeyWeights ? (\n                  <span style={{ marginRight: 24 }}>\n                    {t(\"account-settings.manage-signers.signers-editor.list.item.weight\")}: {signer.weight}\n                  </span>\n                ) : null}\n                {accounts.some(account => account.publicKey === signer.key && account.testnet === testnet) ? (\n                  <span>{t(\"account-settings.manage-signers.signers-editor.list.item.local-key\")}</span>\n                ) : null}\n              </>\n            }\n          />\n          <ListItemSecondaryAction>\n            <IconButton aria-label=\"Remove\" disabled={props.signers.length === 1} onClick={() => removeSigner(signer)}>\n              <RemoveIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n      {requiresSignatureThreshold(preset) ? (\n        <>\n          <ListItem style={listItemStyles}>\n            <ListItemIcon>\n              <div />\n            </ListItemIcon>\n            <ListItemText\n              primary={t(\"account-settings.manage-signers.signers-editor.threshold.primary\")}\n              secondary={t(\"account-settings.manage-signers.signers-editor.threshold.secondary\")}\n              style={{ flexGrow: 0, marginRight: 32 }}\n            />\n            <ListItemText>\n              <ThresholdInput inputRef={thresholdInputRef} />\n            </ListItemText>\n          </ListItem>\n          <Divider />\n        </>\n      ) : null}\n    </List>\n  )\n}\n\nexport default SignersEditor\n","import List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Radio from \"@material-ui/core/Radio\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Horizon } from \"@stellar/stellar-sdk\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { Address } from \"~Generic/components/PublicKey\"\n\ninterface SignerSelectorProps {\n  accounts: Account[]\n  onSelect: (signer: Horizon.AccountSigner) => void\n  selected: Horizon.AccountSigner | undefined\n  signers: Horizon.AccountSigner[]\n  testnet: boolean\n}\n\nfunction SignerSelector(props: SignerSelectorProps) {\n  const { t } = useTranslation()\n  return (\n    <RadioGroup value={props.selected?.key || \"\"}>\n      <List>\n        {props.signers.map(signer => (\n          <ListItem button key={signer.key} onClick={() => props.onSelect(signer)}>\n            <ListItemIcon>\n              <Radio edge=\"start\" value={signer.key} />\n            </ListItemIcon>\n            <ListItemText\n              primary={<Address address={signer.key} variant=\"full\" testnet={props.testnet} />}\n              secondary={\n                props.accounts.some(\n                  account => account.publicKey === signer.key && account.testnet === props.testnet\n                ) ? (\n                  <span>{t(\"account-settings.manage-signers.signers-editor.list.item.local-key\")}</span>\n                ) : null\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n    </RadioGroup>\n  )\n}\n\nexport default React.memo(SignerSelector)\n","import Typography from \"@material-ui/core/Typography\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Horizon } from \"@stellar/stellar-sdk\"\nimport { AccountsContext } from \"~App/contexts/accounts\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport Portal from \"~Generic/components/Portal\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, RefStateObject } from \"~Generic/hooks/userinterface\"\nimport { Box, VerticalLayout } from \"~Layout/components/Box\"\nimport { MultisigPreset, MultisigPresets } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\nimport SignersEditor from \"./SignersEditor\"\nimport SignerSelector from \"./SignerSelector\"\n\nconst PresetDescription = React.memo(function PresetDescription(props: { preset: MultisigPreset }) {\n  const { t } = useTranslation()\n  let description = \"\"\n  let extraDescription = \"\"\n\n  if (props.preset.type === MultisigPresets.Type.SingleSignature) {\n    description = t(\"account-settings.manage-signers.preset-description.single-signature\")\n  } else if (props.preset.type === MultisigPresets.Type.OneOutOfN) {\n    description = t(\"account-settings.manage-signers.preset-description.one-out-of-n\")\n  } else if (props.preset.type === MultisigPresets.Type.MOutOfN) {\n    description = t(\"account-settings.manage-signers.preset-description.m-out-of-n\", {\n      count: props.preset.requiredKeyWeight || 0\n    })\n  }\n\n  if (props.preset.type === MultisigPresets.Type.SingleSignature) {\n    // Nothing to show\n  } else if (props.preset.type === MultisigPresets.Type.OneOutOfN) {\n    extraDescription = t(\"account-settings.manage-signers.preset-description-extra.one-out-of-n\")\n  } else if (props.preset.type === MultisigPresets.Type.MOutOfN) {\n    extraDescription = t(\"account-settings.manage-signers.preset-description-extra.m-out-of-n\")\n  }\n\n  return (\n    <>\n      <Typography align=\"center\" color=\"textSecondary\" gutterBottom>\n        {description}\n      </Typography>\n      {extraDescription ? (\n        <Typography align=\"center\" color=\"textSecondary\">\n          {extraDescription}\n        </Typography>\n      ) : null}\n    </>\n  )\n})\n\ninterface DetailsEditorProps {\n  actionsRef: RefStateObject | undefined\n  disabled?: boolean\n  onSubmit: () => Promise<any>\n  signers: Horizon.AccountSigner[]\n  showKeyWeights?: boolean\n  testnet: boolean\n}\n\nfunction DetailsEditor(props: DetailsEditorProps) {\n  const [selectedSigner, setSelectedSigner] = React.useState<Horizon.AccountSigner | undefined>()\n  const { t } = useTranslation()\n  const { accounts } = React.useContext(AccountsContext)\n  const { accountID, editorState, setEditorState, testnet } = React.useContext(MultisigEditorContext)\n  const accountData = useLiveAccountData(accountID, testnet)\n  const isSmallScreen = useIsMobile()\n\n  const showSignerSelection =\n    editorState.preset.type === MultisigPresets.Type.SingleSignature && accountData.signers.length > 1\n\n  const selectSingleSigner = React.useCallback(\n    (newlySelectedSigner: Horizon.AccountSigner) => {\n      setSelectedSigner(newlySelectedSigner)\n      setEditorState(prev => ({\n        ...prev,\n        signersToAdd: [],\n        signersToRemove: accountData.signers.filter(signer => signer.key !== newlySelectedSigner.key)\n      }))\n    },\n    [accountData, setEditorState]\n  )\n\n  const disabled = props.disabled || (showSignerSelection && !selectedSigner)\n\n  return (\n    <VerticalLayout>\n      {showSignerSelection ? (\n        <SignerSelector\n          accounts={accounts}\n          onSelect={selectSingleSigner}\n          selected={selectedSigner}\n          signers={accountData.signers}\n          testnet={testnet}\n        />\n      ) : (\n        <SignersEditor {...props} />\n      )}\n      <Box margin=\"32px 0 0\">\n        <PresetDescription preset={editorState.preset} />\n      </Box>\n      <Portal target={props.actionsRef?.element}>\n        <DialogActionsBox desktopStyle={{ margin: 0 }}>\n          <ActionButton disabled={disabled} icon={<CheckIcon />} onClick={props.onSubmit} type=\"submit\">\n            {isSmallScreen\n              ? t(\"account-settings.manage-signers.action.apply.short\")\n              : t(\"account-settings.manage-signers.action.apply.long\")}\n          </ActionButton>\n        </DialogActionsBox>\n      </Portal>\n    </VerticalLayout>\n  )\n}\n\nexport default React.memo(DetailsEditor)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport List from \"@material-ui/core/List\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Radio from \"@material-ui/core/Radio\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport Typography from \"@material-ui/core/Typography\"\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport AccountSettingsItem from \"~AccountSettings/components/AccountSettingsItem\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport Portal from \"~Generic/components/Portal\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { RefStateObject } from \"~Generic/hooks/userinterface\"\nimport { VerticalLayout } from \"~Layout/components/Box\"\nimport { MultisigPreset, MultisigPresets } from \"../lib/editor\"\nimport { MultisigEditorContext } from \"./MultisigEditorContext\"\n\ninterface PresetSelectorItemProps {\n  onChange: () => void\n  primary: React.ReactNode\n  secondary: React.ReactNode\n  selected: boolean\n}\n\nconst PresetSelectorItem = React.memo(function PresetSelectorItem(props: PresetSelectorItemProps) {\n  return (\n    <AccountSettingsItem\n      icon={<Radio checked={props.selected} color=\"primary\" onChange={props.onChange} />}\n      onClick={props.onChange}\n    >\n      <ListItemText primary={props.primary} secondary={props.secondary} />\n    </AccountSettingsItem>\n  )\n})\n\ninterface PresetSelectorProps {\n  actionsRef: RefStateObject | undefined\n  onProceed: () => void\n  style?: React.CSSProperties\n}\n\nfunction PresetSelector(props: PresetSelectorProps) {\n  const { accountID, editorState, setEditorState, testnet } = React.useContext(MultisigEditorContext)\n  const { t } = useTranslation()\n  const accountData = useLiveAccountData(accountID, testnet)\n  const minKeyWeight = Math.min(...accountData.signers.map(signer => signer.weight))\n\n  // Signers editor only makes sense for multi-sig setups or when switching back to single sig\n  const canProceed = editorState.preset.type !== MultisigPresets.Type.SingleSignature || accountData.signers.length > 1\n\n  const setPreset = (preset: MultisigPreset) =>\n    setEditorState(prev => ({\n      ...prev,\n      preset\n    }))\n\n  return (\n    <VerticalLayout>\n      <Typography gutterBottom style={{ marginLeft: 8, marginRight: 8 }} variant=\"h6\">\n        {t(\"account-settings.manage-signers.preset-selector.title\")}\n      </Typography>\n      <RadioGroup>\n        <List style={props.style}>\n          <PresetSelectorItem\n            onChange={() => setPreset({ type: MultisigPresets.Type.SingleSignature })}\n            primary={t(\"account-settings.manage-signers.preset-selector.options.single-signature.primary\")}\n            selected={editorState.preset.type === MultisigPresets.Type.SingleSignature}\n            secondary={t(\"account-settings.manage-signers.preset-selector.options.single-signature.secondary\")}\n          />\n          <PresetSelectorItem\n            onChange={() =>\n              setPreset({\n                requiredKeyWeight: accountData.thresholds.high_threshold || minKeyWeight,\n                type: MultisigPresets.Type.MOutOfN\n              })\n            }\n            primary={t(\"account-settings.manage-signers.preset-selector.options.m-out-of-n.primary\")}\n            selected={editorState.preset.type === MultisigPresets.Type.MOutOfN}\n            secondary={t(\"account-settings.manage-signers.preset-selector.options.m-out-of-n.secondary\")}\n          />\n          <PresetSelectorItem\n            onChange={() => setPreset({ type: MultisigPresets.Type.OneOutOfN })}\n            primary={t(\"account-settings.manage-signers.preset-selector.options.one-out-of-n.primary\")}\n            selected={editorState.preset.type === MultisigPresets.Type.OneOutOfN}\n            secondary={t(\"account-settings.manage-signers.preset-selector.options.one-out-of-n.secondary\")}\n          />\n        </List>\n      </RadioGroup>\n      <Portal target={props.actionsRef?.element}>\n        <DialogActionsBox desktopStyle={{ margin: 0 }}>\n          <ActionButton disabled={!canProceed} icon={<RightIcon />} onClick={props.onProceed} type=\"submit\">\n            {t(\"account-settings.manage-signers.action.proceed\")}\n          </ActionButton>\n        </DialogActionsBox>\n      </Portal>\n    </VerticalLayout>\n  )\n}\n\nexport default React.memo(PresetSelector)\n","import React from \"react\"\nimport { Horizon } from \"@stellar/stellar-sdk\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { trackError } from \"~App/contexts/notifications\"\nimport * as routes from \"~App/routes\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useDialogActions, useRouter } from \"~Generic/hooks/userinterface\"\nimport { AccountData } from \"~Generic/lib/account\"\nimport { CustomError } from \"~Generic/lib/errors\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport Carousel from \"~Layout/components/Carousel\"\nimport DialogBody from \"~Layout/components/DialogBody\"\nimport { MultisigPreset, MultisigPresets } from \"~ManageSigners/lib/editor\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\nimport DetailsEditor from \"./DetailsEditor\"\nimport { MultisigEditorContext, MultisigEditorProvider, Step } from \"./MultisigEditorContext\"\nimport PresetSelector from \"./PresetSelector\"\n\nfunction getUpdatedSigners(\n  accountData: AccountData,\n  signersToAdd: Horizon.AccountSigner[],\n  signersToRemove: Horizon.AccountSigner[]\n) {\n  const signersPubKeysToAdd = signersToAdd.map(signer => signer.key)\n  const signersPubKeysToRemove = signersToRemove.map(signer => signer.key)\n\n  const isNotToBeAdded = (signer: Horizon.AccountSigner) => signersPubKeysToAdd.indexOf(signer.key) === -1\n  const isNotToBeRemoved = (signer: Horizon.AccountSigner) => signersPubKeysToRemove.indexOf(signer.key) === -1\n\n  const updatedSigners = [...accountData.signers.filter(isNotToBeAdded).filter(isNotToBeRemoved), ...signersToAdd]\n\n  return [\n    ...updatedSigners.filter(signer => signer.key !== accountData.id).reverse(),\n    ...updatedSigners.filter(signer => signer.key === accountData.id)\n  ]\n}\n\nfunction getWeightThreshold(preset: MultisigPreset, signers: Horizon.AccountSigner[]): number {\n  if (preset.type === MultisigPresets.Type.SingleSignature) {\n    return 0\n  } else if (preset.type === MultisigPresets.Type.OneOutOfN) {\n    return Math.min(...signers.map(signer => signer.weight))\n  } else if (preset.type === MultisigPresets.Type.MOutOfN) {\n    return preset.requiredKeyWeight\n  } else {\n    return preset.thresholds.high_threshold\n  }\n}\n\nfunction validate(updatedSigners: Horizon.AccountSigner[], weightThreshold: number) {\n  const totalKeyWeight = updatedSigners.reduce((total, signer) => total + signer.weight, 0)\n\n  if (weightThreshold < 0 || (weightThreshold < 1 && updatedSigners.length > 1)) {\n    throw CustomError(\"MultiSigConfigThresholdTooLowError\", `Signature threshold too low.`)\n  } else if (weightThreshold > totalKeyWeight) {\n    throw CustomError(\"MultiSigConfigThresholdLockError\", `Signature threshold too high. You would lock your account.`)\n  }\n}\n\ninterface Props {\n  account: Account\n  onCancel: () => void\n}\n\nfunction ManageSignersDialogContent(props: Props) {\n  const { accountID, applyUpdate, currentStep, editorState, setEditorState, switchToStep, testnet } = React.useContext(\n    MultisigEditorContext\n  )\n  const accountData = useLiveAccountData(accountID, testnet)\n  const dialogActionsRef = useDialogActions()\n  const router = useRouter()\n\n  // store value of initial editorState to detect if changes were made\n  const baseStateRef = React.useRef(editorState)\n\n  const updatedSigners = getUpdatedSigners(accountData, editorState.signersToAdd, editorState.signersToRemove)\n  const allDefaultKeyweights = updatedSigners.every(signer => signer.weight === 1)\n\n  const proceedToSigners = React.useCallback(() => {\n    router.history.push(routes.manageAccountSignersDetails(props.account.id))\n    switchToStep(Step.Signers)\n  }, [props.account.id, router.history, switchToStep])\n\n  const switchBackToPresets = React.useCallback(() => {\n    // reset editor state\n    setEditorState(prev => ({ ...prev, signersToRemove: [], signersToAdd: [] }))\n    switchToStep(Step.Presets)\n  }, [switchToStep, setEditorState])\n\n  React.useEffect(() => {\n    if (matchesRoute(router.location.pathname, routes.manageAccountSigners(props.account.id), true)) {\n      switchBackToPresets()\n    }\n  }, [router.location.pathname, props.account.id, switchBackToPresets])\n\n  const submit = async () => {\n    try {\n      const weightThreshold = getWeightThreshold(editorState.preset, updatedSigners)\n\n      validate(updatedSigners, weightThreshold)\n\n      await applyUpdate({\n        signersToAdd: editorState.signersToAdd,\n        signersToRemove: editorState.signersToRemove,\n        weightThreshold\n      })\n\n      baseStateRef.current = editorState\n\n      setEditorState(prev => ({\n        ...prev,\n        signersToAdd: [],\n        signersToRemove: []\n      }))\n    } catch (error) {\n      trackError(error)\n    }\n  }\n\n  // disable submit if no changes were made\n  const disabled = React.useMemo(() => {\n    const baseState = baseStateRef.current\n    const samePreset =\n      editorState.preset.type === \"Custom\" && baseState.preset.type === \"Custom\"\n        ? editorState.preset.thresholds.high_threshold === baseState.preset.thresholds.high_threshold &&\n          editorState.preset.thresholds.med_threshold === baseState.preset.thresholds.med_threshold &&\n          editorState.preset.thresholds.low_threshold === baseState.preset.thresholds.low_threshold\n        : editorState.preset.type === \"MOutOfN\" && baseState.preset.type === \"MOutOfN\"\n        ? editorState.preset.requiredKeyWeight === baseState.preset.requiredKeyWeight\n        : editorState.preset.type === baseState.preset.type\n\n    if (\n      (editorState.preset.type === \"Custom\" || editorState.preset.type === \"MOutOfN\") &&\n      accountData.signers.length + editorState.signersToAdd.length < 2\n    ) {\n      return true\n    }\n\n    return editorState.signersToAdd.length === 0 && editorState.signersToRemove.length === 0 && samePreset\n  }, [accountData, editorState])\n\n  return (\n    <DialogBody actions={dialogActionsRef}>\n      <Carousel current={currentStep === Step.Signers ? 1 : 0}>\n        <PresetSelector\n          actionsRef={currentStep === Step.Presets ? dialogActionsRef : undefined}\n          onProceed={proceedToSigners}\n          style={{ marginBottom: 24 }}\n        />\n        <DetailsEditor\n          actionsRef={currentStep === Step.Signers ? dialogActionsRef : undefined}\n          disabled={disabled}\n          onSubmit={submit}\n          signers={updatedSigners}\n          showKeyWeights={!allDefaultKeyweights}\n          testnet={testnet}\n        />\n      </Carousel>\n    </DialogBody>\n  )\n}\n\ninterface ManageSignersDialogProps {\n  account: Account\n  onClose: () => void\n}\n\nfunction ManageSignersDialog(props: ManageSignersDialogProps) {\n  return (\n    <TransactionSender account={props.account}>\n      {({ horizon, sendTransaction }) => (\n        <MultisigEditorProvider account={props.account} horizon={horizon} sendTransaction={sendTransaction}>\n          <ManageSignersDialogContent account={props.account} onCancel={props.onClose} />\n        </MultisigEditorProvider>\n      )}\n    </TransactionSender>\n  )\n}\n\nexport default React.memo(ManageSignersDialog)\n","import * as React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\ninterface Props {\n  className?: string\n  onClick?: () => void\n  style?: React.CSSProperties\n}\n\nfunction MergeIcon(props: Props) {\n  return (\n    <SvgIcon transform=\"rotate(90)\" viewBox=\"0 0 24 20\" {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M17 20.41L18.41 19 15 15.59 13.59 17 17 20.41zM7.5 8H11v5.59L5.59 19 7 20.41l6-6V8h3.5L12 3.5 7.5 8z\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default MergeIcon\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Operation, Transaction, Horizon } from \"@stellar/stellar-sdk\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport Switch from \"@material-ui/core/Switch\"\nimport Typography from \"@material-ui/core/Typography\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport WarnIcon from \"@material-ui/icons/Warning\"\nimport AccountSelectionList from \"~Account/components/AccountSelectionList\"\nimport { Account, AccountsContext } from \"~App/contexts/accounts\"\nimport { createTransaction } from \"~Generic/lib/transaction\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, useIsSmallMobile } from \"~Generic/hooks/userinterface\"\nimport { ActionButton, ConfirmDialog, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport MainTitle from \"~Generic/components/MainTitle\"\nimport MergeIcon from \"~Icons/components/Merge\"\nimport DialogBody from \"~Layout/components/DialogBody\"\nimport { HorizontalLayout } from \"~Layout/components/Box\"\nimport TransactionSender from \"~Transaction/components/TransactionSender\"\n\nconst redText: React.CSSProperties = {\n  color: \"red\"\n}\n\ninterface DeletionConfirmationDialogProps {\n  merging: boolean\n  onCancel: () => void\n  onClose: () => void\n  onConfirm: () => void\n  open: boolean\n}\n\nconst DeletionConfirmationDialog = React.memo(function DeletionConfirmationDialog(\n  props: DeletionConfirmationDialogProps\n) {\n  const { t } = useTranslation()\n  return (\n    <ConfirmDialog\n      cancelButton={\n        <ActionButton onClick={props.onCancel}>{t(\"account-settings.account-deletion.action.cancel\")}</ActionButton>\n      }\n      confirmButton={\n        <ActionButton onClick={props.onConfirm} type=\"primary\">\n          {t(\"account-settings.account-deletion.action.confirm\")}\n        </ActionButton>\n      }\n      open={props.open}\n      onClose={props.onClose}\n      title={t(\"account-settings.account-deletion.confirm.title\")}\n    >\n      {t(\"account-settings.account-deletion.confirm.text.delete\")}\n      {props.merging ? ` ${t(\"account-settings.account-deletion.confirm.text.merge\")}. ` : \". \"}\n      {t(\"account-settings.account-deletion.confirm.text.confirm\")}\n    </ConfirmDialog>\n  )\n})\n\ninterface WarningDialogProps {\n  onClose: () => void\n  open: boolean\n  title: string\n  warning: React.ReactNode\n}\n\nconst WarningDialog = React.memo(function WarningDialog(props: WarningDialogProps) {\n  const { t } = useTranslation()\n  return (\n    <ConfirmDialog\n      cancelButton={null}\n      confirmButton={\n        <ActionButton onClick={props.onClose} type=\"primary\">\n          {t(\"account-settings.account-deletion.warning-dialog.close.label\")}\n        </ActionButton>\n      }\n      onClose={props.onClose}\n      open={props.open}\n      title={props.title}\n    >\n      {props.warning}\n    </ConfirmDialog>\n  )\n})\n\ninterface Warning {\n  open: boolean\n  text: string\n  title: string\n}\n\ninterface AccountDeletionDialogProps {\n  account: Account\n  horizon: Horizon.Server\n  onClose: () => void\n  onDelete: () => void\n  sendTransaction: (transaction: Transaction) => void\n}\n\nfunction AccountDeletionDialog(props: AccountDeletionDialogProps) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const horizon = props.horizon\n\n  const { accounts } = React.useContext(AccountsContext)\n  const [mergeAccountEnabled, setMergeAccountEnabled] = React.useState(false)\n  const [confirmationPending, setConfirmationPending] = React.useState(false)\n  const [selectedMergeAccount, setSelectedMergeAccount] = React.useState<Account | null>(null)\n  const [warning, setWarning] = React.useState<Warning | undefined>()\n\n  const { t } = useTranslation()\n  const isSmallScreen = useIsMobile()\n  const isTinyScreen = useIsSmallMobile()\n\n  const cancelConfirmation = React.useCallback(() => setConfirmationPending(false), [setConfirmationPending])\n  const toggleMergeAccount = React.useCallback(() => setMergeAccountEnabled(enabled => !enabled), [])\n\n  const closeWarning = React.useCallback(() => {\n    setWarning(prev => (prev ? { ...prev, open: false } : undefined))\n  }, [setWarning])\n\n  const onMerge = async () => {\n    if (selectedMergeAccount) {\n      const transaction = await createTransaction(\n        [\n          Operation.accountMerge({\n            source: props.account.accountID,\n            destination: selectedMergeAccount.publicKey,\n            withMuxing: true\n          })\n        ],\n        { accountData, horizon, walletAccount: props.account }\n      )\n\n      await props.sendTransaction(transaction)\n    }\n  }\n\n  const onConfirm = () => {\n    setConfirmationPending(false)\n    if (mergeAccountEnabled) {\n      onMerge()\n    } else {\n      props.onDelete()\n    }\n  }\n\n  const requestConfirmation = React.useCallback(() => {\n    if (mergeAccountEnabled && accountData.subentry_count > 0) {\n      setWarning({\n        open: true,\n        text: t(\"account-settings.account-deletion.warnings.cannot-merge.text\"),\n        title: t(\"account-settings.account-deletion.warnings.cannot-merge.title\")\n      })\n    } else {\n      setConfirmationPending(true)\n    }\n  }, [accountData, mergeAccountEnabled, setConfirmationPending, setWarning, t])\n\n  const remainingFundsContent = React.useMemo(\n    () =>\n      accountData.balances.length > 0 ? (\n        <>\n          <HorizontalLayout alignItems=\"center\" style={{ marginTop: 24, marginLeft: -12, marginBottom: 8 }}>\n            <Switch color=\"primary\" checked={mergeAccountEnabled} onChange={toggleMergeAccount} />\n            <Typography\n              onClick={toggleMergeAccount}\n              variant=\"h6\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                height: 48,\n                cursor: \"pointer\",\n                fontSize: isSmallScreen ? 16 : 20,\n                marginLeft: 8\n              }}\n            >\n              {t(\"account-settings.account-deletion.remaining-funds.text\")}\n            </Typography>\n          </HorizontalLayout>\n\n          <AccountSelectionList\n            disabled={!mergeAccountEnabled}\n            accounts={accounts.filter(\n              account =>\n                account.accountID !== props.account.accountID &&\n                account.publicKey !== props.account.publicKey &&\n                account.testnet === props.account.testnet\n            )}\n            testnet={props.account.testnet}\n            onChange={setSelectedMergeAccount}\n          />\n        </>\n      ) : null,\n    [\n      accountData.balances.length,\n      mergeAccountEnabled,\n      toggleMergeAccount,\n      isSmallScreen,\n      t,\n      accounts,\n      props.account.accountID,\n      props.account.publicKey,\n      props.account.testnet\n    ]\n  )\n\n  return (\n    <DialogBody\n      background={<WarnIcon style={{ fontSize: 160 }} />}\n      noMaxWidth\n      preventNotchSpacing\n      top={\n        <MainTitle\n          hideBackButton\n          title={<span style={redText}>{t(\"account-settings.account-deletion.title\")}</span>}\n          titleColor=\"inherit\"\n          onBack={props.onClose}\n          style={{ marginTop: 0, marginLeft: 0 }}\n        />\n      }\n      actions={\n        <DialogActionsBox>\n          {mergeAccountEnabled ? (\n            <ActionButton\n              autoFocus\n              disabled={!selectedMergeAccount}\n              icon={<MergeIcon />}\n              onClick={requestConfirmation}\n              type=\"primary\"\n            >\n              {isTinyScreen\n                ? t(\"account-settings.account-deletion.action.merge.short\")\n                : t(\"account-settings.account-deletion.action.merge.long\")}\n            </ActionButton>\n          ) : (\n            <ActionButton autoFocus icon={<DeleteIcon />} onClick={requestConfirmation} type=\"primary\">\n              {t(\"account-settings.account-deletion.action.delete\")}\n            </ActionButton>\n          )}\n        </DialogActionsBox>\n      }\n    >\n      <DialogContent style={{ padding: 0 }}>\n        <DialogContentText style={{ marginTop: 8 }}>\n          {t(\"account-settings.account-deletion.text.1\", { accountName: props.account.name })}\n        </DialogContentText>\n        <DialogContentText style={{ display: accountData.balances.length > 0 ? undefined : \"none\", marginTop: 16 }}>\n          {t(\"account-settings.account-deletion.text.2\")}\n        </DialogContentText>\n\n        {remainingFundsContent}\n\n        <DeletionConfirmationDialog\n          merging={mergeAccountEnabled}\n          onCancel={cancelConfirmation}\n          onClose={cancelConfirmation}\n          onConfirm={onConfirm}\n          open={confirmationPending}\n        />\n        <WarningDialog\n          onClose={closeWarning}\n          open={Boolean(warning?.open)}\n          title={warning?.title || \"\"}\n          warning={warning?.text}\n        />\n      </DialogContent>\n    </DialogBody>\n  )\n}\n\ninterface AccountDeletionContainerProps {\n  account: Account\n  onClose: () => void\n  onDeleted: () => void\n}\n\nfunction AccountDeletionContainer(props: AccountDeletionContainerProps) {\n  const { deleteAccount } = React.useContext(AccountsContext)\n\n  const onDelete = () => {\n    deleteAccount(props.account.id)\n    props.onClose()\n    props.onDeleted()\n  }\n\n  return (\n    <TransactionSender account={props.account} onSubmissionCompleted={onDelete}>\n      {txContext => <AccountDeletionDialog {...props} {...txContext} onDelete={onDelete} />}\n    </TransactionSender>\n  )\n}\n\nexport default AccountDeletionContainer\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport Switch from \"@material-ui/core/Switch\"\nimport LockIcon from \"@material-ui/icons/LockOutlined\"\nimport LockOpenIcon from \"@material-ui/icons/LockOpenOutlined\"\nimport { Account, AccountsContext } from \"~App/contexts/accounts\"\nimport { NotificationsContext } from \"~App/contexts/notifications\"\nimport { useIsMobile } from \"~Generic/hooks/userinterface\"\nimport { renderFormFieldError, isWrongPasswordError } from \"~Generic/lib/errors\"\nimport { ActionButton, DialogActionsBox } from \"~Generic/components/DialogActions\"\nimport MainTitle from \"~Generic/components/MainTitle\"\nimport PasswordField from \"~Generic/components/PasswordField\"\nimport { Box, HorizontalLayout } from \"~Layout/components/Box\"\nimport DialogBody from \"~Layout/components/DialogBody\"\n\nconst adornmentLock = (\n  <InputAdornment position=\"start\">\n    <LockIcon color=\"disabled\" />\n  </InputAdornment>\n)\n\nconst adornmentLockOpen = (\n  <InputAdornment position=\"start\">\n    <LockOpenIcon color=\"disabled\" />\n  </InputAdornment>\n)\n\ninterface FormValues {\n  nextPassword: string\n  nextPasswordRepeat: string\n  prevPassword: string\n}\n\ntype Errors = { [key in keyof FormValues]?: Error | undefined }\n\nfunction useFormValidation() {\n  const { t } = useTranslation()\n  return function validate(formValues: FormValues, passwordMode: \"change\" | \"initial\" | \"remove\") {\n    const errors: Errors = {}\n\n    if (!formValues.prevPassword && passwordMode !== \"initial\") {\n      errors.prevPassword = new Error(t(\"account-settings.set-password.validation.previous-password-missing\"))\n    }\n    if (passwordMode !== \"remove\") {\n      if (!formValues.nextPassword) {\n        errors.nextPassword = new Error(t(\"account-settings.set-password.validation.next-password-missing\"))\n      }\n      if (!formValues.nextPasswordRepeat) {\n        errors.nextPasswordRepeat = new Error(\n          t(\"account-settings.set-password.validation.next-password-repeat-missing\")\n        )\n      }\n      if (formValues.nextPasswordRepeat && formValues.nextPassword !== formValues.nextPasswordRepeat) {\n        errors.nextPasswordRepeat = new Error(t(\"account-settings.set-password.validation.passwords-no-match\"))\n      }\n    }\n\n    const success = Object.keys(errors).length === 0\n    return { errors, success }\n  }\n}\n\ninterface ActionsProps {\n  isPasswordProtected: boolean\n  removePassword: boolean\n  onSubmit: () => void\n  onToggleRemovePassword: () => void\n}\n\nfunction Actions(props: ActionsProps) {\n  const isSmallScreen = useIsMobile()\n  const { t } = useTranslation()\n\n  return (\n    <DialogActionsBox smallDialog>\n      {props.isPasswordProtected ? (\n        isSmallScreen ? (\n          <ActionButton onClick={props.onToggleRemovePassword} type=\"secondary\">\n            {props.removePassword\n              ? t(\"account-settings.set-password.action.change-password.long\")\n              : t(\"account-settings.set-password.action.remove-password.long\")}\n          </ActionButton>\n        ) : (\n          <FormControlLabel\n            control={<Switch checked={props.removePassword} color=\"primary\" onChange={props.onToggleRemovePassword} />}\n            label={t(\"account-settings.set-password.action.remove-password.long\")}\n          />\n        )\n      ) : null}\n      <ActionButton icon={<LockIcon />} onClick={props.onSubmit} type=\"primary\">\n        {isSmallScreen\n          ? props.removePassword\n            ? t(\"account-settings.set-password.action.remove-password.long\")\n            : t(\"account-settings.set-password.action.change-password.short\")\n          : props.removePassword\n          ? t(\"account-settings.set-password.action.remove-password.long\")\n          : t(\"account-settings.set-password.action.change-password.long\")}\n      </ActionButton>\n    </DialogActionsBox>\n  )\n}\n\ninterface Props {\n  account: Account\n  onClose: () => void\n}\n\nfunction ChangePasswordDialog(props: Props) {\n  const Accounts = React.useContext(AccountsContext)\n  const { showError, showNotification } = React.useContext(NotificationsContext)\n  const [errors, setErrors] = React.useState<Errors>({})\n  const [formValues, setFormValues] = React.useState<FormValues>({\n    nextPassword: \"\",\n    nextPasswordRepeat: \"\",\n    prevPassword: \"\"\n  })\n  const [removingPassword, setRemovingPassword] = React.useState(false)\n  const validate = useFormValidation()\n  const { t } = useTranslation()\n\n  const changePassword = () => {\n    const { id: accountID, requiresPassword } = props.account\n    const { nextPassword, prevPassword } = formValues\n\n    const passwordMode = requiresPassword ? \"change\" : \"initial\"\n\n    const validation = validate(formValues, passwordMode)\n    setErrors(validation.errors)\n\n    if (validation.success) {\n      // TODO: Show confirmation prompt (dialog)\n      Accounts.changePassword(accountID, prevPassword, nextPassword)\n        .then(() => {\n          showNotification(\n            \"success\",\n            requiresPassword\n              ? t(\"account-settings.set-password.notification.password-changed\")\n              : t(\"account-settings.set-password.notification.password-set\")\n          )\n          props.onClose()\n        })\n        .catch(error => {\n          isWrongPasswordError(error) ? setErrors({ prevPassword: error }) : showError(error)\n        })\n    }\n  }\n  const onClose = () => {\n    props.onClose()\n    setFormValues({\n      nextPassword: \"\",\n      nextPasswordRepeat: \"\",\n      prevPassword: \"\"\n    })\n  }\n  const removePassword = () => {\n    const validation = validate(formValues, \"remove\")\n    setErrors(validation.errors)\n\n    if (validation.success) {\n      // TODO: Show confirmation prompt (dialog)\n      Accounts.removePassword(props.account.id, formValues.prevPassword)\n        .then(() => {\n          showNotification(\"success\", t(\"account-settings.set-password.notification.password-removed\"))\n          props.onClose()\n        })\n        .catch(error => {\n          isWrongPasswordError(error) ? setErrors({ prevPassword: error }) : showError(error)\n        })\n    }\n  }\n  const setFormValue = (name: keyof FormValues, value: string) => {\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n  }\n  const toggleRemovePassword = () => setRemovingPassword(!removingPassword)\n\n  return (\n    <DialogBody\n      noMaxWidth\n      preventNotchSpacing\n      top={\n        <MainTitle\n          hideBackButton\n          onBack={onClose}\n          title={\n            props.account.requiresPassword\n              ? t(\"account-settings.set-password.title.change-password\")\n              : t(\"account-settings.set-password.title.set-password\")\n          }\n        />\n      }\n      actions={\n        <DialogActions style={{ margin: \"32px 0 0\" }}>\n          <Actions\n            isPasswordProtected={props.account.requiresPassword}\n            onSubmit={removingPassword ? removePassword : changePassword}\n            onToggleRemovePassword={toggleRemovePassword}\n            removePassword={removingPassword}\n          />\n        </DialogActions>\n      }\n    >\n      <HorizontalLayout\n        alignSelf=\"center\"\n        justifyContent=\"space-evenly\"\n        margin=\"24px 0 0\"\n        width=\"calc(100% + 16px)\"\n        wrap=\"wrap\"\n      >\n        <Box basis=\"400px\" grow={0} hidden={!props.account.requiresPassword} margin=\"0 16px\" shrink>\n          <PasswordField\n            autoFocus={props.account.requiresPassword && import.meta.env.VITE_PLATFORM !== \"ios\"}\n            error={Boolean(errors.prevPassword)}\n            label={\n              errors.prevPassword\n                ? renderFormFieldError(errors.prevPassword, t)\n                : t(\"account-settings.set-password.textfield.prev-password.label\")\n            }\n            fullWidth\n            margin=\"normal\"\n            value={formValues.prevPassword}\n            onChange={event => setFormValue(\"prevPassword\", event.target.value)}\n            InputProps={{ startAdornment: adornmentLockOpen }}\n          />\n        </Box>\n        <Box basis=\"400px\" grow={0} hidden={removingPassword} margin=\"0 16px\" shrink>\n          <PasswordField\n            autoFocus={!props.account.requiresPassword && import.meta.env.VITE_PLATFORM !== \"ios\"}\n            error={Boolean(errors.nextPassword)}\n            label={\n              errors.nextPassword\n                ? renderFormFieldError(errors.nextPassword, t)\n                : t(\"account-settings.set-password.textfield.next-password.label\")\n            }\n            fullWidth\n            margin=\"normal\"\n            value={formValues.nextPassword}\n            onChange={event => setFormValue(\"nextPassword\", event.target.value)}\n            InputProps={{ startAdornment: adornmentLock }}\n          />\n          <PasswordField\n            error={Boolean(errors.nextPasswordRepeat)}\n            label={\n              errors.nextPasswordRepeat\n                ? renderFormFieldError(errors.nextPasswordRepeat, t)\n                : t(\"account-settings.set-password.textfield.next-password-repeat.label\")\n            }\n            fullWidth\n            margin=\"normal\"\n            value={formValues.nextPasswordRepeat}\n            onChange={event => setFormValue(\"nextPasswordRepeat\", event.target.value)}\n            InputProps={{ startAdornment: adornmentLock }}\n          />\n        </Box>\n      </HorizontalLayout>\n    </DialogBody>\n  )\n}\n\nexport default React.memo(ChangePasswordDialog)\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport List from \"@material-ui/core/List\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport GroupIcon from \"@material-ui/icons/Group\"\nimport KeyIcon from \"@material-ui/icons/VpnKey\"\nimport { Account } from \"~App/contexts/accounts\"\nimport { SettingsContext } from \"~App/contexts/settings\"\nimport * as routes from \"~App/routes\"\nimport { Address } from \"~Generic/components/PublicKey\"\nimport { useLiveAccountData } from \"~Generic/hooks/stellar-subscriptions\"\nimport { useIsMobile, useRouter } from \"~Generic/hooks/userinterface\"\nimport { matchesRoute } from \"~Generic/lib/routes\"\nimport Carousel from \"~Layout/components/Carousel\"\nimport ManageSignersDialog from \"~ManageSigners/components/ManageSignersDialog\"\nimport AccountDeletionDialog from \"./AccountDeletionDialog\"\nimport AccountSettingsItem from \"./AccountSettingsItem\"\nimport ChangePasswordDialog from \"./ChangePasswordDialog\"\nimport ExportKeyDialog from \"./ExportKeyDialog\"\n\nfunction SettingsDialogs(props: Props) {\n  const router = useRouter()\n\n  const showChangePassword = matchesRoute(router.location.pathname, routes.changeAccountPassword(\"*\"))\n  const showDeleteAccount = matchesRoute(router.location.pathname, routes.deleteAccount(\"*\"))\n  const showExportKey = matchesRoute(router.location.pathname, routes.exportSecretKey(\"*\"))\n  const showManageSigners = matchesRoute(router.location.pathname, routes.manageAccountSigners(\"*\"))\n\n  const navigateTo = React.useMemo(\n    () => ({\n      accountSettings: () => router.history.push(routes.accountSettings(props.account.id)),\n      allAccounts: () => router.history.push(routes.allAccounts())\n    }),\n    [router.history, props.account]\n  )\n\n  return (\n    <>\n      <div style={{ display: showChangePassword ? undefined : \"none\", height: \"100%\" }}>\n        <ChangePasswordDialog account={props.account} onClose={navigateTo.accountSettings} />\n      </div>\n      <div style={{ display: showDeleteAccount ? undefined : \"none\", height: \"100%\" }}>\n        <AccountDeletionDialog\n          account={props.account}\n          onClose={navigateTo.accountSettings}\n          onDeleted={navigateTo.allAccounts}\n        />\n      </div>\n      <div style={{ display: showExportKey ? undefined : \"none\", height: \"100%\" }}>\n        <ExportKeyDialog account={props.account} onClose={navigateTo.accountSettings} variant=\"export\" />\n      </div>\n      <div style={{ display: showManageSigners ? undefined : \"none\", height: \"100%\" }}>\n        <ManageSignersDialog account={props.account} onClose={navigateTo.accountSettings} />\n      </div>\n    </>\n  )\n}\n\ninterface SuspendedItemProps {\n  account: Account\n  listItemTextStyle?: React.CSSProperties\n  onClick: () => void\n}\n\nfunction MultiSigItem(props: SuspendedItemProps) {\n  const accountData = useLiveAccountData(props.account.accountID, props.account.testnet)\n  const isSmallScreen = useIsMobile()\n  const { t } = useTranslation()\n\n  const disabled = Boolean(\n    !accountData.balances.length || !accountData.signers.some(signer => signer.key === props.account.publicKey)\n  )\n\n  const ListItemSecondaryContent = props.account.cosignerOf ? (\n    <>\n      {t(\"account-settings.settings.multi-sig.text.secondary.cosigner-of\")}{\" \"}\n      <Address address={props.account.cosignerOf} testnet={props.account.testnet} />\n    </>\n  ) : isSmallScreen ? (\n    t(\"account-settings.settings.multi-sig.text.secondary.short\")\n  ) : (\n    t(\"account-settings.settings.multi-sig.text.secondary.long\")\n  )\n\n  return (\n    <AccountSettingsItem\n      caret=\"right\"\n      disabled={disabled}\n      icon={<GroupIcon style={{ fontSize: \"100%\" }} />}\n      onClick={props.onClick}\n    >\n      <ListItemText\n        primary={t(\"account-settings.settings.multi-sig.text.primary\")}\n        secondary={ListItemSecondaryContent}\n        style={props.listItemTextStyle}\n      />\n    </AccountSettingsItem>\n  )\n}\n\nfunction DeleteAccountItem(props: SuspendedItemProps) {\n  // call useLiveAccountData to make sure this item is suspended until the account data is available\n  // necessary because the AccountDeletion dialog needs account data and would be suspended anyways\n  useLiveAccountData(props.account.publicKey, props.account.testnet)\n  const { t } = useTranslation()\n\n  return (\n    <AccountSettingsItem caret=\"right\" icon={<DeleteIcon style={{ fontSize: \"100%\" }} />} onClick={props.onClick}>\n      <ListItemText\n        primary={t(\"account-settings.settings.delete-account.text.primary\")}\n        style={props.listItemTextStyle}\n      />\n    </AccountSettingsItem>\n  )\n}\n\ninterface Props {\n  account: Account\n}\n\nfunction AccountSettings(props: Props) {\n  const isSmallScreen = useIsMobile()\n  const router = useRouter()\n  const { t } = useTranslation()\n  const settings = React.useContext(SettingsContext)\n\n  const navigateTo = React.useMemo(\n    () => ({\n      changePassword: () => router.history.push(routes.changeAccountPassword(props.account.id)),\n      deleteAccount: () => router.history.push(routes.deleteAccount(props.account.id)),\n      exportSecretKey: () => router.history.push(routes.exportSecretKey(props.account.id)),\n      manageSigners: () => router.history.push(routes.manageAccountSigners(props.account.id))\n    }),\n    [router.history, props.account]\n  )\n\n  const showSettingsOverview = matchesRoute(router.location.pathname, routes.accountSettings(props.account.id), true)\n\n  const listItemTextStyle: React.CSSProperties = React.useMemo(\n    () => ({\n      paddingRight: isSmallScreen ? 0 : undefined\n    }),\n    [isSmallScreen]\n  )\n\n  return (\n    <Carousel current={showSettingsOverview ? 0 : 1}>\n      <List style={{ padding: isSmallScreen ? 0 : \"24px 16px\" }}>\n        <AccountSettingsItem\n          caret=\"right\"\n          icon={<KeyIcon style={{ fontSize: \"100%\" }} />}\n          onClick={navigateTo.changePassword}\n        >\n          <ListItemText\n            primary={\n              props.account.requiresPassword\n                ? t(\"account-settings.settings.set-password.text.primary.account-protected\")\n                : t(\"account-settings.settings.set-password.text.primary.account-not-protected\")\n            }\n            secondary={\n              props.account.requiresPassword\n                ? t(\"account-settings.settings.set-password.text.secondary.account-protected\")\n                : t(\"account-settings.settings.set-password.text.secondary.account-not-protected\")\n            }\n            style={listItemTextStyle}\n          />\n        </AccountSettingsItem>\n        {settings.multiSignature ? (\n          <React.Suspense fallback={null}>\n            <MultiSigItem {...props} listItemTextStyle={listItemTextStyle} onClick={navigateTo.manageSigners} />\n          </React.Suspense>\n        ) : null}\n        <AccountSettingsItem\n          caret=\"right\"\n          icon={<EyeIcon style={{ fontSize: \"100%\" }} />}\n          onClick={navigateTo.exportSecretKey}\n        >\n          <ListItemText\n            primary={t(\"account-settings.settings.export-secret-key.text.primary\")}\n            secondary={t(\"account-settings.settings.export-secret-key.text.secondary\")}\n            style={listItemTextStyle}\n          />\n        </AccountSettingsItem>\n        <React.Suspense fallback={null}>\n          <DeleteAccountItem {...props} listItemTextStyle={listItemTextStyle} onClick={navigateTo.deleteAccount} />\n        </React.Suspense>\n      </List>\n      <SettingsDialogs account={props.account} />\n    </Carousel>\n  )\n}\n\nexport default React.memo(AccountSettings)\n"],"names":["styles","ListItemSecondaryAction","React","props","ref","classes","className","other","_objectWithoutProperties","_extends","clsx","ListItemSecondaryAction$1","withStyles","RadioGroup","actions","children","name","valueProp","onChange","rootRef","_React$useRef","isControlled","_React$useState","valueState","setValue","input","value","handleChange","event","context","handleRef","useForkRef","FormGroup","RadioGroupContext","_interopRequireDefault","require$$0","RemoveRedEye","_react","require$$1","_createSvgIcon","_default","Delete","VpnKey","MultisigPresets","Type","initializeEditorState","accountData","preset","keyWeights","signer","maxKeyWeight","minKeyWeight","equalThresholds","maxThreshold","getSignatureThreshold","requiresSignatureThreshold","createTxOperations","settings","update","operations","Operation","useSignersEditor","options","useLiveAccountData","SettingsContext","txCreationPending","setTxCreationPending","rawEditorState","setRawEditorState","initialEditorState","editorState","setEditorState","prev","tx","createTransaction","submissionPromise","error","trackError","Step","Step2","MultisigEditorContext","MultisigEditorProvider","currentStep","switchToStep","contextValue","Person","NewSignerForm","isSmallScreen","useIsMobile","isTinyScreen","useIsSmallMobile","t","useTranslation","ListItem","ListItemIcon","PersonAddIcon","ListItemText","HorizontalLayout","TextField","IconButton","theme","CheckIcon","CloseIcon","ThresholdInput","setThreshold","newThreshold","ThresholdInput$1","useFormValidation","values","signers","errors","isPublicKey","isStellarAddress","existingSigner","listItemStyles","SignersEditor","accounts","AccountsContext","testnet","lookupFederationRecord","useFederationLookup","validateNewSignerValues","thresholdInputRef","isEditingNewSigner","setIsEditingNewSigner","newSignerErrors","setNewSignerErrors","newSignerValues","setNewSignerValues","editNewSigner","addSigner","removeSigner","someSignerToBeAddd","_a","createCosigner","federationRecord","cosignerPublicKey","updateNewSignerValues","prevValues","List","ButtonListItem","AddIcon","PersonIcon","Address","account","RemoveIcon","Divider","SignerSelector","Radio","SignerSelector$1","PresetDescription","description","extraDescription","Typography","DetailsEditor","selectedSigner","setSelectedSigner","accountID","showSignerSelection","selectSingleSigner","newlySelectedSigner","disabled","VerticalLayout","Box","Portal","DialogActionsBox","ActionButton","DetailsEditor$1","PresetSelectorItem","AccountSettingsItem","PresetSelector","canProceed","setPreset","RightIcon","PresetSelector$1","getUpdatedSigners","signersToAdd","signersToRemove","signersPubKeysToAdd","signersPubKeysToRemove","isNotToBeAdded","isNotToBeRemoved","updatedSigners","getWeightThreshold","validate","weightThreshold","totalKeyWeight","total","CustomError","ManageSignersDialogContent","applyUpdate","dialogActionsRef","useDialogActions","router","useRouter","baseStateRef","allDefaultKeyweights","proceedToSigners","routes.manageAccountSignersDetails","switchBackToPresets","matchesRoute","routes.manageAccountSigners","submit","baseState","samePreset","DialogBody","Carousel","ManageSignersDialog","TransactionSender","horizon","sendTransaction","ManageSignersDialog$1","MergeIcon","React.createElement","SvgIcon","redText","DeletionConfirmationDialog","ConfirmDialog","WarningDialog","AccountDeletionDialog","mergeAccountEnabled","setMergeAccountEnabled","confirmationPending","setConfirmationPending","selectedMergeAccount","setSelectedMergeAccount","warning","setWarning","cancelConfirmation","toggleMergeAccount","enabled","closeWarning","onMerge","transaction","onConfirm","requestConfirmation","remainingFundsContent","Switch","AccountSelectionList","WarnIcon","MainTitle","DeleteIcon","DialogContent","DialogContentText","AccountDeletionContainer","deleteAccount","onDelete","txContext","adornmentLock","InputAdornment","LockIcon","adornmentLockOpen","LockOpenIcon","formValues","passwordMode","success","Actions","FormControlLabel","ChangePasswordDialog","Accounts","showError","showNotification","NotificationsContext","setErrors","setFormValues","removingPassword","setRemovingPassword","changePassword","requiresPassword","nextPassword","prevPassword","validation","isWrongPasswordError","onClose","removePassword","setFormValue","toggleRemovePassword","DialogActions","PasswordField","renderFormFieldError","ChangePasswordDialog$1","SettingsDialogs","showChangePassword","routes.changeAccountPassword","showDeleteAccount","routes.deleteAccount","showExportKey","routes.exportSecretKey","showManageSigners","navigateTo","routes.accountSettings","routes.allAccounts","ExportKeyDialog","MultiSigItem","ListItemSecondaryContent","GroupIcon","DeleteAccountItem","AccountSettings","showSettingsOverview","listItemTextStyle","KeyIcon","EyeIcon","AccountSettings$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,8]}